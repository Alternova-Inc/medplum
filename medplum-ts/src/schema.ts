
/*
export interface PropertyDefinition {
  display: string;
  type: string;
  description?: string;
  array?: boolean;
  enumValues?: string[];
  targetProfile?: string[];
}

export interface TypeDefinition {
  display: string;
  properties: { [name: string]: PropertyDefinition };
  description?: string;
  backboneElement?: boolean;
}
*/
import { Schema } from './types';

export const schema: Schema = {
  "Account": {
    "display": "Account",
    "description": "A financial tool for tracking value accrued for a particular purpose.  In the healthcare field, used to track charges for a patient, cost centers, etc.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Unique identifier used to reference the account.  Might or might not be intended for human use (e.g. credit card number).",
        "type": "Identifier",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "Indicates whether the account is presently used/usable or not.",
        "type": "enum",
        "enumValues": [
          "active",
          "inactive",
          "entered-in-error",
          "on-hold",
          "unknown"
        ]
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Categorizes the account for reporting and searching purposes.",
        "type": "CodeableConcept"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "Name used for the account when displaying it to humans in reports, etc.",
        "type": "string"
      },
      "subject": {
        "key": "subject",
        "display": "Subject",
        "description": "Identifies the entity which incurs the expenses. While the immediate recipients of services or goods might be entities related to the subject, the expenses were ultimately incurred by the subject of the Account.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Device",
          "Practitioner",
          "PractitionerRole",
          "Location",
          "HealthcareService",
          "Organization"
        ],
        "array": true
      },
      "servicePeriod": {
        "key": "servicePeriod",
        "display": "Service Period",
        "description": "The date range of services associated with this account.",
        "type": "Period"
      },
      "coverage": {
        "key": "coverage",
        "display": "Coverage",
        "description": "The party(s) that are responsible for covering the payment of this account, and what order should they be applied to the account.",
        "type": "Account_Coverage",
        "array": true
      },
      "owner": {
        "key": "owner",
        "display": "Owner",
        "description": "Indicates the service area, hospital, department, etc. with responsibility for managing the Account.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "Provides additional information about what the account tracks and how it is used.",
        "type": "string"
      },
      "guarantor": {
        "key": "guarantor",
        "display": "Guarantor",
        "description": "The parties responsible for balancing the account if other payment options fall short.",
        "type": "Account_Guarantor",
        "array": true
      },
      "partOf": {
        "key": "partOf",
        "display": "Part Of",
        "description": "Reference to a parent Account.",
        "type": "Reference",
        "targetProfile": [
          "Account"
        ]
      }
    }
  },
  "Account_Coverage": {
    "display": "Account Coverage",
    "description": "The party(s) that are responsible for covering the payment of this account, and what order should they be applied to the account",
    "properties": {
      "coverage": {
        "key": "coverage",
        "display": "Coverage",
        "description": "The party(s) that contribute to payment (or part of) of the charges applied to this account (including self-pay).\n\nA coverage may only be responsible for specific types of charges, and the sequence of the coverages in the account could be important when processing billing.",
        "type": "Reference",
        "targetProfile": [
          "Coverage"
        ]
      },
      "priority": {
        "key": "priority",
        "display": "Priority",
        "description": "The priority of the coverage in the context of this account.",
        "type": "positiveInt"
      }
    },
    "backboneElement": true
  },
  "Account_Guarantor": {
    "display": "Account Guarantor",
    "description": "The parties ultimately responsible for balancing the Account",
    "properties": {
      "party": {
        "key": "party",
        "display": "Party",
        "description": "The entity who is responsible.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "RelatedPerson",
          "Organization"
        ]
      },
      "onHold": {
        "key": "onHold",
        "display": "On Hold",
        "description": "A guarantor may be placed on credit hold or otherwise have their role temporarily suspended.",
        "type": "boolean"
      },
      "period": {
        "key": "period",
        "display": "Period",
        "description": "The timeframe during which the guarantor accepts responsibility for the account.",
        "type": "Period"
      }
    },
    "backboneElement": true
  },
  "ActivityDefinition": {
    "display": "ActivityDefinition",
    "description": "This resource allows for the definition of some activity to be performed, independent of a particular patient, practitioner, or other performance context.",
    "properties": {
      "url": {
        "key": "url",
        "display": "Url",
        "description": "An absolute URI that is used to identify this activity definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this activity definition is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the activity definition is stored on different servers.",
        "type": "uri"
      },
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "A formal identifier that is used to identify this activity definition when it is represented in other formats, or referenced in a specification, model, design or an instance.",
        "type": "Identifier",
        "array": true
      },
      "version": {
        "key": "version",
        "display": "Version",
        "description": "The identifier that is used to identify this version of the activity definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the activity definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence. To provide a version consistent with the Decision Support Service specification, use the format Major.Minor.Revision (e.g. 1.0.0). For more information on versioning knowledge assets, refer to the Decision Support Service specification. Note that a version is required for non-experimental active assets.",
        "type": "string"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A natural language name identifying the activity definition. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
        "type": "string"
      },
      "title": {
        "key": "title",
        "display": "Title",
        "description": "A short, descriptive, user-friendly title for the activity definition.",
        "type": "string"
      },
      "subtitle": {
        "key": "subtitle",
        "display": "Subtitle",
        "description": "An explanatory or alternate title for the activity definition giving additional information about its content.",
        "type": "string"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of this activity definition. Enables tracking the life-cycle of the content.",
        "type": "enum",
        "enumValues": [
          "draft",
          "active",
          "retired",
          "unknown"
        ]
      },
      "experimental": {
        "key": "experimental",
        "display": "Experimental",
        "description": "A Boolean value to indicate that this activity definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
        "type": "boolean"
      },
      "subject[x]": {
        "key": "subject[x]",
        "display": "Subject[x]",
        "description": "A code or group definition that describes the intended subject of the activity being defined.",
        "type": "CodeableConcept"
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "The date  (and optionally time) when the activity definition was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the activity definition changes.",
        "type": "dateTime"
      },
      "publisher": {
        "key": "publisher",
        "display": "Publisher",
        "description": "The name of the organization or individual that published the activity definition.",
        "type": "string"
      },
      "contact": {
        "key": "contact",
        "display": "Contact",
        "description": "Contact details to assist a user in finding and communicating with the publisher.",
        "type": "ContactDetail",
        "array": true
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A free text natural language description of the activity definition from a consumer's perspective.",
        "type": "markdown"
      },
      "useContext": {
        "key": "useContext",
        "display": "Use Context",
        "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate activity definition instances.",
        "type": "UsageContext",
        "array": true
      },
      "jurisdiction": {
        "key": "jurisdiction",
        "display": "Jurisdiction",
        "description": "A legal or geographic region in which the activity definition is intended to be used.",
        "type": "CodeableConcept",
        "array": true
      },
      "purpose": {
        "key": "purpose",
        "display": "Purpose",
        "description": "Explanation of why this activity definition is needed and why it has been designed as it has.",
        "type": "markdown"
      },
      "usage": {
        "key": "usage",
        "display": "Usage",
        "description": "A detailed description of how the activity definition is used from a clinical perspective.",
        "type": "string"
      },
      "copyright": {
        "key": "copyright",
        "display": "Copyright",
        "description": "A copyright statement relating to the activity definition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the activity definition.",
        "type": "markdown"
      },
      "approvalDate": {
        "key": "approvalDate",
        "display": "Approval Date",
        "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
        "type": "date"
      },
      "lastReviewDate": {
        "key": "lastReviewDate",
        "display": "Last Review Date",
        "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
        "type": "date"
      },
      "effectivePeriod": {
        "key": "effectivePeriod",
        "display": "Effective Period",
        "description": "The period during which the activity definition content was or is planned to be in active use.",
        "type": "Period"
      },
      "topic": {
        "key": "topic",
        "display": "Topic",
        "description": "Descriptive topics related to the content of the activity. Topics provide a high-level categorization of the activity that can be useful for filtering and searching.",
        "type": "CodeableConcept",
        "array": true
      },
      "author": {
        "key": "author",
        "display": "Author",
        "description": "An individiual or organization primarily involved in the creation and maintenance of the content.",
        "type": "ContactDetail",
        "array": true
      },
      "editor": {
        "key": "editor",
        "display": "Editor",
        "description": "An individual or organization primarily responsible for internal coherence of the content.",
        "type": "ContactDetail",
        "array": true
      },
      "reviewer": {
        "key": "reviewer",
        "display": "Reviewer",
        "description": "An individual or organization primarily responsible for review of some aspect of the content.",
        "type": "ContactDetail",
        "array": true
      },
      "endorser": {
        "key": "endorser",
        "display": "Endorser",
        "description": "An individual or organization responsible for officially endorsing the content for use in some setting.",
        "type": "ContactDetail",
        "array": true
      },
      "relatedArtifact": {
        "key": "relatedArtifact",
        "display": "Related Artifact",
        "description": "Related artifacts such as additional documentation, justification, or bibliographic references.",
        "type": "RelatedArtifact",
        "array": true
      },
      "library": {
        "key": "library",
        "display": "Library",
        "description": "A reference to a Library resource containing any formal logic used by the activity definition.",
        "type": "canonical",
        "array": true
      },
      "kind": {
        "key": "kind",
        "display": "Kind",
        "description": "A description of the kind of resource the activity definition is representing. For example, a MedicationRequest, a ServiceRequest, or a CommunicationRequest. Typically, but not always, this is a Request resource.",
        "type": "enum",
        "enumValues": [
          "Kind of resource"
        ]
      },
      "profile": {
        "key": "profile",
        "display": "Profile",
        "description": "A profile to which the target of the activity definition is expected to conform.",
        "type": "canonical"
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "Detailed description of the type of activity; e.g. What lab test, what procedure, what kind of encounter.",
        "type": "CodeableConcept"
      },
      "intent": {
        "key": "intent",
        "display": "Intent",
        "description": "Indicates the level of authority/intentionality associated with the activity and where the request should fit into the workflow chain.",
        "type": "enum",
        "enumValues": [
          "proposal",
          "plan",
          "directive",
          "order",
          "original-order",
          "reflex-order",
          "filler-order",
          "instance-order",
          "option"
        ]
      },
      "priority": {
        "key": "priority",
        "display": "Priority",
        "description": "Indicates how quickly the activity  should be addressed with respect to other requests.",
        "type": "enum",
        "enumValues": [
          "routine",
          "urgent",
          "asap",
          "stat"
        ]
      },
      "doNotPerform": {
        "key": "doNotPerform",
        "display": "Do Not Perform",
        "description": "Set this to true if the definition is to indicate that a particular activity should NOT be performed. If true, this element should be interpreted to reinforce a negative coding. For example NPO as a code with a doNotPerform of true would still indicate to NOT perform the action.",
        "type": "boolean"
      },
      "timing[x]": {
        "key": "timing[x]",
        "display": "Timing[x]",
        "description": "The period, timing or frequency upon which the described activity is to occur.",
        "type": "Timing"
      },
      "location": {
        "key": "location",
        "display": "Location",
        "description": "Identifies the facility where the activity will occur; e.g. home, hospital, specific clinic, etc.",
        "type": "Reference",
        "targetProfile": [
          "Location"
        ]
      },
      "participant": {
        "key": "participant",
        "display": "Participant",
        "description": "Indicates who should participate in performing the action described.",
        "type": "ActivityDefinition_Participant",
        "array": true
      },
      "product[x]": {
        "key": "product[x]",
        "display": "Product[x]",
        "description": "Identifies the food, drug or other product being consumed or supplied in the activity.",
        "type": "Reference",
        "targetProfile": [
          "Medication",
          "Substance"
        ]
      },
      "quantity": {
        "key": "quantity",
        "display": "Quantity",
        "description": "Identifies the quantity expected to be consumed at once (per dose, per meal, etc.).",
        "type": "Quantity"
      },
      "dosage": {
        "key": "dosage",
        "display": "Dosage",
        "description": "Provides detailed dosage instructions in the same way that they are described for MedicationRequest resources.",
        "type": "Dosage",
        "array": true
      },
      "bodySite": {
        "key": "bodySite",
        "display": "Body Site",
        "description": "Indicates the sites on the subject's body where the procedure should be performed (I.e. the target sites).",
        "type": "CodeableConcept",
        "array": true
      },
      "specimenRequirement": {
        "key": "specimenRequirement",
        "display": "Specimen Requirement",
        "description": "Defines specimen requirements for the action to be performed, such as required specimens for a lab test.",
        "type": "Reference",
        "targetProfile": [
          "SpecimenDefinition"
        ],
        "array": true
      },
      "observationRequirement": {
        "key": "observationRequirement",
        "display": "Observation Requirement",
        "description": "Defines observation requirements for the action to be performed, such as body weight or surface area.",
        "type": "Reference",
        "targetProfile": [
          "ObservationDefinition"
        ],
        "array": true
      },
      "observationResultRequirement": {
        "key": "observationResultRequirement",
        "display": "Observation Result Requirement",
        "description": "Defines the observations that are expected to be produced by the action.",
        "type": "Reference",
        "targetProfile": [
          "ObservationDefinition"
        ],
        "array": true
      },
      "transform": {
        "key": "transform",
        "display": "Transform",
        "description": "A reference to a StructureMap resource that defines a transform that can be executed to produce the intent resource using the ActivityDefinition instance as the input.",
        "type": "canonical"
      },
      "dynamicValue": {
        "key": "dynamicValue",
        "display": "Dynamic Value",
        "description": "Dynamic values that will be evaluated to produce values for elements of the resulting resource. For example, if the dosage of a medication must be computed based on the patient's weight, a dynamic value would be used to specify an expression that calculated the weight, and the path on the request resource that would contain the result.",
        "type": "ActivityDefinition_DynamicValue",
        "array": true
      }
    }
  },
  "ActivityDefinition_Participant": {
    "display": "Activity Definition Participant",
    "description": "Who should participate in the action",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The type of participant in the action.",
        "type": "enum",
        "enumValues": [
          "patient",
          "practitioner",
          "related-person",
          "device"
        ]
      },
      "role": {
        "key": "role",
        "display": "Role",
        "description": "The role the participant should play in performing the described action.",
        "type": "CodeableConcept"
      }
    },
    "backboneElement": true
  },
  "ActivityDefinition_DynamicValue": {
    "display": "Activity Definition Dynamic Value",
    "description": "Dynamic aspects of the definition",
    "properties": {
      "path": {
        "key": "path",
        "display": "Path",
        "description": "The path to the element to be customized. This is the path on the resource that will hold the result of the calculation defined by the expression. The specified path SHALL be a FHIRPath resolveable on the specified target type of the ActivityDefinition, and SHALL consist only of identifiers, constant indexers, and a restricted subset of functions. The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details).",
        "type": "string"
      },
      "expression": {
        "key": "expression",
        "display": "Expression",
        "description": "An expression specifying the value of the customized element.",
        "type": "Expression"
      }
    },
    "backboneElement": true
  },
  "AdverseEvent": {
    "display": "AdverseEvent",
    "description": "Actual or  potential/avoided event causing unintended physical injury resulting from or contributed to by medical care, a research study or other healthcare setting factors that requires additional monitoring, treatment, or hospitalization, or that results in death.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Business identifiers assigned to this adverse event by the performer or other systems which remain constant as the resource is updated and propagates from server to server.",
        "type": "Identifier"
      },
      "actuality": {
        "key": "actuality",
        "display": "Actuality",
        "description": "Whether the event actually happened, or just had the potential to. Note that this is independent of whether anyone was affected or harmed or how severely.",
        "type": "enum",
        "enumValues": [
          "actual",
          "potential"
        ]
      },
      "category": {
        "key": "category",
        "display": "Category",
        "description": "The overall type of event, intended for search and filtering purposes.",
        "type": "CodeableConcept",
        "array": true
      },
      "event": {
        "key": "event",
        "display": "Event",
        "description": "This element defines the specific type of event that occurred or that was prevented from occurring.",
        "type": "CodeableConcept"
      },
      "subject": {
        "key": "subject",
        "display": "Subject",
        "description": "This subject or group impacted by the event.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Group",
          "Practitioner",
          "RelatedPerson"
        ]
      },
      "encounter": {
        "key": "encounter",
        "display": "Encounter",
        "description": "The Encounter during which AdverseEvent was created or to which the creation of this record is tightly associated.",
        "type": "Reference",
        "targetProfile": [
          "Encounter"
        ]
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "The date (and perhaps time) when the adverse event occurred.",
        "type": "dateTime"
      },
      "detected": {
        "key": "detected",
        "display": "Detected",
        "description": "Estimated or actual date the AdverseEvent began, in the opinion of the reporter.",
        "type": "dateTime"
      },
      "recordedDate": {
        "key": "recordedDate",
        "display": "Recorded Date",
        "description": "The date on which the existence of the AdverseEvent was first recorded.",
        "type": "dateTime"
      },
      "resultingCondition": {
        "key": "resultingCondition",
        "display": "Resulting Condition",
        "description": "Includes information about the reaction that occurred as a result of exposure to a substance (for example, a drug or a chemical).",
        "type": "Reference",
        "targetProfile": [
          "Condition"
        ],
        "array": true
      },
      "location": {
        "key": "location",
        "display": "Location",
        "description": "The information about where the adverse event occurred.",
        "type": "Reference",
        "targetProfile": [
          "Location"
        ]
      },
      "seriousness": {
        "key": "seriousness",
        "display": "Seriousness",
        "description": "Assessment whether this event was of real importance.",
        "type": "CodeableConcept"
      },
      "severity": {
        "key": "severity",
        "display": "Severity",
        "description": "Describes the severity of the adverse event, in relation to the subject. Contrast to AdverseEvent.seriousness - a severe rash might not be serious, but a mild heart problem is.",
        "type": "CodeableConcept"
      },
      "outcome": {
        "key": "outcome",
        "display": "Outcome",
        "description": "Describes the type of outcome from the adverse event.",
        "type": "CodeableConcept"
      },
      "recorder": {
        "key": "recorder",
        "display": "Recorder",
        "description": "Information on who recorded the adverse event.  May be the patient or a practitioner.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Practitioner",
          "PractitionerRole",
          "RelatedPerson"
        ]
      },
      "contributor": {
        "key": "contributor",
        "display": "Contributor",
        "description": "Parties that may or should contribute or have contributed information to the adverse event, which can consist of one or more activities.  Such information includes information leading to the decision to perform the activity and how to perform the activity (e.g. consultant), information that the activity itself seeks to reveal (e.g. informant of clinical history), or information about what activity was performed (e.g. informant witness).",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Device"
        ],
        "array": true
      },
      "suspectEntity": {
        "key": "suspectEntity",
        "display": "Suspect Entity",
        "description": "Describes the entity that is suspected to have caused the adverse event.",
        "type": "AdverseEvent_SuspectEntity",
        "array": true
      },
      "subjectMedicalHistory": {
        "key": "subjectMedicalHistory",
        "display": "Subject Medical History",
        "description": "AdverseEvent.subjectMedicalHistory.",
        "type": "Reference",
        "targetProfile": [
          "Condition",
          "Observation",
          "AllergyIntolerance",
          "FamilyMemberHistory",
          "Immunization",
          "Procedure",
          "Media",
          "DocumentReference"
        ],
        "array": true
      },
      "referenceDocument": {
        "key": "referenceDocument",
        "display": "Reference Document",
        "description": "AdverseEvent.referenceDocument.",
        "type": "Reference",
        "targetProfile": [
          "DocumentReference"
        ],
        "array": true
      },
      "study": {
        "key": "study",
        "display": "Study",
        "description": "AdverseEvent.study.",
        "type": "Reference",
        "targetProfile": [
          "ResearchStudy"
        ],
        "array": true
      }
    }
  },
  "AdverseEvent_SuspectEntity": {
    "display": "Adverse Event Suspect Entity",
    "description": "The suspected agent causing the adverse event",
    "properties": {
      "instance": {
        "key": "instance",
        "display": "Instance",
        "description": "Identifies the actual instance of what caused the adverse event.  May be a substance, medication, medication administration, medication statement or a device.",
        "type": "Reference",
        "targetProfile": [
          "Immunization",
          "Procedure",
          "Substance",
          "Medication",
          "MedicationAdministration",
          "MedicationStatement",
          "Device"
        ]
      },
      "causality": {
        "key": "causality",
        "display": "Causality",
        "description": "Information on the possible cause of the event.",
        "type": "AdverseEvent_SuspectEntity_Causality",
        "array": true
      }
    },
    "backboneElement": true
  },
  "AdverseEvent_SuspectEntity_Causality": {
    "display": "Adverse Event Suspect Entity_ Causality",
    "description": "Information on the possible cause of the event",
    "properties": {
      "assessment": {
        "key": "assessment",
        "display": "Assessment",
        "description": "Assessment of if the entity caused the event.",
        "type": "CodeableConcept"
      },
      "productRelatedness": {
        "key": "productRelatedness",
        "display": "Product Relatedness",
        "description": "AdverseEvent.suspectEntity.causalityProductRelatedness.",
        "type": "string"
      },
      "author": {
        "key": "author",
        "display": "Author",
        "description": "AdverseEvent.suspectEntity.causalityAuthor.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole"
        ]
      },
      "method": {
        "key": "method",
        "display": "Method",
        "description": "ProbabilityScale | Bayesian | Checklist.",
        "type": "CodeableConcept"
      }
    },
    "backboneElement": true
  },
  "AllergyIntolerance": {
    "display": "AllergyIntolerance",
    "description": "Risk of harmful or undesirable, physiological response which is unique to an individual and associated with exposure to a substance.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Business identifiers assigned to this AllergyIntolerance by the performer or other systems which remain constant as the resource is updated and propagates from server to server.",
        "type": "Identifier",
        "array": true
      },
      "clinicalStatus": {
        "key": "clinicalStatus",
        "display": "Clinical Status",
        "description": "The clinical status of the allergy or intolerance.",
        "type": "CodeableConcept"
      },
      "verificationStatus": {
        "key": "verificationStatus",
        "display": "Verification Status",
        "description": "Assertion about certainty associated with the propensity, or potential risk, of a reaction to the identified substance (including pharmaceutical product).",
        "type": "CodeableConcept"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Identification of the underlying physiological mechanism for the reaction risk.",
        "type": "enum",
        "enumValues": [
          "allergy",
          "intolerance - Underlying mechanism (if known)"
        ]
      },
      "category": {
        "key": "category",
        "display": "Category",
        "description": "Category of the identified substance.",
        "type": "enum",
        "enumValues": [
          "food",
          "medication",
          "environment",
          "biologic"
        ],
        "array": true
      },
      "criticality": {
        "key": "criticality",
        "display": "Criticality",
        "description": "Estimate of the potential clinical harm, or seriousness, of the reaction to the identified substance.",
        "type": "enum",
        "enumValues": [
          "low",
          "high",
          "unable-to-assess"
        ]
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "Code for an allergy or intolerance statement (either a positive or a negated/excluded statement).  This may be a code for a substance or pharmaceutical product that is considered to be responsible for the adverse reaction risk (e.g., \"Latex\"), an allergy or intolerance condition (e.g., \"Latex allergy\"), or a negated/excluded code for a specific substance or class (e.g., \"No latex allergy\") or a general or categorical negated statement (e.g.,  \"No known allergy\", \"No known drug allergies\").  Note: the substance for a specific reaction may be different from the substance identified as the cause of the risk, but it must be consistent with it. For instance, it may be a more specific substance (e.g. a brand medication) or a composite product that includes the identified substance. It must be clinically safe to only process the 'code' and ignore the 'reaction.substance'.  If a receiving system is unable to confirm that AllergyIntolerance.reaction.substance falls within the semantic scope of AllergyIntolerance.code, then the receiving system should ignore AllergyIntolerance.reaction.substance.",
        "type": "CodeableConcept"
      },
      "patient": {
        "key": "patient",
        "display": "Patient",
        "description": "The patient who has the allergy or intolerance.",
        "type": "Reference",
        "targetProfile": [
          "Patient"
        ]
      },
      "encounter": {
        "key": "encounter",
        "display": "Encounter",
        "description": "The encounter when the allergy or intolerance was asserted.",
        "type": "Reference",
        "targetProfile": [
          "Encounter"
        ]
      },
      "onset[x]": {
        "key": "onset[x]",
        "display": "Onset[x]",
        "description": "Estimated or actual date,  date-time, or age when allergy or intolerance was identified.",
        "type": "dateTime"
      },
      "recordedDate": {
        "key": "recordedDate",
        "display": "Recorded Date",
        "description": "The recordedDate represents when this particular AllergyIntolerance record was created in the system, which is often a system-generated date.",
        "type": "dateTime"
      },
      "recorder": {
        "key": "recorder",
        "display": "Recorder",
        "description": "Individual who recorded the record and takes responsibility for its content.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Patient",
          "RelatedPerson"
        ]
      },
      "asserter": {
        "key": "asserter",
        "display": "Asserter",
        "description": "The source of the information about the allergy that is recorded.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "RelatedPerson",
          "Practitioner",
          "PractitionerRole"
        ]
      },
      "lastOccurrence": {
        "key": "lastOccurrence",
        "display": "Last Occurrence",
        "description": "Represents the date and/or time of the last known occurrence of a reaction event.",
        "type": "dateTime"
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "Additional narrative about the propensity for the Adverse Reaction, not captured in other fields.",
        "type": "Annotation",
        "array": true
      },
      "reaction": {
        "key": "reaction",
        "display": "Reaction",
        "description": "Details about each adverse reaction event linked to exposure to the identified substance.",
        "type": "AllergyIntolerance_Reaction",
        "array": true
      }
    }
  },
  "AllergyIntolerance_Reaction": {
    "display": "Allergy Intolerance Reaction",
    "description": "Adverse Reaction Events linked to exposure to substance",
    "properties": {
      "substance": {
        "key": "substance",
        "display": "Substance",
        "description": "Identification of the specific substance (or pharmaceutical product) considered to be responsible for the Adverse Reaction event. Note: the substance for a specific reaction may be different from the substance identified as the cause of the risk, but it must be consistent with it. For instance, it may be a more specific substance (e.g. a brand medication) or a composite product that includes the identified substance. It must be clinically safe to only process the 'code' and ignore the 'reaction.substance'.  If a receiving system is unable to confirm that AllergyIntolerance.reaction.substance falls within the semantic scope of AllergyIntolerance.code, then the receiving system should ignore AllergyIntolerance.reaction.substance.",
        "type": "CodeableConcept"
      },
      "manifestation": {
        "key": "manifestation",
        "display": "Manifestation",
        "description": "Clinical symptoms and/or signs that are observed or associated with the adverse reaction event.",
        "type": "CodeableConcept",
        "array": true
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "Text description about the reaction as a whole, including details of the manifestation if required.",
        "type": "string"
      },
      "onset": {
        "key": "onset",
        "display": "Onset",
        "description": "Record of the date and/or time of the onset of the Reaction.",
        "type": "dateTime"
      },
      "severity": {
        "key": "severity",
        "display": "Severity",
        "description": "Clinical assessment of the severity of the reaction event as a whole, potentially considering multiple different manifestations.",
        "type": "enum",
        "enumValues": [
          "mild",
          "moderate",
          "severe (of event as a whole)"
        ]
      },
      "exposureRoute": {
        "key": "exposureRoute",
        "display": "Exposure Route",
        "description": "Identification of the route by which the subject was exposed to the substance.",
        "type": "CodeableConcept"
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "Additional text about the adverse reaction event not captured in other fields.",
        "type": "Annotation",
        "array": true
      }
    },
    "backboneElement": true
  },
  "Appointment": {
    "display": "Appointment",
    "description": "A booking of a healthcare event among patient(s), practitioner(s), related person(s) and/or device(s) for a specific date/time. This may result in one or more Encounter(s).",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "This records identifiers associated with this appointment concern that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate (e.g. in CDA documents, or in written / printed documentation).",
        "type": "Identifier",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The overall status of the Appointment. Each of the participants has their own participation status which indicates their involvement in the process, however this status indicates the shared status.",
        "type": "enum",
        "enumValues": [
          "proposed",
          "pending",
          "booked",
          "arrived",
          "fulfilled",
          "cancelled",
          "noshow",
          "entered-in-error",
          "checked-in",
          "waitlist"
        ]
      },
      "cancelationReason": {
        "key": "cancelationReason",
        "display": "Cancelation Reason",
        "description": "The coded reason for the appointment being cancelled. This is often used in reporting/billing/futher processing to determine if further actions are required, or specific fees apply.",
        "type": "CodeableConcept"
      },
      "serviceCategory": {
        "key": "serviceCategory",
        "display": "Service Category",
        "description": "A broad categorization of the service that is to be performed during this appointment.",
        "type": "CodeableConcept",
        "array": true
      },
      "serviceType": {
        "key": "serviceType",
        "display": "Service Type",
        "description": "The specific service that is to be performed during this appointment.",
        "type": "CodeableConcept",
        "array": true
      },
      "specialty": {
        "key": "specialty",
        "display": "Specialty",
        "description": "The specialty of a practitioner that would be required to perform the service requested in this appointment.",
        "type": "CodeableConcept",
        "array": true
      },
      "appointmentType": {
        "key": "appointmentType",
        "display": "Appointment Type",
        "description": "The style of appointment or patient that has been booked in the slot (not service type).",
        "type": "CodeableConcept"
      },
      "reasonCode": {
        "key": "reasonCode",
        "display": "Reason Code",
        "description": "The coded reason that this appointment is being scheduled. This is more clinical than administrative.",
        "type": "CodeableConcept",
        "array": true
      },
      "reasonReference": {
        "key": "reasonReference",
        "display": "Reason Reference",
        "description": "Reason the appointment has been scheduled to take place, as specified using information from another resource. When the patient arrives and the encounter begins it may be used as the admission diagnosis. The indication will typically be a Condition (with other resources referenced in the evidence.detail), or a Procedure.",
        "type": "Reference",
        "targetProfile": [
          "Condition",
          "Procedure",
          "Observation",
          "ImmunizationRecommendation"
        ],
        "array": true
      },
      "priority": {
        "key": "priority",
        "display": "Priority",
        "description": "The priority of the appointment. Can be used to make informed decisions if needing to re-prioritize appointments. (The iCal Standard specifies 0 as undefined, 1 as highest, 9 as lowest priority).",
        "type": "unsignedInt"
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "The brief description of the appointment as would be shown on a subject line in a meeting request, or appointment list. Detailed or expanded information should be put in the comment field.",
        "type": "string"
      },
      "supportingInformation": {
        "key": "supportingInformation",
        "display": "Supporting Information",
        "description": "Additional information to support the appointment provided when making the appointment.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ],
        "array": true
      },
      "start": {
        "key": "start",
        "display": "Start",
        "description": "Date/Time that the appointment is to take place.",
        "type": "instant"
      },
      "end": {
        "key": "end",
        "display": "End",
        "description": "Date/Time that the appointment is to conclude.",
        "type": "instant"
      },
      "minutesDuration": {
        "key": "minutesDuration",
        "display": "Minutes Duration",
        "description": "Number of minutes that the appointment is to take. This can be less than the duration between the start and end times.  For example, where the actual time of appointment is only an estimate or if a 30 minute appointment is being requested, but any time would work.  Also, if there is, for example, a planned 15 minute break in the middle of a long appointment, the duration may be 15 minutes less than the difference between the start and end.",
        "type": "positiveInt"
      },
      "slot": {
        "key": "slot",
        "display": "Slot",
        "description": "The slots from the participants' schedules that will be filled by the appointment.",
        "type": "Reference",
        "targetProfile": [
          "Slot"
        ],
        "array": true
      },
      "created": {
        "key": "created",
        "display": "Created",
        "description": "The date that this appointment was initially created. This could be different to the meta.lastModified value on the initial entry, as this could have been before the resource was created on the FHIR server, and should remain unchanged over the lifespan of the appointment.",
        "type": "dateTime"
      },
      "comment": {
        "key": "comment",
        "display": "Comment",
        "description": "Additional comments about the appointment.",
        "type": "string"
      },
      "patientInstruction": {
        "key": "patientInstruction",
        "display": "Patient Instruction",
        "description": "While Appointment.comment contains information for internal use, Appointment.patientInstructions is used to capture patient facing information about the Appointment (e.g. please bring your referral or fast from 8pm night before).",
        "type": "string"
      },
      "basedOn": {
        "key": "basedOn",
        "display": "Based On",
        "description": "The service request this appointment is allocated to assess (e.g. incoming referral or procedure request).",
        "type": "Reference",
        "targetProfile": [
          "ServiceRequest"
        ],
        "array": true
      },
      "participant": {
        "key": "participant",
        "display": "Participant",
        "description": "List of participants involved in the appointment.",
        "type": "Appointment_Participant",
        "array": true
      },
      "requestedPeriod": {
        "key": "requestedPeriod",
        "display": "Requested Period",
        "description": "A set of date ranges (potentially including times) that the appointment is preferred to be scheduled within.\n\nThe duration (usually in minutes) could also be provided to indicate the length of the appointment to fill and populate the start/end times for the actual allocated time. However, in other situations the duration may be calculated by the scheduling system.",
        "type": "Period",
        "array": true
      }
    }
  },
  "Appointment_Participant": {
    "display": "Appointment Participant",
    "description": "Participants involved in appointment",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Role of participant in the appointment.",
        "type": "CodeableConcept",
        "array": true
      },
      "actor": {
        "key": "actor",
        "display": "Actor",
        "description": "A Person, Location/HealthcareService or Device that is participating in the appointment.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Practitioner",
          "PractitionerRole",
          "RelatedPerson",
          "Device",
          "HealthcareService",
          "Location"
        ]
      },
      "required": {
        "key": "required",
        "display": "Required",
        "description": "Whether this participant is required to be present at the meeting. This covers a use-case where two doctors need to meet to discuss the results for a specific patient, and the patient is not required to be present.",
        "type": "enum",
        "enumValues": [
          "required",
          "optional",
          "information-only"
        ]
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "Participation status of the actor.",
        "type": "enum",
        "enumValues": [
          "accepted",
          "declined",
          "tentative",
          "needs-action"
        ]
      },
      "period": {
        "key": "period",
        "display": "Period",
        "description": "Participation period of the actor.",
        "type": "Period"
      }
    },
    "backboneElement": true
  },
  "AppointmentResponse": {
    "display": "AppointmentResponse",
    "description": "A reply to an appointment request for a patient and/or practitioner(s), such as a confirmation or rejection.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "This records identifiers associated with this appointment response concern that are defined by business processes and/ or used to refer to it when a direct URL reference to the resource itself is not appropriate.",
        "type": "Identifier",
        "array": true
      },
      "appointment": {
        "key": "appointment",
        "display": "Appointment",
        "description": "Appointment that this response is replying to.",
        "type": "Reference",
        "targetProfile": [
          "Appointment"
        ]
      },
      "start": {
        "key": "start",
        "display": "Start",
        "description": "Date/Time that the appointment is to take place, or requested new start time.",
        "type": "instant"
      },
      "end": {
        "key": "end",
        "display": "End",
        "description": "This may be either the same as the appointment request to confirm the details of the appointment, or alternately a new time to request a re-negotiation of the end time.",
        "type": "instant"
      },
      "participantType": {
        "key": "participantType",
        "display": "Participant Type",
        "description": "Role of participant in the appointment.",
        "type": "CodeableConcept",
        "array": true
      },
      "actor": {
        "key": "actor",
        "display": "Actor",
        "description": "A Person, Location, HealthcareService, or Device that is participating in the appointment.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Practitioner",
          "PractitionerRole",
          "RelatedPerson",
          "Device",
          "HealthcareService",
          "Location"
        ]
      },
      "participantStatus": {
        "key": "participantStatus",
        "display": "Participant Status",
        "description": "Participation status of the participant. When the status is declined or tentative if the start/end times are different to the appointment, then these times should be interpreted as a requested time change. When the status is accepted, the times can either be the time of the appointment (as a confirmation of the time) or can be empty.",
        "type": "enum",
        "enumValues": [
          "accepted",
          "declined",
          "tentative",
          "needs-action"
        ]
      },
      "comment": {
        "key": "comment",
        "display": "Comment",
        "description": "Additional comments about the appointment.",
        "type": "string"
      }
    }
  },
  "AuditEvent": {
    "display": "AuditEvent",
    "description": "A record of an event made for purposes of maintaining a security log. Typical uses include detection of intrusion attempts and monitoring for inappropriate usage.",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Identifier for a family of the event.  For example, a menu item, program, rule, policy, function code, application name or URL. It identifies the performed function.",
        "type": "Coding"
      },
      "subtype": {
        "key": "subtype",
        "display": "Subtype",
        "description": "Identifier for the category of event.",
        "type": "Coding",
        "array": true
      },
      "action": {
        "key": "action",
        "display": "Action",
        "description": "Indicator for type of action performed during the event that generated the audit.",
        "type": "enum",
        "enumValues": [
          "Type of action performed during the event"
        ]
      },
      "period": {
        "key": "period",
        "display": "Period",
        "description": "The period during which the activity occurred.",
        "type": "Period"
      },
      "recorded": {
        "key": "recorded",
        "display": "Recorded",
        "description": "The time when the event was recorded.",
        "type": "instant"
      },
      "outcome": {
        "key": "outcome",
        "display": "Outcome",
        "description": "Indicates whether the event succeeded or failed.",
        "type": "enum",
        "enumValues": [
          "Whether the event succeeded or failed"
        ]
      },
      "outcomeDesc": {
        "key": "outcomeDesc",
        "display": "Outcome Desc",
        "description": "A free text description of the outcome of the event.",
        "type": "string"
      },
      "purposeOfEvent": {
        "key": "purposeOfEvent",
        "display": "Purpose Of Event",
        "description": "The purposeOfUse (reason) that was used during the event being recorded.",
        "type": "CodeableConcept",
        "array": true
      },
      "agent": {
        "key": "agent",
        "display": "Agent",
        "description": "An actor taking an active role in the event or activity that is logged.",
        "type": "AuditEvent_Agent",
        "array": true
      },
      "source": {
        "key": "source",
        "display": "Source",
        "description": "The system that is reporting the event.",
        "type": "AuditEvent_Source"
      },
      "entity": {
        "key": "entity",
        "display": "Entity",
        "description": "Specific instances of data or objects that have been accessed.",
        "type": "AuditEvent_Entity",
        "array": true
      }
    }
  },
  "AuditEvent_Agent": {
    "display": "Audit Event Agent",
    "description": "Actor involved in the event",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Specification of the participation type the user plays when performing the event.",
        "type": "CodeableConcept"
      },
      "role": {
        "key": "role",
        "display": "Role",
        "description": "The security role that the user was acting under, that come from local codes defined by the access control security system (e.g. RBAC, ABAC) used in the local context.",
        "type": "CodeableConcept",
        "array": true
      },
      "who": {
        "key": "who",
        "display": "Who",
        "description": "Reference to who this agent is that was involved in the event.",
        "type": "Reference",
        "targetProfile": [
          "PractitionerRole",
          "Practitioner",
          "Organization",
          "Device",
          "Patient",
          "RelatedPerson"
        ]
      },
      "altId": {
        "key": "altId",
        "display": "Alt Id",
        "description": "Alternative agent Identifier. For a human, this should be a user identifier text string from authentication system. This identifier would be one known to a common authentication system (e.g. single sign-on), if available.",
        "type": "string"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "Human-meaningful name for the agent.",
        "type": "string"
      },
      "requestor": {
        "key": "requestor",
        "display": "Requestor",
        "description": "Indicator that the user is or is not the requestor, or initiator, for the event being audited.",
        "type": "boolean"
      },
      "location": {
        "key": "location",
        "display": "Location",
        "description": "Where the event occurred.",
        "type": "Reference",
        "targetProfile": [
          "Location"
        ]
      },
      "policy": {
        "key": "policy",
        "display": "Policy",
        "description": "The policy or plan that authorized the activity being recorded. Typically, a single activity may have multiple applicable policies, such as patient consent, guarantor funding, etc. The policy would also indicate the security token used.",
        "type": "uri",
        "array": true
      },
      "media": {
        "key": "media",
        "display": "Media",
        "description": "Type of media involved. Used when the event is about exporting/importing onto media.",
        "type": "Coding"
      },
      "network": {
        "key": "network",
        "display": "Network",
        "description": "Logical network location for application activity, if the activity has a network location.",
        "type": "AuditEvent_Agent_Network"
      },
      "purposeOfUse": {
        "key": "purposeOfUse",
        "display": "Purpose Of Use",
        "description": "The reason (purpose of use), specific to this agent, that was used during the event being recorded.",
        "type": "CodeableConcept",
        "array": true
      }
    },
    "backboneElement": true
  },
  "AuditEvent_Agent_Network": {
    "display": "Audit Event Agent_ Network",
    "description": "Logical network location for application activity",
    "properties": {
      "address": {
        "key": "address",
        "display": "Address",
        "description": "An identifier for the network access point of the user device for the audit event.",
        "type": "string"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "An identifier for the type of network access point that originated the audit event.",
        "type": "enum",
        "enumValues": [
          "The type of network access point"
        ]
      }
    },
    "backboneElement": true
  },
  "AuditEvent_Source": {
    "display": "Audit Event Source",
    "description": "Audit Event Reporter",
    "properties": {
      "site": {
        "key": "site",
        "display": "Site",
        "description": "Logical source location within the healthcare enterprise network.  For example, a hospital or other provider location within a multi-entity provider group.",
        "type": "string"
      },
      "observer": {
        "key": "observer",
        "display": "Observer",
        "description": "Identifier of the source where the event was detected.",
        "type": "Reference",
        "targetProfile": [
          "PractitionerRole",
          "Practitioner",
          "Organization",
          "Device",
          "Patient",
          "RelatedPerson"
        ]
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Code specifying the type of source where event originated.",
        "type": "Coding",
        "array": true
      }
    },
    "backboneElement": true
  },
  "AuditEvent_Entity": {
    "display": "Audit Event Entity",
    "description": "Data or objects used",
    "properties": {
      "what": {
        "key": "what",
        "display": "What",
        "description": "Identifies a specific instance of the entity. The reference should be version specific.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ]
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The type of the object that was involved in this audit event.",
        "type": "Coding"
      },
      "role": {
        "key": "role",
        "display": "Role",
        "description": "Code representing the role the entity played in the event being audited.",
        "type": "Coding"
      },
      "lifecycle": {
        "key": "lifecycle",
        "display": "Lifecycle",
        "description": "Identifier for the data life-cycle stage for the entity.",
        "type": "Coding"
      },
      "securityLabel": {
        "key": "securityLabel",
        "display": "Security Label",
        "description": "Security labels for the identified entity.",
        "type": "Coding",
        "array": true
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A name of the entity in the audit event.",
        "type": "string"
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "Text that describes the entity in more detail.",
        "type": "string"
      },
      "query": {
        "key": "query",
        "display": "Query",
        "description": "The query parameters for a query-type entities.",
        "type": "base64Binary"
      },
      "detail": {
        "key": "detail",
        "display": "Detail",
        "description": "Tagged value pairs for conveying additional information about the entity.",
        "type": "AuditEvent_Entity_Detail",
        "array": true
      }
    },
    "backboneElement": true
  },
  "AuditEvent_Entity_Detail": {
    "display": "Audit Event Entity_ Detail",
    "description": "Additional Information about the entity",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The type of extra detail provided in the value.",
        "type": "string"
      },
      "value[x]": {
        "key": "value[x]",
        "display": "Value[x]",
        "description": "The  value of the extra detail.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "Basic": {
    "display": "Basic",
    "description": "Basic is used for handling concepts not yet defined in FHIR, narrative-only resources that don't map to an existing resource, and custom resources not appropriate for inclusion in the FHIR specification.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Identifier assigned to the resource for business purposes, outside the context of FHIR.",
        "type": "Identifier",
        "array": true
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "Identifies the 'type' of resource - equivalent to the resource name for other resources.",
        "type": "CodeableConcept"
      },
      "subject": {
        "key": "subject",
        "display": "Subject",
        "description": "Identifies the patient, practitioner, device or any other resource that is the \"focus\" of this resource.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ]
      },
      "created": {
        "key": "created",
        "display": "Created",
        "description": "Identifies when the resource was first created.",
        "type": "date"
      },
      "author": {
        "key": "author",
        "display": "Author",
        "description": "Indicates who was responsible for creating the resource instance.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Patient",
          "RelatedPerson",
          "Organization"
        ]
      }
    }
  },
  "Binary": {
    "display": "Binary",
    "description": "A resource that represents the data of a single raw artifact as digital content accessible in its native format.  A Binary resource can contain any content, whether text, image, pdf, zip archive, etc.",
    "properties": {
      "contentType": {
        "key": "contentType",
        "display": "Content Type",
        "description": "MimeType of the binary content represented as a standard MimeType (BCP 13).",
        "type": "enum",
        "enumValues": [
          "MimeType of the binary content"
        ]
      },
      "securityContext": {
        "key": "securityContext",
        "display": "Security Context",
        "description": "This element identifies another resource that can be used as a proxy of the security sensitivity to use when deciding and enforcing access control rules for the Binary resource. Given that the Binary resource contains very few elements that can be used to determine the sensitivity of the data and relationships to individuals, the referenced resource stands in as a proxy equivalent for this purpose. This referenced resource may be related to the Binary (e.g. Media, DocumentReference), or may be some non-related Resource purely as a security proxy. E.g. to identify that the binary resource relates to a patient, and access should only be granted to applications that have access to the patient.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ]
      },
      "data": {
        "key": "data",
        "display": "Data",
        "description": "The actual content, base64 encoded.",
        "type": "base64Binary"
      }
    }
  },
  "BiologicallyDerivedProduct": {
    "display": "BiologicallyDerivedProduct",
    "description": "A material substance originating from a biological entity intended to be transplanted or infused\ninto another (possibly the same) biological entity.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "This records identifiers associated with this biologically derived product instance that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate (e.g. in CDA documents, or in written / printed documentation).",
        "type": "Identifier",
        "array": true
      },
      "productCategory": {
        "key": "productCategory",
        "display": "Product Category",
        "description": "Broad category of this product.",
        "type": "enum",
        "enumValues": [
          "organ",
          "tissue",
          "fluid",
          "cells",
          "biologicalAgent"
        ]
      },
      "productCode": {
        "key": "productCode",
        "display": "Product Code",
        "description": "A code that identifies the kind of this biologically derived product (SNOMED Ctcode).",
        "type": "CodeableConcept"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "Whether the product is currently available.",
        "type": "enum",
        "enumValues": [
          "available",
          "unavailable"
        ]
      },
      "request": {
        "key": "request",
        "display": "Request",
        "description": "Procedure request to obtain this biologically derived product.",
        "type": "Reference",
        "targetProfile": [
          "ServiceRequest"
        ],
        "array": true
      },
      "quantity": {
        "key": "quantity",
        "display": "Quantity",
        "description": "Number of discrete units within this product.",
        "type": "integer"
      },
      "parent": {
        "key": "parent",
        "display": "Parent",
        "description": "Parent product (if any).",
        "type": "Reference",
        "targetProfile": [
          "BiologicallyDerivedProduct"
        ],
        "array": true
      },
      "collection": {
        "key": "collection",
        "display": "Collection",
        "description": "How this product was collected.",
        "type": "BiologicallyDerivedProduct_Collection"
      },
      "processing": {
        "key": "processing",
        "display": "Processing",
        "description": "Any processing of the product during collection that does not change the fundamental nature of the product. For example adding anti-coagulants during the collection of Peripheral Blood Stem Cells.",
        "type": "BiologicallyDerivedProduct_Processing",
        "array": true
      },
      "manipulation": {
        "key": "manipulation",
        "display": "Manipulation",
        "description": "Any manipulation of product post-collection that is intended to alter the product.  For example a buffy-coat enrichment or CD8 reduction of Peripheral Blood Stem Cells to make it more suitable for infusion.",
        "type": "BiologicallyDerivedProduct_Manipulation"
      },
      "storage": {
        "key": "storage",
        "display": "Storage",
        "description": "Product storage.",
        "type": "BiologicallyDerivedProduct_Storage",
        "array": true
      }
    }
  },
  "BiologicallyDerivedProduct_Collection": {
    "display": "Biologically Derived Product Collection",
    "description": "How this product was collected",
    "properties": {
      "collector": {
        "key": "collector",
        "display": "Collector",
        "description": "Healthcare professional who is performing the collection.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole"
        ]
      },
      "source": {
        "key": "source",
        "display": "Source",
        "description": "The patient or entity, such as a hospital or vendor in the case of a processed/manipulated/manufactured product, providing the product.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Organization"
        ]
      },
      "collected[x]": {
        "key": "collected[x]",
        "display": "Collected[x]",
        "description": "Time of product collection.",
        "type": "dateTime"
      }
    },
    "backboneElement": true
  },
  "BiologicallyDerivedProduct_Processing": {
    "display": "Biologically Derived Product Processing",
    "description": "Any processing of the product during collection",
    "properties": {
      "description": {
        "key": "description",
        "display": "Description",
        "description": "Description of of processing.",
        "type": "string"
      },
      "procedure": {
        "key": "procedure",
        "display": "Procedure",
        "description": "Procesing code.",
        "type": "CodeableConcept"
      },
      "additive": {
        "key": "additive",
        "display": "Additive",
        "description": "Substance added during processing.",
        "type": "Reference",
        "targetProfile": [
          "Substance"
        ]
      },
      "time[x]": {
        "key": "time[x]",
        "display": "Time[x]",
        "description": "Time of processing.",
        "type": "dateTime"
      }
    },
    "backboneElement": true
  },
  "BiologicallyDerivedProduct_Manipulation": {
    "display": "Biologically Derived Product Manipulation",
    "description": "Any manipulation of product post-collection",
    "properties": {
      "description": {
        "key": "description",
        "display": "Description",
        "description": "Description of manipulation.",
        "type": "string"
      },
      "time[x]": {
        "key": "time[x]",
        "display": "Time[x]",
        "description": "Time of manipulation.",
        "type": "dateTime"
      }
    },
    "backboneElement": true
  },
  "BiologicallyDerivedProduct_Storage": {
    "display": "Biologically Derived Product Storage",
    "description": "Product storage",
    "properties": {
      "description": {
        "key": "description",
        "display": "Description",
        "description": "Description of storage.",
        "type": "string"
      },
      "temperature": {
        "key": "temperature",
        "display": "Temperature",
        "description": "Storage temperature.",
        "type": "decimal"
      },
      "scale": {
        "key": "scale",
        "display": "Scale",
        "description": "Temperature scale used.",
        "type": "enum",
        "enumValues": [
          "farenheit",
          "celsius",
          "kelvin"
        ]
      },
      "duration": {
        "key": "duration",
        "display": "Duration",
        "description": "Storage timeperiod.",
        "type": "Period"
      }
    },
    "backboneElement": true
  },
  "BodyStructure": {
    "display": "BodyStructure",
    "description": "Record details about an anatomical structure.  This resource may be used when a coded concept does not provide the necessary detail needed for the use case.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Identifier for this instance of the anatomical structure.",
        "type": "Identifier",
        "array": true
      },
      "active": {
        "key": "active",
        "display": "Active",
        "description": "Whether this body site is in active use.",
        "type": "boolean"
      },
      "morphology": {
        "key": "morphology",
        "display": "Morphology",
        "description": "The kind of structure being represented by the body structure at `BodyStructure.location`.  This can define both normal and abnormal morphologies.",
        "type": "CodeableConcept"
      },
      "location": {
        "key": "location",
        "display": "Location",
        "description": "The anatomical location or region of the specimen, lesion, or body structure.",
        "type": "CodeableConcept"
      },
      "locationQualifier": {
        "key": "locationQualifier",
        "display": "Location Qualifier",
        "description": "Qualifier to refine the anatomical location.  These include qualifiers for laterality, relative location, directionality, number, and plane.",
        "type": "CodeableConcept",
        "array": true
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A summary, characterization or explanation of the body structure.",
        "type": "string"
      },
      "image": {
        "key": "image",
        "display": "Image",
        "description": "Image or images used to identify a location.",
        "type": "Attachment",
        "array": true
      },
      "patient": {
        "key": "patient",
        "display": "Patient",
        "description": "The person to which the body site belongs.",
        "type": "Reference",
        "targetProfile": [
          "Patient"
        ]
      }
    }
  },
  "Bundle": {
    "display": "Bundle",
    "description": "A container for a collection of resources.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "A persistent identifier for the bundle that won't change as a bundle is copied from server to server.",
        "type": "Identifier"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Indicates the purpose of this bundle - how it is intended to be used.",
        "type": "enum",
        "enumValues": [
          "document",
          "message",
          "transaction",
          "transaction-response",
          "batch",
          "batch-response",
          "history",
          "searchset",
          "collection"
        ]
      },
      "timestamp": {
        "key": "timestamp",
        "display": "Timestamp",
        "description": "The date/time that the bundle was assembled - i.e. when the resources were placed in the bundle.",
        "type": "instant"
      },
      "total": {
        "key": "total",
        "display": "Total",
        "description": "If a set of search matches, this is the total number of entries of type 'match' across all pages in the search.  It does not include search.mode = 'include' or 'outcome' entries and it does not provide a count of the number of entries in the Bundle.",
        "type": "unsignedInt"
      },
      "link": {
        "key": "link",
        "display": "Link",
        "description": "A series of links that provide context to this bundle.",
        "type": "Bundle_Link",
        "array": true
      },
      "entry": {
        "key": "entry",
        "display": "Entry",
        "description": "An entry in a bundle resource - will either contain a resource or information about a resource (transactions and history only).",
        "type": "Bundle_Entry",
        "array": true
      },
      "signature": {
        "key": "signature",
        "display": "Signature",
        "description": "Digital Signature - base64 encoded. XML-DSig or a JWT.",
        "type": "Signature"
      }
    }
  },
  "Bundle_Link": {
    "display": "Bundle Link",
    "description": "Links related to this Bundle",
    "properties": {
      "relation": {
        "key": "relation",
        "display": "Relation",
        "description": "A name which details the functional use for this link - see [http://www.iana.org/assignments/link-relations/link-relations.xhtml#link-relations-1](http://www.iana.org/assignments/link-relations/link-relations.xhtml#link-relations-1).",
        "type": "string"
      },
      "url": {
        "key": "url",
        "display": "Url",
        "description": "The reference details for the link.",
        "type": "uri"
      }
    },
    "backboneElement": true
  },
  "Bundle_Entry": {
    "display": "Bundle Entry",
    "description": "Entry in the bundle - will have a resource or information",
    "properties": {
      "link": {
        "key": "link",
        "display": "Link",
        "description": "A series of links that provide context to this entry.",
        "type": "UNKNOWN"
      },
      "fullUrl": {
        "key": "fullUrl",
        "display": "Full Url",
        "description": "The Absolute URL for the resource.  The fullUrl SHALL NOT disagree with the id in the resource - i.e. if the fullUrl is not a urn:uuid, the URL shall be version-independent URL consistent with the Resource.id. The fullUrl is a version independent reference to the resource. The fullUrl element SHALL have a value except that: \n* fullUrl can be empty on a POST (although it does not need to when specifying a temporary id for reference in the bundle)\n* Results from operations might involve resources that are not identified.",
        "type": "uri"
      },
      "resource": {
        "key": "resource",
        "display": "Resource",
        "description": "The Resource for the entry. The purpose/meaning of the resource is determined by the Bundle.type.",
        "type": "Resource"
      },
      "search": {
        "key": "search",
        "display": "Search",
        "description": "Information about the search process that lead to the creation of this entry.",
        "type": "Bundle_Entry_Search"
      },
      "request": {
        "key": "request",
        "display": "Request",
        "description": "Additional information about how this entry should be processed as part of a transaction or batch.  For history, it shows how the entry was processed to create the version contained in the entry.",
        "type": "Bundle_Entry_Request"
      },
      "response": {
        "key": "response",
        "display": "Response",
        "description": "Indicates the results of processing the corresponding 'request' entry in the batch or transaction being responded to or what the results of an operation where when returning history.",
        "type": "Bundle_Entry_Response"
      }
    },
    "backboneElement": true
  },
  "Bundle_Entry_Search": {
    "display": "Bundle Entry_ Search",
    "description": "Search related information",
    "properties": {
      "mode": {
        "key": "mode",
        "display": "Mode",
        "description": "Why this entry is in the result set - whether it's included as a match or because of an _include requirement, or to convey information or warning information about the search process.",
        "type": "enum",
        "enumValues": [
          "match",
          "include",
          "outcome - why this is in the result set"
        ]
      },
      "score": {
        "key": "score",
        "display": "Score",
        "description": "When searching, the server's search ranking score for the entry.",
        "type": "decimal"
      }
    },
    "backboneElement": true
  },
  "Bundle_Entry_Request": {
    "display": "Bundle Entry_ Request",
    "description": "Additional execution information (transaction/batch/history)",
    "properties": {
      "method": {
        "key": "method",
        "display": "Method",
        "description": "In a transaction or batch, this is the HTTP action to be executed for this entry. In a history bundle, this indicates the HTTP action that occurred.",
        "type": "enum",
        "enumValues": [
          "GET",
          "HEAD",
          "POST",
          "PUT",
          "DELETE",
          "PATCH"
        ]
      },
      "url": {
        "key": "url",
        "display": "Url",
        "description": "The URL for this entry, relative to the root (the address to which the request is posted).",
        "type": "uri"
      },
      "ifNoneMatch": {
        "key": "ifNoneMatch",
        "display": "If None Match",
        "description": "If the ETag values match, return a 304 Not Modified status. See the API documentation for [\"Conditional Read\"](http.html#cread).",
        "type": "string"
      },
      "ifModifiedSince": {
        "key": "ifModifiedSince",
        "display": "If Modified Since",
        "description": "Only perform the operation if the last updated date matches. See the API documentation for [\"Conditional Read\"](http.html#cread).",
        "type": "instant"
      },
      "ifMatch": {
        "key": "ifMatch",
        "display": "If Match",
        "description": "Only perform the operation if the Etag value matches. For more information, see the API section [\"Managing Resource Contention\"](http.html#concurrency).",
        "type": "string"
      },
      "ifNoneExist": {
        "key": "ifNoneExist",
        "display": "If None Exist",
        "description": "Instruct the server not to perform the create if a specified resource already exists. For further information, see the API documentation for [\"Conditional Create\"](http.html#ccreate). This is just the query portion of the URL - what follows the \"?\" (not including the \"?\").",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "Bundle_Entry_Response": {
    "display": "Bundle Entry_ Response",
    "description": "Results of execution (transaction/batch/history)",
    "properties": {
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status code returned by processing this entry. The status SHALL start with a 3 digit HTTP code (e.g. 404) and may contain the standard HTTP description associated with the status code.",
        "type": "string"
      },
      "location": {
        "key": "location",
        "display": "Location",
        "description": "The location header created by processing this operation, populated if the operation returns a location.",
        "type": "uri"
      },
      "etag": {
        "key": "etag",
        "display": "Etag",
        "description": "The Etag for the resource, if the operation for the entry produced a versioned resource (see [Resource Metadata and Versioning](http.html#versioning) and [Managing Resource Contention](http.html#concurrency)).",
        "type": "string"
      },
      "lastModified": {
        "key": "lastModified",
        "display": "Last Modified",
        "description": "The date/time that the resource was modified on the server.",
        "type": "instant"
      },
      "outcome": {
        "key": "outcome",
        "display": "Outcome",
        "description": "An OperationOutcome containing hints and warnings produced as part of processing this entry in a batch or transaction.",
        "type": "Resource"
      }
    },
    "backboneElement": true
  },
  "CapabilityStatement": {
    "display": "CapabilityStatement",
    "description": "A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
    "properties": {
      "url": {
        "key": "url",
        "display": "Url",
        "description": "An absolute URI that is used to identify this capability statement when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this capability statement is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the capability statement is stored on different servers.",
        "type": "uri"
      },
      "version": {
        "key": "version",
        "display": "Version",
        "description": "The identifier that is used to identify this version of the capability statement when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the capability statement author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
        "type": "string"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A natural language name identifying the capability statement. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
        "type": "string"
      },
      "title": {
        "key": "title",
        "display": "Title",
        "description": "A short, descriptive, user-friendly title for the capability statement.",
        "type": "string"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of this capability statement. Enables tracking the life-cycle of the content.",
        "type": "enum",
        "enumValues": [
          "draft",
          "active",
          "retired",
          "unknown"
        ]
      },
      "experimental": {
        "key": "experimental",
        "display": "Experimental",
        "description": "A Boolean value to indicate that this capability statement is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
        "type": "boolean"
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "The date  (and optionally time) when the capability statement was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the capability statement changes.",
        "type": "dateTime"
      },
      "publisher": {
        "key": "publisher",
        "display": "Publisher",
        "description": "The name of the organization or individual that published the capability statement.",
        "type": "string"
      },
      "contact": {
        "key": "contact",
        "display": "Contact",
        "description": "Contact details to assist a user in finding and communicating with the publisher.",
        "type": "ContactDetail",
        "array": true
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A free text natural language description of the capability statement from a consumer's perspective. Typically, this is used when the capability statement describes a desired rather than an actual solution, for example as a formal expression of requirements as part of an RFP.",
        "type": "markdown"
      },
      "useContext": {
        "key": "useContext",
        "display": "Use Context",
        "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate capability statement instances.",
        "type": "UsageContext",
        "array": true
      },
      "jurisdiction": {
        "key": "jurisdiction",
        "display": "Jurisdiction",
        "description": "A legal or geographic region in which the capability statement is intended to be used.",
        "type": "CodeableConcept",
        "array": true
      },
      "purpose": {
        "key": "purpose",
        "display": "Purpose",
        "description": "Explanation of why this capability statement is needed and why it has been designed as it has.",
        "type": "markdown"
      },
      "copyright": {
        "key": "copyright",
        "display": "Copyright",
        "description": "A copyright statement relating to the capability statement and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the capability statement.",
        "type": "markdown"
      },
      "kind": {
        "key": "kind",
        "display": "Kind",
        "description": "The way that this statement is intended to be used, to describe an actual running instance of software, a particular product (kind, not instance of software) or a class of implementation (e.g. a desired purchase).",
        "type": "enum",
        "enumValues": [
          "instance",
          "capability",
          "requirements"
        ]
      },
      "instantiates": {
        "key": "instantiates",
        "display": "Instantiates",
        "description": "Reference to a canonical URL of another CapabilityStatement that this software implements. This capability statement is a published API description that corresponds to a business service. The server may actually implement a subset of the capability statement it claims to implement, so the capability statement must specify the full capability details.",
        "type": "canonical",
        "array": true
      },
      "imports": {
        "key": "imports",
        "display": "Imports",
        "description": "Reference to a canonical URL of another CapabilityStatement that this software adds to. The capability statement automatically includes everything in the other statement, and it is not duplicated, though the server may repeat the same resources, interactions and operations to add additional details to them.",
        "type": "canonical",
        "array": true
      },
      "software": {
        "key": "software",
        "display": "Software",
        "description": "Software that is covered by this capability statement.  It is used when the capability statement describes the capabilities of a particular software version, independent of an installation.",
        "type": "CapabilityStatement_Software"
      },
      "implementation": {
        "key": "implementation",
        "display": "Implementation",
        "description": "Identifies a specific implementation instance that is described by the capability statement - i.e. a particular installation, rather than the capabilities of a software program.",
        "type": "CapabilityStatement_Implementation"
      },
      "fhirVersion": {
        "key": "fhirVersion",
        "display": "Fhir Version",
        "description": "The version of the FHIR specification that this CapabilityStatement describes (which SHALL be the same as the FHIR version of the CapabilityStatement itself). There is no default value.",
        "type": "enum",
        "enumValues": [
          "FHIR Version the system supports"
        ]
      },
      "format": {
        "key": "format",
        "display": "Format",
        "description": "A list of the formats supported by this implementation using their content types.",
        "type": "enum",
        "enumValues": [
          "formats supported (xml",
          "json",
          "ttl",
          "mime type)"
        ],
        "array": true
      },
      "patchFormat": {
        "key": "patchFormat",
        "display": "Patch Format",
        "description": "A list of the patch formats supported by this implementation using their content types.",
        "type": "enum",
        "enumValues": [
          "Patch formats supported"
        ],
        "array": true
      },
      "implementationGuide": {
        "key": "implementationGuide",
        "display": "Implementation Guide",
        "description": "A list of implementation guides that the server does (or should) support in their entirety.",
        "type": "canonical",
        "array": true
      },
      "rest": {
        "key": "rest",
        "display": "Rest",
        "description": "A definition of the restful capabilities of the solution, if any.",
        "type": "CapabilityStatement_Rest",
        "array": true
      },
      "messaging": {
        "key": "messaging",
        "display": "Messaging",
        "description": "A description of the messaging capabilities of the solution.",
        "type": "CapabilityStatement_Messaging",
        "array": true
      },
      "document": {
        "key": "document",
        "display": "Document",
        "description": "A document definition.",
        "type": "CapabilityStatement_Document",
        "array": true
      }
    }
  },
  "CapabilityStatement_Software": {
    "display": "Capability Statement Software",
    "description": "Software that is covered by this capability statement",
    "properties": {
      "name": {
        "key": "name",
        "display": "Name",
        "description": "Name the software is known by.",
        "type": "string"
      },
      "version": {
        "key": "version",
        "display": "Version",
        "description": "The version identifier for the software covered by this statement.",
        "type": "string"
      },
      "releaseDate": {
        "key": "releaseDate",
        "display": "Release Date",
        "description": "Date this version of the software was released.",
        "type": "dateTime"
      }
    },
    "backboneElement": true
  },
  "CapabilityStatement_Implementation": {
    "display": "Capability Statement Implementation",
    "description": "If this describes a specific instance",
    "properties": {
      "description": {
        "key": "description",
        "display": "Description",
        "description": "Information about the specific installation that this capability statement relates to.",
        "type": "string"
      },
      "url": {
        "key": "url",
        "display": "Url",
        "description": "An absolute base URL for the implementation.  This forms the base for REST interfaces as well as the mailbox and document interfaces.",
        "type": "url"
      },
      "custodian": {
        "key": "custodian",
        "display": "Custodian",
        "description": "The organization responsible for the management of the instance and oversight of the data on the server at the specified URL.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      }
    },
    "backboneElement": true
  },
  "CapabilityStatement_Rest": {
    "display": "Capability Statement Rest",
    "description": "If the endpoint is a RESTful one",
    "properties": {
      "mode": {
        "key": "mode",
        "display": "Mode",
        "description": "Identifies whether this portion of the statement is describing the ability to initiate or receive restful operations.",
        "type": "enum",
        "enumValues": [
          "client",
          "server"
        ]
      },
      "documentation": {
        "key": "documentation",
        "display": "Documentation",
        "description": "Information about the system's restful capabilities that apply across all applications, such as security.",
        "type": "markdown"
      },
      "security": {
        "key": "security",
        "display": "Security",
        "description": "Information about security implementation from an interface perspective - what a client needs to know.",
        "type": "CapabilityStatement_Rest_Security"
      },
      "resource": {
        "key": "resource",
        "display": "Resource",
        "description": "A specification of the restful capabilities of the solution for a specific resource type.",
        "type": "CapabilityStatement_Rest_Resource",
        "array": true
      },
      "interaction": {
        "key": "interaction",
        "display": "Interaction",
        "description": "A specification of restful operations supported by the system.",
        "type": "CapabilityStatement_Rest_Interaction",
        "array": true
      },
      "searchParam": {
        "key": "searchParam",
        "display": "Search Param",
        "description": "Search parameters that are supported for searching all resources for implementations to support and/or make use of - either references to ones defined in the specification, or additional ones defined for/by the implementation.",
        "type": "UNKNOWN"
      },
      "operation": {
        "key": "operation",
        "display": "Operation",
        "description": "Definition of an operation or a named query together with its parameters and their meaning and type.",
        "type": "UNKNOWN"
      },
      "compartment": {
        "key": "compartment",
        "display": "Compartment",
        "description": "An absolute URI which is a reference to the definition of a compartment that the system supports. The reference is to a CompartmentDefinition resource by its canonical URL .",
        "type": "canonical",
        "array": true
      }
    },
    "backboneElement": true
  },
  "CapabilityStatement_Rest_Security": {
    "display": "Capability Statement Rest_ Security",
    "description": "Information about security of implementation",
    "properties": {
      "cors": {
        "key": "cors",
        "display": "Cors",
        "description": "Server adds CORS headers when responding to requests - this enables Javascript applications to use the server.",
        "type": "boolean"
      },
      "service": {
        "key": "service",
        "display": "Service",
        "description": "Types of security services that are supported/required by the system.",
        "type": "CodeableConcept",
        "array": true
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "General description of how security works.",
        "type": "markdown"
      }
    },
    "backboneElement": true
  },
  "CapabilityStatement_Rest_Resource": {
    "display": "Capability Statement Rest_ Resource",
    "description": "Resource served on the REST interface",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "A type of resource exposed via the restful interface.",
        "type": "enum",
        "enumValues": [
          "A resource type that is supported"
        ]
      },
      "profile": {
        "key": "profile",
        "display": "Profile",
        "description": "A specification of the profile that describes the solution's overall support for the resource, including any constraints on cardinality, bindings, lengths or other limitations. See further discussion in [Using Profiles](profiling.html#profile-uses).",
        "type": "canonical"
      },
      "supportedProfile": {
        "key": "supportedProfile",
        "display": "Supported Profile",
        "description": "A list of profiles that represent different use cases supported by the system. For a server, \"supported by the system\" means the system hosts/produces a set of resources that are conformant to a particular profile, and allows clients that use its services to search using this profile and to find appropriate data. For a client, it means the system will search by this profile and process data according to the guidance implicit in the profile. See further discussion in [Using Profiles](profiling.html#profile-uses).",
        "type": "canonical",
        "array": true
      },
      "documentation": {
        "key": "documentation",
        "display": "Documentation",
        "description": "Additional information about the resource type used by the system.",
        "type": "markdown"
      },
      "interaction": {
        "key": "interaction",
        "display": "Interaction",
        "description": "Identifies a restful operation supported by the solution.",
        "type": "CapabilityStatement_Rest_Resource_Interaction",
        "array": true
      },
      "versioning": {
        "key": "versioning",
        "display": "Versioning",
        "description": "This field is set to no-version to specify that the system does not support (server) or use (client) versioning for this resource type. If this has some other value, the server must at least correctly track and populate the versionId meta-property on resources. If the value is 'versioned-update', then the server supports all the versioning features, including using e-tags for version integrity in the API.",
        "type": "enum",
        "enumValues": [
          "no-version",
          "versioned",
          "versioned-update"
        ]
      },
      "readHistory": {
        "key": "readHistory",
        "display": "Read History",
        "description": "A flag for whether the server is able to return past versions as part of the vRead operation.",
        "type": "boolean"
      },
      "updateCreate": {
        "key": "updateCreate",
        "display": "Update Create",
        "description": "A flag to indicate that the server allows or needs to allow the client to create new identities on the server (that is, the client PUTs to a location where there is no existing resource). Allowing this operation means that the server allows the client to create new identities on the server.",
        "type": "boolean"
      },
      "conditionalCreate": {
        "key": "conditionalCreate",
        "display": "Conditional Create",
        "description": "A flag that indicates that the server supports conditional create.",
        "type": "boolean"
      },
      "conditionalRead": {
        "key": "conditionalRead",
        "display": "Conditional Read",
        "description": "A code that indicates how the server supports conditional read.",
        "type": "enum",
        "enumValues": [
          "not-supported",
          "modified-since",
          "not-match",
          "full-support"
        ]
      },
      "conditionalUpdate": {
        "key": "conditionalUpdate",
        "display": "Conditional Update",
        "description": "A flag that indicates that the server supports conditional update.",
        "type": "boolean"
      },
      "conditionalDelete": {
        "key": "conditionalDelete",
        "display": "Conditional Delete",
        "description": "A code that indicates how the server supports conditional delete.",
        "type": "enum",
        "enumValues": [
          "not-supported",
          "single",
          "multiple - how conditional delete is supported"
        ]
      },
      "referencePolicy": {
        "key": "referencePolicy",
        "display": "Reference Policy",
        "description": "A set of flags that defines how references are supported.",
        "type": "enum",
        "enumValues": [
          "literal",
          "logical",
          "resolves",
          "enforced",
          "local"
        ],
        "array": true
      },
      "searchInclude": {
        "key": "searchInclude",
        "display": "Search Include",
        "description": "A list of _include values supported by the server.",
        "type": "string",
        "array": true
      },
      "searchRevInclude": {
        "key": "searchRevInclude",
        "display": "Search Rev Include",
        "description": "A list of _revinclude (reverse include) values supported by the server.",
        "type": "string",
        "array": true
      },
      "searchParam": {
        "key": "searchParam",
        "display": "Search Param",
        "description": "Search parameters for implementations to support and/or make use of - either references to ones defined in the specification, or additional ones defined for/by the implementation.",
        "type": "CapabilityStatement_Rest_Resource_SearchParam",
        "array": true
      },
      "operation": {
        "key": "operation",
        "display": "Operation",
        "description": "Definition of an operation or a named query together with its parameters and their meaning and type. Consult the definition of the operation for details about how to invoke the operation, and the parameters.",
        "type": "CapabilityStatement_Rest_Resource_Operation",
        "array": true
      }
    },
    "backboneElement": true
  },
  "CapabilityStatement_Rest_Resource_Interaction": {
    "display": "Capability Statement Rest_ Resource_ Interaction",
    "description": "What operations are supported?",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "Coded identifier of the operation, supported by the system resource.",
        "type": "enum",
        "enumValues": [
          "read",
          "vread",
          "update",
          "patch",
          "delete",
          "history-instance",
          "history-type",
          "create",
          "search-type"
        ]
      },
      "documentation": {
        "key": "documentation",
        "display": "Documentation",
        "description": "Guidance specific to the implementation of this operation, such as 'delete is a logical delete' or 'updates are only allowed with version id' or 'creates permitted from pre-authorized certificates only'.",
        "type": "markdown"
      }
    },
    "backboneElement": true
  },
  "CapabilityStatement_Rest_Resource_SearchParam": {
    "display": "Capability Statement Rest_ Resource_ Search Param",
    "description": "Search parameters supported by implementation",
    "properties": {
      "name": {
        "key": "name",
        "display": "Name",
        "description": "The name of the search parameter used in the interface.",
        "type": "string"
      },
      "definition": {
        "key": "definition",
        "display": "Definition",
        "description": "An absolute URI that is a formal reference to where this parameter was first defined, so that a client can be confident of the meaning of the search parameter (a reference to [SearchParameter.url](searchparameter-definitions.html#SearchParameter.url)). This element SHALL be populated if the search parameter refers to a SearchParameter defined by the FHIR core specification or externally defined IGs.",
        "type": "canonical"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The type of value a search parameter refers to, and how the content is interpreted.",
        "type": "enum",
        "enumValues": [
          "number",
          "date",
          "string",
          "token",
          "reference",
          "composite",
          "quantity",
          "uri",
          "special"
        ]
      },
      "documentation": {
        "key": "documentation",
        "display": "Documentation",
        "description": "This allows documentation of any distinct behaviors about how the search parameter is used.  For example, text matching algorithms.",
        "type": "markdown"
      }
    },
    "backboneElement": true
  },
  "CapabilityStatement_Rest_Resource_Operation": {
    "display": "Capability Statement Rest_ Resource_ Operation",
    "description": "Definition of a resource operation",
    "properties": {
      "name": {
        "key": "name",
        "display": "Name",
        "description": "The name of the operation or query. For an operation, this is the name  prefixed with $ and used in the URL. For a query, this is the name used in the _query parameter when the query is called.",
        "type": "string"
      },
      "definition": {
        "key": "definition",
        "display": "Definition",
        "description": "Where the formal definition can be found. If a server references the base definition of an Operation (i.e. from the specification itself such as ```http://hl7.org/fhir/OperationDefinition/ValueSet-expand```), that means it supports the full capabilities of the operation - e.g. both GET and POST invocation.  If it only supports a subset, it must define its own custom [OperationDefinition](operationdefinition.html#) with a 'base' of the original OperationDefinition.  The custom definition would describe the specific subset of functionality supported.",
        "type": "canonical"
      },
      "documentation": {
        "key": "documentation",
        "display": "Documentation",
        "description": "Documentation that describes anything special about the operation behavior, possibly detailing different behavior for system, type and instance-level invocation of the operation.",
        "type": "markdown"
      }
    },
    "backboneElement": true
  },
  "CapabilityStatement_Rest_Interaction": {
    "display": "Capability Statement Rest_ Interaction",
    "description": "What operations are supported?",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "A coded identifier of the operation, supported by the system.",
        "type": "enum",
        "enumValues": [
          "transaction",
          "batch",
          "search-system",
          "history-system"
        ]
      },
      "documentation": {
        "key": "documentation",
        "display": "Documentation",
        "description": "Guidance specific to the implementation of this operation, such as limitations on the kind of transactions allowed, or information about system wide search is implemented.",
        "type": "markdown"
      }
    },
    "backboneElement": true
  },
  "CapabilityStatement_Messaging": {
    "display": "Capability Statement Messaging",
    "description": "If messaging is supported",
    "properties": {
      "endpoint": {
        "key": "endpoint",
        "display": "Endpoint",
        "description": "An endpoint (network accessible address) to which messages and/or replies are to be sent.",
        "type": "CapabilityStatement_Messaging_Endpoint",
        "array": true
      },
      "reliableCache": {
        "key": "reliableCache",
        "display": "Reliable Cache",
        "description": "Length if the receiver's reliable messaging cache in minutes (if a receiver) or how long the cache length on the receiver should be (if a sender).",
        "type": "unsignedInt"
      },
      "documentation": {
        "key": "documentation",
        "display": "Documentation",
        "description": "Documentation about the system's messaging capabilities for this endpoint not otherwise documented by the capability statement.  For example, the process for becoming an authorized messaging exchange partner.",
        "type": "markdown"
      },
      "supportedMessage": {
        "key": "supportedMessage",
        "display": "Supported Message",
        "description": "References to message definitions for messages this system can send or receive.",
        "type": "CapabilityStatement_Messaging_SupportedMessage",
        "array": true
      }
    },
    "backboneElement": true
  },
  "CapabilityStatement_Messaging_Endpoint": {
    "display": "Capability Statement Messaging_ Endpoint",
    "description": "Where messages should be sent",
    "properties": {
      "protocol": {
        "key": "protocol",
        "display": "Protocol",
        "description": "A list of the messaging transport protocol(s) identifiers, supported by this endpoint.",
        "type": "Coding"
      },
      "address": {
        "key": "address",
        "display": "Address",
        "description": "The network address of the endpoint. For solutions that do not use network addresses for routing, it can be just an identifier.",
        "type": "url"
      }
    },
    "backboneElement": true
  },
  "CapabilityStatement_Messaging_SupportedMessage": {
    "display": "Capability Statement Messaging_ Supported Message",
    "description": "Messages supported by this system",
    "properties": {
      "mode": {
        "key": "mode",
        "display": "Mode",
        "description": "The mode of this event declaration - whether application is sender or receiver.",
        "type": "enum",
        "enumValues": [
          "sender",
          "receiver"
        ]
      },
      "definition": {
        "key": "definition",
        "display": "Definition",
        "description": "Points to a message definition that identifies the messaging event, message structure, allowed responses, etc.",
        "type": "canonical"
      }
    },
    "backboneElement": true
  },
  "CapabilityStatement_Document": {
    "display": "Capability Statement Document",
    "description": "Document definition",
    "properties": {
      "mode": {
        "key": "mode",
        "display": "Mode",
        "description": "Mode of this document declaration - whether an application is a producer or consumer.",
        "type": "enum",
        "enumValues": [
          "producer",
          "consumer"
        ]
      },
      "documentation": {
        "key": "documentation",
        "display": "Documentation",
        "description": "A description of how the application supports or uses the specified document profile.  For example, when documents are created, what action is taken with consumed documents, etc.",
        "type": "markdown"
      },
      "profile": {
        "key": "profile",
        "display": "Profile",
        "description": "A profile on the document Bundle that constrains which resources are present, and their contents.",
        "type": "canonical"
      }
    },
    "backboneElement": true
  },
  "CarePlan": {
    "display": "CarePlan",
    "description": "Describes the intention of how one or more practitioners intend to deliver care for a particular patient, group or community for a period of time, possibly limited to care for a specific condition or set of conditions.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Business identifiers assigned to this care plan by the performer or other systems which remain constant as the resource is updated and propagates from server to server.",
        "type": "Identifier",
        "array": true
      },
      "instantiatesCanonical": {
        "key": "instantiatesCanonical",
        "display": "Instantiates Canonical",
        "description": "The URL pointing to a FHIR-defined protocol, guideline, questionnaire or other definition that is adhered to in whole or in part by this CarePlan.",
        "type": "canonical",
        "array": true
      },
      "instantiatesUri": {
        "key": "instantiatesUri",
        "display": "Instantiates Uri",
        "description": "The URL pointing to an externally maintained protocol, guideline, questionnaire or other definition that is adhered to in whole or in part by this CarePlan.",
        "type": "uri",
        "array": true
      },
      "basedOn": {
        "key": "basedOn",
        "display": "Based On",
        "description": "A care plan that is fulfilled in whole or in part by this care plan.",
        "type": "Reference",
        "targetProfile": [
          "CarePlan"
        ],
        "array": true
      },
      "replaces": {
        "key": "replaces",
        "display": "Replaces",
        "description": "Completed or terminated care plan whose function is taken by this new care plan.",
        "type": "Reference",
        "targetProfile": [
          "CarePlan"
        ],
        "array": true
      },
      "partOf": {
        "key": "partOf",
        "display": "Part Of",
        "description": "A larger care plan of which this particular care plan is a component or step.",
        "type": "Reference",
        "targetProfile": [
          "CarePlan"
        ],
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "Indicates whether the plan is currently being acted upon, represents future intentions or is now a historical record.",
        "type": "enum",
        "enumValues": [
          "draft",
          "active",
          "on-hold",
          "revoked",
          "completed",
          "entered-in-error",
          "unknown"
        ]
      },
      "intent": {
        "key": "intent",
        "display": "Intent",
        "description": "Indicates the level of authority/intentionality associated with the care plan and where the care plan fits into the workflow chain.",
        "type": "enum",
        "enumValues": [
          "proposal",
          "plan",
          "order",
          "option"
        ]
      },
      "category": {
        "key": "category",
        "display": "Category",
        "description": "Identifies what \"kind\" of plan this is to support differentiation between multiple co-existing plans; e.g. \"Home health\", \"psychiatric\", \"asthma\", \"disease management\", \"wellness plan\", etc.",
        "type": "CodeableConcept",
        "array": true
      },
      "title": {
        "key": "title",
        "display": "Title",
        "description": "Human-friendly name for the care plan.",
        "type": "string"
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A description of the scope and nature of the plan.",
        "type": "string"
      },
      "subject": {
        "key": "subject",
        "display": "Subject",
        "description": "Identifies the patient or group whose intended care is described by the plan.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Group"
        ]
      },
      "encounter": {
        "key": "encounter",
        "display": "Encounter",
        "description": "The Encounter during which this CarePlan was created or to which the creation of this record is tightly associated.",
        "type": "Reference",
        "targetProfile": [
          "Encounter"
        ]
      },
      "period": {
        "key": "period",
        "display": "Period",
        "description": "Indicates when the plan did (or is intended to) come into effect and end.",
        "type": "Period"
      },
      "created": {
        "key": "created",
        "display": "Created",
        "description": "Represents when this particular CarePlan record was created in the system, which is often a system-generated date.",
        "type": "dateTime"
      },
      "author": {
        "key": "author",
        "display": "Author",
        "description": "When populated, the author is responsible for the care plan.  The care plan is attributed to the author.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Practitioner",
          "PractitionerRole",
          "Device",
          "RelatedPerson",
          "Organization",
          "CareTeam"
        ]
      },
      "contributor": {
        "key": "contributor",
        "display": "Contributor",
        "description": "Identifies the individual(s) or organization who provided the contents of the care plan.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Practitioner",
          "PractitionerRole",
          "Device",
          "RelatedPerson",
          "Organization",
          "CareTeam"
        ],
        "array": true
      },
      "careTeam": {
        "key": "careTeam",
        "display": "Care Team",
        "description": "Identifies all people and organizations who are expected to be involved in the care envisioned by this plan.",
        "type": "Reference",
        "targetProfile": [
          "CareTeam"
        ],
        "array": true
      },
      "addresses": {
        "key": "addresses",
        "display": "Addresses",
        "description": "Identifies the conditions/problems/concerns/diagnoses/etc. whose management and/or mitigation are handled by this plan.",
        "type": "Reference",
        "targetProfile": [
          "Condition"
        ],
        "array": true
      },
      "supportingInfo": {
        "key": "supportingInfo",
        "display": "Supporting Info",
        "description": "Identifies portions of the patient's record that specifically influenced the formation of the plan.  These might include comorbidities, recent procedures, limitations, recent assessments, etc.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ],
        "array": true
      },
      "goal": {
        "key": "goal",
        "display": "Goal",
        "description": "Describes the intended objective(s) of carrying out the care plan.",
        "type": "Reference",
        "targetProfile": [
          "Goal"
        ],
        "array": true
      },
      "activity": {
        "key": "activity",
        "display": "Activity",
        "description": "Identifies a planned action to occur as part of the plan.  For example, a medication to be used, lab tests to perform, self-monitoring, education, etc.",
        "type": "CarePlan_Activity",
        "array": true
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "General notes about the care plan not covered elsewhere.",
        "type": "Annotation",
        "array": true
      }
    }
  },
  "CarePlan_Activity": {
    "display": "Care Plan Activity",
    "description": "Action to occur as part of plan",
    "properties": {
      "outcomeCodeableConcept": {
        "key": "outcomeCodeableConcept",
        "display": "Outcome Codeable Concept",
        "description": "Identifies the outcome at the point when the status of the activity is assessed.  For example, the outcome of an education activity could be patient understands (or not).",
        "type": "CodeableConcept",
        "array": true
      },
      "outcomeReference": {
        "key": "outcomeReference",
        "display": "Outcome Reference",
        "description": "Details of the outcome or action resulting from the activity.  The reference to an \"event\" resource, such as Procedure or Encounter or Observation, is the result/outcome of the activity itself.  The activity can be conveyed using CarePlan.activity.detail OR using the CarePlan.activity.reference (a reference to a “request” resource).",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ],
        "array": true
      },
      "progress": {
        "key": "progress",
        "display": "Progress",
        "description": "Notes about the adherence/status/progress of the activity.",
        "type": "Annotation",
        "array": true
      },
      "reference": {
        "key": "reference",
        "display": "Reference",
        "description": "The details of the proposed activity represented in a specific resource.",
        "type": "Reference",
        "targetProfile": [
          "Appointment",
          "CommunicationRequest",
          "DeviceRequest",
          "MedicationRequest",
          "NutritionOrder",
          "Task",
          "ServiceRequest",
          "VisionPrescription",
          "RequestGroup"
        ]
      },
      "detail": {
        "key": "detail",
        "display": "Detail",
        "description": "A simple summary of a planned activity suitable for a general care plan system (e.g. form driven) that doesn't know about specific resources such as procedure etc.",
        "type": "CarePlan_Activity_Detail"
      }
    },
    "backboneElement": true
  },
  "CarePlan_Activity_Detail": {
    "display": "Care Plan Activity_ Detail",
    "description": "In-line definition of activity",
    "properties": {
      "kind": {
        "key": "kind",
        "display": "Kind",
        "description": "A description of the kind of resource the in-line definition of a care plan activity is representing.  The CarePlan.activity.detail is an in-line definition when a resource is not referenced using CarePlan.activity.reference.  For example, a MedicationRequest, a ServiceRequest, or a CommunicationRequest.",
        "type": "enum",
        "enumValues": [
          "Appointment",
          "CommunicationRequest",
          "DeviceRequest",
          "MedicationRequest",
          "NutritionOrder",
          "Task",
          "ServiceRequest",
          "VisionPrescription"
        ]
      },
      "instantiatesCanonical": {
        "key": "instantiatesCanonical",
        "display": "Instantiates Canonical",
        "description": "The URL pointing to a FHIR-defined protocol, guideline, questionnaire or other definition that is adhered to in whole or in part by this CarePlan activity.",
        "type": "canonical",
        "array": true
      },
      "instantiatesUri": {
        "key": "instantiatesUri",
        "display": "Instantiates Uri",
        "description": "The URL pointing to an externally maintained protocol, guideline, questionnaire or other definition that is adhered to in whole or in part by this CarePlan activity.",
        "type": "uri",
        "array": true
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "Detailed description of the type of planned activity; e.g. what lab test, what procedure, what kind of encounter.",
        "type": "CodeableConcept"
      },
      "reasonCode": {
        "key": "reasonCode",
        "display": "Reason Code",
        "description": "Provides the rationale that drove the inclusion of this particular activity as part of the plan or the reason why the activity was prohibited.",
        "type": "CodeableConcept",
        "array": true
      },
      "reasonReference": {
        "key": "reasonReference",
        "display": "Reason Reference",
        "description": "Indicates another resource, such as the health condition(s), whose existence justifies this request and drove the inclusion of this particular activity as part of the plan.",
        "type": "Reference",
        "targetProfile": [
          "Condition",
          "Observation",
          "DiagnosticReport",
          "DocumentReference"
        ],
        "array": true
      },
      "goal": {
        "key": "goal",
        "display": "Goal",
        "description": "Internal reference that identifies the goals that this activity is intended to contribute towards meeting.",
        "type": "Reference",
        "targetProfile": [
          "Goal"
        ],
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "Identifies what progress is being made for the specific activity.",
        "type": "enum",
        "enumValues": [
          "not-started",
          "scheduled",
          "in-progress",
          "on-hold",
          "completed",
          "cancelled",
          "stopped",
          "unknown",
          "entered-in-error"
        ]
      },
      "statusReason": {
        "key": "statusReason",
        "display": "Status Reason",
        "description": "Provides reason why the activity isn't yet started, is on hold, was cancelled, etc.",
        "type": "CodeableConcept"
      },
      "doNotPerform": {
        "key": "doNotPerform",
        "display": "Do Not Perform",
        "description": "If true, indicates that the described activity is one that must NOT be engaged in when following the plan.  If false, or missing, indicates that the described activity is one that should be engaged in when following the plan.",
        "type": "boolean"
      },
      "scheduled[x]": {
        "key": "scheduled[x]",
        "display": "Scheduled[x]",
        "description": "The period, timing or frequency upon which the described activity is to occur.",
        "type": "Timing"
      },
      "location": {
        "key": "location",
        "display": "Location",
        "description": "Identifies the facility where the activity will occur; e.g. home, hospital, specific clinic, etc.",
        "type": "Reference",
        "targetProfile": [
          "Location"
        ]
      },
      "performer": {
        "key": "performer",
        "display": "Performer",
        "description": "Identifies who's expected to be involved in the activity.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization",
          "RelatedPerson",
          "Patient",
          "CareTeam",
          "HealthcareService",
          "Device"
        ],
        "array": true
      },
      "product[x]": {
        "key": "product[x]",
        "display": "Product[x]",
        "description": "Identifies the food, drug or other product to be consumed or supplied in the activity.",
        "type": "CodeableConcept"
      },
      "dailyAmount": {
        "key": "dailyAmount",
        "display": "Daily Amount",
        "description": "Identifies the quantity expected to be consumed in a given day.",
        "type": "Quantity"
      },
      "quantity": {
        "key": "quantity",
        "display": "Quantity",
        "description": "Identifies the quantity expected to be supplied, administered or consumed by the subject.",
        "type": "Quantity"
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "This provides a textual description of constraints on the intended activity occurrence, including relation to other activities.  It may also include objectives, pre-conditions and end-conditions.  Finally, it may convey specifics about the activity such as body site, method, route, etc.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "CareTeam": {
    "display": "CareTeam",
    "description": "The Care Team includes all the people and organizations who plan to participate in the coordination and delivery of care for a patient.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Business identifiers assigned to this care team by the performer or other systems which remain constant as the resource is updated and propagates from server to server.",
        "type": "Identifier",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "Indicates the current state of the care team.",
        "type": "enum",
        "enumValues": [
          "proposed",
          "active",
          "suspended",
          "inactive",
          "entered-in-error"
        ]
      },
      "category": {
        "key": "category",
        "display": "Category",
        "description": "Identifies what kind of team.  This is to support differentiation between multiple co-existing teams, such as care plan team, episode of care team, longitudinal care team.",
        "type": "CodeableConcept",
        "array": true
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A label for human use intended to distinguish like teams.  E.g. the \"red\" vs. \"green\" trauma teams.",
        "type": "string"
      },
      "subject": {
        "key": "subject",
        "display": "Subject",
        "description": "Identifies the patient or group whose intended care is handled by the team.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Group"
        ]
      },
      "encounter": {
        "key": "encounter",
        "display": "Encounter",
        "description": "The Encounter during which this CareTeam was created or to which the creation of this record is tightly associated.",
        "type": "Reference",
        "targetProfile": [
          "Encounter"
        ]
      },
      "period": {
        "key": "period",
        "display": "Period",
        "description": "Indicates when the team did (or is intended to) come into effect and end.",
        "type": "Period"
      },
      "participant": {
        "key": "participant",
        "display": "Participant",
        "description": "Identifies all people and organizations who are expected to be involved in the care team.",
        "type": "CareTeam_Participant",
        "array": true
      },
      "reasonCode": {
        "key": "reasonCode",
        "display": "Reason Code",
        "description": "Describes why the care team exists.",
        "type": "CodeableConcept",
        "array": true
      },
      "reasonReference": {
        "key": "reasonReference",
        "display": "Reason Reference",
        "description": "Condition(s) that this care team addresses.",
        "type": "Reference",
        "targetProfile": [
          "Condition"
        ],
        "array": true
      },
      "managingOrganization": {
        "key": "managingOrganization",
        "display": "Managing Organization",
        "description": "The organization responsible for the care team.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ],
        "array": true
      },
      "telecom": {
        "key": "telecom",
        "display": "Telecom",
        "description": "A central contact detail for the care team (that applies to all members).",
        "type": "ContactPoint",
        "array": true
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "Comments made about the CareTeam.",
        "type": "Annotation",
        "array": true
      }
    }
  },
  "CareTeam_Participant": {
    "display": "Care Team Participant",
    "description": "Members of the team",
    "properties": {
      "role": {
        "key": "role",
        "display": "Role",
        "description": "Indicates specific responsibility of an individual within the care team, such as \"Primary care physician\", \"Trained social worker counselor\", \"Caregiver\", etc.",
        "type": "CodeableConcept",
        "array": true
      },
      "member": {
        "key": "member",
        "display": "Member",
        "description": "The specific person or organization who is participating/expected to participate in the care team.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "RelatedPerson",
          "Patient",
          "Organization",
          "CareTeam"
        ]
      },
      "onBehalfOf": {
        "key": "onBehalfOf",
        "display": "On Behalf Of",
        "description": "The organization of the practitioner.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "period": {
        "key": "period",
        "display": "Period",
        "description": "Indicates when the specific member or organization did (or is intended to) come into effect and end.",
        "type": "Period"
      }
    },
    "backboneElement": true
  },
  "CatalogEntry": {
    "display": "CatalogEntry",
    "description": "Catalog entries are wrappers that contextualize items included in a catalog.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Used in supporting different identifiers for the same product, e.g. manufacturer code and retailer code.",
        "type": "Identifier",
        "array": true
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The type of item - medication, device, service, protocol or other.",
        "type": "CodeableConcept"
      },
      "orderable": {
        "key": "orderable",
        "display": "Orderable",
        "description": "Whether the entry represents an orderable item.",
        "type": "boolean"
      },
      "referencedItem": {
        "key": "referencedItem",
        "display": "Referenced Item",
        "description": "The item in a catalog or definition.",
        "type": "Reference",
        "targetProfile": [
          "Medication",
          "Device",
          "Organization",
          "Practitioner",
          "PractitionerRole",
          "HealthcareService",
          "ActivityDefinition",
          "PlanDefinition",
          "SpecimenDefinition",
          "ObservationDefinition",
          "Binary"
        ]
      },
      "additionalIdentifier": {
        "key": "additionalIdentifier",
        "display": "Additional Identifier",
        "description": "Used in supporting related concepts, e.g. NDC to RxNorm.",
        "type": "Identifier",
        "array": true
      },
      "classification": {
        "key": "classification",
        "display": "Classification",
        "description": "Classes of devices, or ATC for medication.",
        "type": "CodeableConcept",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "Used to support catalog exchange even for unsupported products, e.g. getting list of medications even if not prescribable.",
        "type": "enum",
        "enumValues": [
          "draft",
          "active",
          "retired",
          "unknown"
        ]
      },
      "validityPeriod": {
        "key": "validityPeriod",
        "display": "Validity Period",
        "description": "The time period in which this catalog entry is expected to be active.",
        "type": "Period"
      },
      "validTo": {
        "key": "validTo",
        "display": "Valid To",
        "description": "The date until which this catalog entry is expected to be active.",
        "type": "dateTime"
      },
      "lastUpdated": {
        "key": "lastUpdated",
        "display": "Last Updated",
        "description": "Typically date of issue is different from the beginning of the validity. This can be used to see when an item was last updated.",
        "type": "dateTime"
      },
      "additionalCharacteristic": {
        "key": "additionalCharacteristic",
        "display": "Additional Characteristic",
        "description": "Used for examplefor Out of Formulary, or any specifics.",
        "type": "CodeableConcept",
        "array": true
      },
      "additionalClassification": {
        "key": "additionalClassification",
        "display": "Additional Classification",
        "description": "User for example for ATC classification, or.",
        "type": "CodeableConcept",
        "array": true
      },
      "relatedEntry": {
        "key": "relatedEntry",
        "display": "Related Entry",
        "description": "Used for example, to point to a substance, or to a device used to administer a medication.",
        "type": "CatalogEntry_RelatedEntry",
        "array": true
      }
    }
  },
  "CatalogEntry_RelatedEntry": {
    "display": "Catalog Entry Related Entry",
    "description": "An item that this catalog entry is related to",
    "properties": {
      "relationtype": {
        "key": "relationtype",
        "display": "Relationtype",
        "description": "The type of relation to the related item: child, parent, packageContent, containerPackage, usedIn, uses, requires, etc.",
        "type": "enum",
        "enumValues": [
          "triggers",
          "is-replaced-by"
        ]
      },
      "item": {
        "key": "item",
        "display": "Item",
        "description": "The reference to the related item.",
        "type": "Reference",
        "targetProfile": [
          "CatalogEntry"
        ]
      }
    },
    "backboneElement": true
  },
  "ChargeItem": {
    "display": "ChargeItem",
    "description": "The resource ChargeItem describes the provision of healthcare provider products for a certain patient, therefore referring not only to the product, but containing in addition details of the provision, like date, time, amounts and participating organizations and persons. Main Usage of the ChargeItem is to enable the billing process and internal cost allocation.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Identifiers assigned to this event performer or other systems.",
        "type": "Identifier",
        "array": true
      },
      "definitionUri": {
        "key": "definitionUri",
        "display": "Definition Uri",
        "description": "References the (external) source of pricing information, rules of application for the code this ChargeItem uses.",
        "type": "uri",
        "array": true
      },
      "definitionCanonical": {
        "key": "definitionCanonical",
        "display": "Definition Canonical",
        "description": "References the source of pricing information, rules of application for the code this ChargeItem uses.",
        "type": "canonical",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The current state of the ChargeItem.",
        "type": "enum",
        "enumValues": [
          "planned",
          "billable",
          "not-billable",
          "aborted",
          "billed",
          "entered-in-error",
          "unknown"
        ]
      },
      "partOf": {
        "key": "partOf",
        "display": "Part Of",
        "description": "ChargeItems can be grouped to larger ChargeItems covering the whole set.",
        "type": "Reference",
        "targetProfile": [
          "ChargeItem"
        ],
        "array": true
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "A code that identifies the charge, like a billing code.",
        "type": "CodeableConcept"
      },
      "subject": {
        "key": "subject",
        "display": "Subject",
        "description": "The individual or set of individuals the action is being or was performed on.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Group"
        ]
      },
      "context": {
        "key": "context",
        "display": "Context",
        "description": "The encounter or episode of care that establishes the context for this event.",
        "type": "Reference",
        "targetProfile": [
          "Encounter",
          "EpisodeOfCare"
        ]
      },
      "occurrence[x]": {
        "key": "occurrence[x]",
        "display": "Occurrence[x]",
        "description": "Date/time(s) or duration when the charged service was applied.",
        "type": "dateTime"
      },
      "performer": {
        "key": "performer",
        "display": "Performer",
        "description": "Indicates who or what performed or participated in the charged service.",
        "type": "ChargeItem_Performer",
        "array": true
      },
      "performingOrganization": {
        "key": "performingOrganization",
        "display": "Performing Organization",
        "description": "The organization requesting the service.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "requestingOrganization": {
        "key": "requestingOrganization",
        "display": "Requesting Organization",
        "description": "The organization performing the service.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "costCenter": {
        "key": "costCenter",
        "display": "Cost Center",
        "description": "The financial cost center permits the tracking of charge attribution.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "quantity": {
        "key": "quantity",
        "display": "Quantity",
        "description": "Quantity of which the charge item has been serviced.",
        "type": "Quantity"
      },
      "bodysite": {
        "key": "bodysite",
        "display": "Bodysite",
        "description": "The anatomical location where the related service has been applied.",
        "type": "CodeableConcept",
        "array": true
      },
      "factorOverride": {
        "key": "factorOverride",
        "display": "Factor Override",
        "description": "Factor overriding the factor determined by the rules associated with the code.",
        "type": "decimal"
      },
      "priceOverride": {
        "key": "priceOverride",
        "display": "Price Override",
        "description": "Total price of the charge overriding the list price associated with the code.",
        "type": "Money"
      },
      "overrideReason": {
        "key": "overrideReason",
        "display": "Override Reason",
        "description": "If the list price or the rule-based factor associated with the code is overridden, this attribute can capture a text to indicate the  reason for this action.",
        "type": "string"
      },
      "enterer": {
        "key": "enterer",
        "display": "Enterer",
        "description": "The device, practitioner, etc. who entered the charge item.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization",
          "Patient",
          "Device",
          "RelatedPerson"
        ]
      },
      "enteredDate": {
        "key": "enteredDate",
        "display": "Entered Date",
        "description": "Date the charge item was entered.",
        "type": "dateTime"
      },
      "reason": {
        "key": "reason",
        "display": "Reason",
        "description": "Describes why the event occurred in coded or textual form.",
        "type": "CodeableConcept",
        "array": true
      },
      "service": {
        "key": "service",
        "display": "Service",
        "description": "Indicated the rendered service that caused this charge.",
        "type": "Reference",
        "targetProfile": [
          "DiagnosticReport",
          "ImagingStudy",
          "Immunization",
          "MedicationAdministration",
          "MedicationDispense",
          "Observation",
          "Procedure",
          "SupplyDelivery"
        ],
        "array": true
      },
      "product[x]": {
        "key": "product[x]",
        "display": "Product[x]",
        "description": "Identifies the device, food, drug or other product being charged either by type code or reference to an instance.",
        "type": "Reference",
        "targetProfile": [
          "Device",
          "Medication",
          "Substance"
        ]
      },
      "account": {
        "key": "account",
        "display": "Account",
        "description": "Account into which this ChargeItems belongs.",
        "type": "Reference",
        "targetProfile": [
          "Account"
        ],
        "array": true
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "Comments made about the event by the performer, subject or other participants.",
        "type": "Annotation",
        "array": true
      },
      "supportingInformation": {
        "key": "supportingInformation",
        "display": "Supporting Information",
        "description": "Further information supporting this charge.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ],
        "array": true
      }
    }
  },
  "ChargeItem_Performer": {
    "display": "Charge Item Performer",
    "description": "Who performed charged service",
    "properties": {
      "function": {
        "key": "function",
        "display": "Function",
        "description": "Describes the type of performance or participation(e.g. primary surgeon, anesthesiologiest, etc.).",
        "type": "CodeableConcept"
      },
      "actor": {
        "key": "actor",
        "display": "Actor",
        "description": "The device, practitioner, etc. who performed or participated in the service.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization",
          "CareTeam",
          "Patient",
          "Device",
          "RelatedPerson"
        ]
      }
    },
    "backboneElement": true
  },
  "ChargeItemDefinition": {
    "display": "ChargeItemDefinition",
    "description": "The ChargeItemDefinition resource provides the properties that apply to the (billing) codes necessary to calculate costs and prices. The properties may differ largely depending on type and realm, therefore this resource gives only a rough structure and requires profiling for each type of billing code system.",
    "properties": {
      "url": {
        "key": "url",
        "display": "Url",
        "description": "An absolute URI that is used to identify this charge item definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this charge item definition is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the charge item definition is stored on different servers.",
        "type": "uri"
      },
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "A formal identifier that is used to identify this charge item definition when it is represented in other formats, or referenced in a specification, model, design or an instance.",
        "type": "Identifier",
        "array": true
      },
      "version": {
        "key": "version",
        "display": "Version",
        "description": "The identifier that is used to identify this version of the charge item definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the charge item definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence. To provide a version consistent with the Decision Support Service specification, use the format Major.Minor.Revision (e.g. 1.0.0). For more information on versioning knowledge assets, refer to the Decision Support Service specification. Note that a version is required for non-experimental active assets.",
        "type": "string"
      },
      "title": {
        "key": "title",
        "display": "Title",
        "description": "A short, descriptive, user-friendly title for the charge item definition.",
        "type": "string"
      },
      "derivedFromUri": {
        "key": "derivedFromUri",
        "display": "Derived From Uri",
        "description": "The URL pointing to an externally-defined charge item definition that is adhered to in whole or in part by this definition.",
        "type": "uri",
        "array": true
      },
      "partOf": {
        "key": "partOf",
        "display": "Part Of",
        "description": "A larger definition of which this particular definition is a component or step.",
        "type": "canonical",
        "array": true
      },
      "replaces": {
        "key": "replaces",
        "display": "Replaces",
        "description": "As new versions of a protocol or guideline are defined, allows identification of what versions are replaced by a new instance.",
        "type": "canonical",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The current state of the ChargeItemDefinition.",
        "type": "enum",
        "enumValues": [
          "draft",
          "active",
          "retired",
          "unknown"
        ]
      },
      "experimental": {
        "key": "experimental",
        "display": "Experimental",
        "description": "A Boolean value to indicate that this charge item definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
        "type": "boolean"
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "The date  (and optionally time) when the charge item definition was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the charge item definition changes.",
        "type": "dateTime"
      },
      "publisher": {
        "key": "publisher",
        "display": "Publisher",
        "description": "The name of the organization or individual that published the charge item definition.",
        "type": "string"
      },
      "contact": {
        "key": "contact",
        "display": "Contact",
        "description": "Contact details to assist a user in finding and communicating with the publisher.",
        "type": "ContactDetail",
        "array": true
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A free text natural language description of the charge item definition from a consumer's perspective.",
        "type": "markdown"
      },
      "useContext": {
        "key": "useContext",
        "display": "Use Context",
        "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate charge item definition instances.",
        "type": "UsageContext",
        "array": true
      },
      "jurisdiction": {
        "key": "jurisdiction",
        "display": "Jurisdiction",
        "description": "A legal or geographic region in which the charge item definition is intended to be used.",
        "type": "CodeableConcept",
        "array": true
      },
      "copyright": {
        "key": "copyright",
        "display": "Copyright",
        "description": "A copyright statement relating to the charge item definition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the charge item definition.",
        "type": "markdown"
      },
      "approvalDate": {
        "key": "approvalDate",
        "display": "Approval Date",
        "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
        "type": "date"
      },
      "lastReviewDate": {
        "key": "lastReviewDate",
        "display": "Last Review Date",
        "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
        "type": "date"
      },
      "effectivePeriod": {
        "key": "effectivePeriod",
        "display": "Effective Period",
        "description": "The period during which the charge item definition content was or is planned to be in active use.",
        "type": "Period"
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "The defined billing details in this resource pertain to the given billing code.",
        "type": "CodeableConcept"
      },
      "instance": {
        "key": "instance",
        "display": "Instance",
        "description": "The defined billing details in this resource pertain to the given product instance(s).",
        "type": "Reference",
        "targetProfile": [
          "Medication",
          "Substance",
          "Device"
        ],
        "array": true
      },
      "applicability": {
        "key": "applicability",
        "display": "Applicability",
        "description": "Expressions that describe applicability criteria for the billing code.",
        "type": "ChargeItemDefinition_Applicability",
        "array": true
      },
      "propertyGroup": {
        "key": "propertyGroup",
        "display": "Property Group",
        "description": "Group of properties which are applicable under the same conditions. If no applicability rules are established for the group, then all properties always apply.",
        "type": "ChargeItemDefinition_PropertyGroup",
        "array": true
      }
    }
  },
  "ChargeItemDefinition_Applicability": {
    "display": "Charge Item Definition Applicability",
    "description": "Whether or not the billing code is applicable",
    "properties": {
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A brief, natural language description of the condition that effectively communicates the intended semantics.",
        "type": "string"
      },
      "language": {
        "key": "language",
        "display": "Language",
        "description": "The media type of the language for the expression, e.g. \"text/cql\" for Clinical Query Language expressions or \"text/fhirpath\" for FHIRPath expressions.",
        "type": "string"
      },
      "expression": {
        "key": "expression",
        "display": "Expression",
        "description": "An expression that returns true or false, indicating whether the condition is satisfied. When using FHIRPath expressions, the %context environment variable must be replaced at runtime with the ChargeItem resource to which this definition is applied.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "ChargeItemDefinition_PropertyGroup": {
    "display": "Charge Item Definition Property Group",
    "description": "Group of properties which are applicable under the same conditions",
    "properties": {
      "applicability": {
        "key": "applicability",
        "display": "Applicability",
        "description": "Expressions that describe applicability criteria for the priceComponent.",
        "type": "UNKNOWN"
      },
      "priceComponent": {
        "key": "priceComponent",
        "display": "Price Component",
        "description": "The price for a ChargeItem may be calculated as a base price with surcharges/deductions that apply in certain conditions. A ChargeItemDefinition resource that defines the prices, factors and conditions that apply to a billing code is currently under development. The priceComponent element can be used to offer transparency to the recipient of the Invoice of how the prices have been calculated.",
        "type": "ChargeItemDefinition_PropertyGroup_PriceComponent",
        "array": true
      }
    },
    "backboneElement": true
  },
  "ChargeItemDefinition_PropertyGroup_PriceComponent": {
    "display": "Charge Item Definition Property Group_ Price Component",
    "description": "Components of total line item price",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "This code identifies the type of the component.",
        "type": "enum",
        "enumValues": [
          "base",
          "surcharge",
          "deduction",
          "discount",
          "tax",
          "informational"
        ]
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "A code that identifies the component. Codes may be used to differentiate between kinds of taxes, surcharges, discounts etc.",
        "type": "CodeableConcept"
      },
      "factor": {
        "key": "factor",
        "display": "Factor",
        "description": "The factor that has been applied on the base price for calculating this component.",
        "type": "decimal"
      },
      "amount": {
        "key": "amount",
        "display": "Amount",
        "description": "The amount calculated for this component.",
        "type": "Money"
      }
    },
    "backboneElement": true
  },
  "Claim": {
    "display": "Claim",
    "description": "A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "A unique identifier assigned to this claim.",
        "type": "Identifier",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of the resource instance.",
        "type": "enum",
        "enumValues": [
          "active",
          "cancelled",
          "draft",
          "entered-in-error"
        ]
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The category of claim, e.g. oral, pharmacy, vision, institutional, professional.",
        "type": "CodeableConcept"
      },
      "subType": {
        "key": "subType",
        "display": "Sub Type",
        "description": "A finer grained suite of claim type codes which may convey additional information such as Inpatient vs Outpatient and/or a specialty service.",
        "type": "CodeableConcept"
      },
      "use": {
        "key": "use",
        "display": "Use",
        "description": "A code to indicate whether the nature of the request is: to request adjudication of products and services previously rendered; or requesting authorization and adjudication for provision in the future; or requesting the non-binding adjudication of the listed products and services which could be provided in the future.",
        "type": "enum",
        "enumValues": [
          "claim",
          "preauthorization",
          "predetermination"
        ]
      },
      "patient": {
        "key": "patient",
        "display": "Patient",
        "description": "The party to whom the professional services and/or products have been supplied or are being considered and for whom actual or forecast reimbursement is sought.",
        "type": "Reference",
        "targetProfile": [
          "Patient"
        ]
      },
      "billablePeriod": {
        "key": "billablePeriod",
        "display": "Billable Period",
        "description": "The period for which charges are being submitted.",
        "type": "Period"
      },
      "created": {
        "key": "created",
        "display": "Created",
        "description": "The date this resource was created.",
        "type": "dateTime"
      },
      "enterer": {
        "key": "enterer",
        "display": "Enterer",
        "description": "Individual who created the claim, predetermination or preauthorization.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole"
        ]
      },
      "insurer": {
        "key": "insurer",
        "display": "Insurer",
        "description": "The Insurer who is target of the request.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "provider": {
        "key": "provider",
        "display": "Provider",
        "description": "The provider which is responsible for the claim, predetermination or preauthorization.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization"
        ]
      },
      "priority": {
        "key": "priority",
        "display": "Priority",
        "description": "The provider-required urgency of processing the request. Typical values include: stat, routine deferred.",
        "type": "CodeableConcept"
      },
      "fundsReserve": {
        "key": "fundsReserve",
        "display": "Funds Reserve",
        "description": "A code to indicate whether and for whom funds are to be reserved for future claims.",
        "type": "CodeableConcept"
      },
      "related": {
        "key": "related",
        "display": "Related",
        "description": "Other claims which are related to this claim such as prior submissions or claims for related services or for the same event.",
        "type": "Claim_Related",
        "array": true
      },
      "prescription": {
        "key": "prescription",
        "display": "Prescription",
        "description": "Prescription to support the dispensing of pharmacy, device or vision products.",
        "type": "Reference",
        "targetProfile": [
          "DeviceRequest",
          "MedicationRequest",
          "VisionPrescription"
        ]
      },
      "originalPrescription": {
        "key": "originalPrescription",
        "display": "Original Prescription",
        "description": "Original prescription which has been superseded by this prescription to support the dispensing of pharmacy services, medications or products.",
        "type": "Reference",
        "targetProfile": [
          "DeviceRequest",
          "MedicationRequest",
          "VisionPrescription"
        ]
      },
      "payee": {
        "key": "payee",
        "display": "Payee",
        "description": "The party to be reimbursed for cost of the products and services according to the terms of the policy.",
        "type": "Claim_Payee"
      },
      "referral": {
        "key": "referral",
        "display": "Referral",
        "description": "A reference to a referral resource.",
        "type": "Reference",
        "targetProfile": [
          "ServiceRequest"
        ]
      },
      "facility": {
        "key": "facility",
        "display": "Facility",
        "description": "Facility where the services were provided.",
        "type": "Reference",
        "targetProfile": [
          "Location"
        ]
      },
      "careTeam": {
        "key": "careTeam",
        "display": "Care Team",
        "description": "The members of the team who provided the products and services.",
        "type": "Claim_CareTeam",
        "array": true
      },
      "supportingInfo": {
        "key": "supportingInfo",
        "display": "Supporting Info",
        "description": "Additional information codes regarding exceptions, special considerations, the condition, situation, prior or concurrent issues.",
        "type": "Claim_SupportingInfo",
        "array": true
      },
      "diagnosis": {
        "key": "diagnosis",
        "display": "Diagnosis",
        "description": "Information about diagnoses relevant to the claim items.",
        "type": "Claim_Diagnosis",
        "array": true
      },
      "procedure": {
        "key": "procedure",
        "display": "Procedure",
        "description": "Procedures performed on the patient relevant to the billing items with the claim.",
        "type": "Claim_Procedure",
        "array": true
      },
      "insurance": {
        "key": "insurance",
        "display": "Insurance",
        "description": "Financial instruments for reimbursement for the health care products and services specified on the claim.",
        "type": "Claim_Insurance",
        "array": true
      },
      "accident": {
        "key": "accident",
        "display": "Accident",
        "description": "Details of an accident which resulted in injuries which required the products and services listed in the claim.",
        "type": "Claim_Accident"
      },
      "item": {
        "key": "item",
        "display": "Item",
        "description": "A claim line. Either a simple  product or service or a 'group' of details which can each be a simple items or groups of sub-details.",
        "type": "Claim_Item",
        "array": true
      },
      "total": {
        "key": "total",
        "display": "Total",
        "description": "The total value of the all the items in the claim.",
        "type": "Money"
      }
    }
  },
  "Claim_Related": {
    "display": "Claim Related",
    "description": "Prior or corollary claims",
    "properties": {
      "claim": {
        "key": "claim",
        "display": "Claim",
        "description": "Reference to a related claim.",
        "type": "Reference",
        "targetProfile": [
          "Claim"
        ]
      },
      "relationship": {
        "key": "relationship",
        "display": "Relationship",
        "description": "A code to convey how the claims are related.",
        "type": "CodeableConcept"
      },
      "reference": {
        "key": "reference",
        "display": "Reference",
        "description": "An alternate organizational reference to the case or file to which this particular claim pertains.",
        "type": "Identifier"
      }
    },
    "backboneElement": true
  },
  "Claim_Payee": {
    "display": "Claim Payee",
    "description": "Recipient of benefits payable",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Type of Party to be reimbursed: subscriber, provider, other.",
        "type": "CodeableConcept"
      },
      "party": {
        "key": "party",
        "display": "Party",
        "description": "Reference to the individual or organization to whom any payment will be made.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization",
          "Patient",
          "RelatedPerson"
        ]
      }
    },
    "backboneElement": true
  },
  "Claim_CareTeam": {
    "display": "Claim Care Team",
    "description": "Members of the care team",
    "properties": {
      "sequence": {
        "key": "sequence",
        "display": "Sequence",
        "description": "A number to uniquely identify care team entries.",
        "type": "positiveInt"
      },
      "provider": {
        "key": "provider",
        "display": "Provider",
        "description": "Member of the team who provided the product or service.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization"
        ]
      },
      "responsible": {
        "key": "responsible",
        "display": "Responsible",
        "description": "The party who is billing and/or responsible for the claimed products or services.",
        "type": "boolean"
      },
      "role": {
        "key": "role",
        "display": "Role",
        "description": "The lead, assisting or supervising practitioner and their discipline if a multidisciplinary team.",
        "type": "CodeableConcept"
      },
      "qualification": {
        "key": "qualification",
        "display": "Qualification",
        "description": "The qualification of the practitioner which is applicable for this service.",
        "type": "CodeableConcept"
      }
    },
    "backboneElement": true
  },
  "Claim_SupportingInfo": {
    "display": "Claim Supporting Info",
    "description": "Supporting information",
    "properties": {
      "sequence": {
        "key": "sequence",
        "display": "Sequence",
        "description": "A number to uniquely identify supporting information entries.",
        "type": "positiveInt"
      },
      "category": {
        "key": "category",
        "display": "Category",
        "description": "The general class of the information supplied: information; exception; accident, employment; onset, etc.",
        "type": "CodeableConcept"
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient  for which care is sought.",
        "type": "CodeableConcept"
      },
      "timing[x]": {
        "key": "timing[x]",
        "display": "Timing[x]",
        "description": "The date when or period to which this information refers.",
        "type": "date"
      },
      "value[x]": {
        "key": "value[x]",
        "display": "Value[x]",
        "description": "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
        "type": "boolean"
      },
      "reason": {
        "key": "reason",
        "display": "Reason",
        "description": "Provides the reason in the situation where a reason code is required in addition to the content.",
        "type": "CodeableConcept"
      }
    },
    "backboneElement": true
  },
  "Claim_Diagnosis": {
    "display": "Claim Diagnosis",
    "description": "Pertinent diagnosis information",
    "properties": {
      "sequence": {
        "key": "sequence",
        "display": "Sequence",
        "description": "A number to uniquely identify diagnosis entries.",
        "type": "positiveInt"
      },
      "diagnosis[x]": {
        "key": "diagnosis[x]",
        "display": "Diagnosis[x]",
        "description": "The nature of illness or problem in a coded form or as a reference to an external defined Condition.",
        "type": "CodeableConcept"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "When the condition was observed or the relative ranking.",
        "type": "CodeableConcept",
        "array": true
      },
      "onAdmission": {
        "key": "onAdmission",
        "display": "On Admission",
        "description": "Indication of whether the diagnosis was present on admission to a facility.",
        "type": "CodeableConcept"
      },
      "packageCode": {
        "key": "packageCode",
        "display": "Package Code",
        "description": "A package billing code or bundle code used to group products and services to a particular health condition (such as heart attack) which is based on a predetermined grouping code system.",
        "type": "CodeableConcept"
      }
    },
    "backboneElement": true
  },
  "Claim_Procedure": {
    "display": "Claim Procedure",
    "description": "Clinical procedures performed",
    "properties": {
      "sequence": {
        "key": "sequence",
        "display": "Sequence",
        "description": "A number to uniquely identify procedure entries.",
        "type": "positiveInt"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "When the condition was observed or the relative ranking.",
        "type": "CodeableConcept",
        "array": true
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "Date and optionally time the procedure was performed.",
        "type": "dateTime"
      },
      "procedure[x]": {
        "key": "procedure[x]",
        "display": "Procedure[x]",
        "description": "The code or reference to a Procedure resource which identifies the clinical intervention performed.",
        "type": "CodeableConcept"
      },
      "udi": {
        "key": "udi",
        "display": "Udi",
        "description": "Unique Device Identifiers associated with this line item.",
        "type": "Reference",
        "targetProfile": [
          "Device"
        ],
        "array": true
      }
    },
    "backboneElement": true
  },
  "Claim_Insurance": {
    "display": "Claim Insurance",
    "description": "Patient insurance information",
    "properties": {
      "sequence": {
        "key": "sequence",
        "display": "Sequence",
        "description": "A number to uniquely identify insurance entries and provide a sequence of coverages to convey coordination of benefit order.",
        "type": "positiveInt"
      },
      "focal": {
        "key": "focal",
        "display": "Focal",
        "description": "A flag to indicate that this Coverage is to be used for adjudication of this claim when set to true.",
        "type": "boolean"
      },
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "The business identifier to be used when the claim is sent for adjudication against this insurance policy.",
        "type": "Identifier"
      },
      "coverage": {
        "key": "coverage",
        "display": "Coverage",
        "description": "Reference to the insurance card level information contained in the Coverage resource. The coverage issuing insurer will use these details to locate the patient's actual coverage within the insurer's information system.",
        "type": "Reference",
        "targetProfile": [
          "Coverage"
        ]
      },
      "businessArrangement": {
        "key": "businessArrangement",
        "display": "Business Arrangement",
        "description": "A business agreement number established between the provider and the insurer for special business processing purposes.",
        "type": "string"
      },
      "preAuthRef": {
        "key": "preAuthRef",
        "display": "Pre Auth Ref",
        "description": "Reference numbers previously provided by the insurer to the provider to be quoted on subsequent claims containing services or products related to the prior authorization.",
        "type": "string",
        "array": true
      },
      "claimResponse": {
        "key": "claimResponse",
        "display": "Claim Response",
        "description": "The result of the adjudication of the line items for the Coverage specified in this insurance.",
        "type": "Reference",
        "targetProfile": [
          "ClaimResponse"
        ]
      }
    },
    "backboneElement": true
  },
  "Claim_Accident": {
    "display": "Claim Accident",
    "description": "Details of the event",
    "properties": {
      "date": {
        "key": "date",
        "display": "Date",
        "description": "Date of an accident event  related to the products and services contained in the claim.",
        "type": "date"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The type or context of the accident event for the purposes of selection of potential insurance coverages and determination of coordination between insurers.",
        "type": "CodeableConcept"
      },
      "location[x]": {
        "key": "location[x]",
        "display": "Location[x]",
        "description": "The physical location of the accident event.",
        "type": "Address"
      }
    },
    "backboneElement": true
  },
  "Claim_Item": {
    "display": "Claim Item",
    "description": "Product or service provided",
    "properties": {
      "sequence": {
        "key": "sequence",
        "display": "Sequence",
        "description": "A number to uniquely identify item entries.",
        "type": "positiveInt"
      },
      "careTeamSequence": {
        "key": "careTeamSequence",
        "display": "Care Team Sequence",
        "description": "CareTeam members related to this service or product.",
        "type": "positiveInt",
        "array": true
      },
      "diagnosisSequence": {
        "key": "diagnosisSequence",
        "display": "Diagnosis Sequence",
        "description": "Diagnosis applicable for this service or product.",
        "type": "positiveInt",
        "array": true
      },
      "procedureSequence": {
        "key": "procedureSequence",
        "display": "Procedure Sequence",
        "description": "Procedures applicable for this service or product.",
        "type": "positiveInt",
        "array": true
      },
      "informationSequence": {
        "key": "informationSequence",
        "display": "Information Sequence",
        "description": "Exceptions, special conditions and supporting information applicable for this service or product.",
        "type": "positiveInt",
        "array": true
      },
      "revenue": {
        "key": "revenue",
        "display": "Revenue",
        "description": "The type of revenue or cost center providing the product and/or service.",
        "type": "CodeableConcept"
      },
      "category": {
        "key": "category",
        "display": "Category",
        "description": "Code to identify the general type of benefits under which products and services are provided.",
        "type": "CodeableConcept"
      },
      "productOrService": {
        "key": "productOrService",
        "display": "Product Or Service",
        "description": "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.",
        "type": "CodeableConcept"
      },
      "modifier": {
        "key": "modifier",
        "display": "Modifier",
        "description": "Item typification or modifiers codes to convey additional context for the product or service.",
        "type": "CodeableConcept",
        "array": true
      },
      "programCode": {
        "key": "programCode",
        "display": "Program Code",
        "description": "Identifies the program under which this may be recovered.",
        "type": "CodeableConcept",
        "array": true
      },
      "serviced[x]": {
        "key": "serviced[x]",
        "display": "Serviced[x]",
        "description": "The date or dates when the service or product was supplied, performed or completed.",
        "type": "date"
      },
      "location[x]": {
        "key": "location[x]",
        "display": "Location[x]",
        "description": "Where the product or service was provided.",
        "type": "CodeableConcept"
      },
      "quantity": {
        "key": "quantity",
        "display": "Quantity",
        "description": "The number of repetitions of a service or product.",
        "type": "Quantity"
      },
      "unitPrice": {
        "key": "unitPrice",
        "display": "Unit Price",
        "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
        "type": "Money"
      },
      "factor": {
        "key": "factor",
        "display": "Factor",
        "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
        "type": "decimal"
      },
      "net": {
        "key": "net",
        "display": "Net",
        "description": "The quantity times the unit price for an additional service or product or charge.",
        "type": "Money"
      },
      "udi": {
        "key": "udi",
        "display": "Udi",
        "description": "Unique Device Identifiers associated with this line item.",
        "type": "Reference",
        "targetProfile": [
          "Device"
        ],
        "array": true
      },
      "bodySite": {
        "key": "bodySite",
        "display": "Body Site",
        "description": "Physical service site on the patient (limb, tooth, etc.).",
        "type": "CodeableConcept"
      },
      "subSite": {
        "key": "subSite",
        "display": "Sub Site",
        "description": "A region or surface of the bodySite, e.g. limb region or tooth surface(s).",
        "type": "CodeableConcept",
        "array": true
      },
      "encounter": {
        "key": "encounter",
        "display": "Encounter",
        "description": "The Encounters during which this Claim was created or to which the creation of this record is tightly associated.",
        "type": "Reference",
        "targetProfile": [
          "Encounter"
        ],
        "array": true
      },
      "detail": {
        "key": "detail",
        "display": "Detail",
        "description": "A claim detail line. Either a simple (a product or service) or a 'group' of sub-details which are simple items.",
        "type": "Claim_Item_Detail",
        "array": true
      }
    },
    "backboneElement": true
  },
  "Claim_Item_Detail": {
    "display": "Claim Item_ Detail",
    "description": "Product or service provided",
    "properties": {
      "sequence": {
        "key": "sequence",
        "display": "Sequence",
        "description": "A number to uniquely identify item entries.",
        "type": "positiveInt"
      },
      "revenue": {
        "key": "revenue",
        "display": "Revenue",
        "description": "The type of revenue or cost center providing the product and/or service.",
        "type": "CodeableConcept"
      },
      "category": {
        "key": "category",
        "display": "Category",
        "description": "Code to identify the general type of benefits under which products and services are provided.",
        "type": "CodeableConcept"
      },
      "productOrService": {
        "key": "productOrService",
        "display": "Product Or Service",
        "description": "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.",
        "type": "CodeableConcept"
      },
      "modifier": {
        "key": "modifier",
        "display": "Modifier",
        "description": "Item typification or modifiers codes to convey additional context for the product or service.",
        "type": "CodeableConcept",
        "array": true
      },
      "programCode": {
        "key": "programCode",
        "display": "Program Code",
        "description": "Identifies the program under which this may be recovered.",
        "type": "CodeableConcept",
        "array": true
      },
      "quantity": {
        "key": "quantity",
        "display": "Quantity",
        "description": "The number of repetitions of a service or product.",
        "type": "Quantity"
      },
      "unitPrice": {
        "key": "unitPrice",
        "display": "Unit Price",
        "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
        "type": "Money"
      },
      "factor": {
        "key": "factor",
        "display": "Factor",
        "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
        "type": "decimal"
      },
      "net": {
        "key": "net",
        "display": "Net",
        "description": "The quantity times the unit price for an additional service or product or charge.",
        "type": "Money"
      },
      "udi": {
        "key": "udi",
        "display": "Udi",
        "description": "Unique Device Identifiers associated with this line item.",
        "type": "Reference",
        "targetProfile": [
          "Device"
        ],
        "array": true
      },
      "subDetail": {
        "key": "subDetail",
        "display": "Sub Detail",
        "description": "A claim detail line. Either a simple (a product or service) or a 'group' of sub-details which are simple items.",
        "type": "Claim_Item_Detail_SubDetail",
        "array": true
      }
    },
    "backboneElement": true
  },
  "Claim_Item_Detail_SubDetail": {
    "display": "Claim Item_ Detail_ Sub Detail",
    "description": "Product or service provided",
    "properties": {
      "sequence": {
        "key": "sequence",
        "display": "Sequence",
        "description": "A number to uniquely identify item entries.",
        "type": "positiveInt"
      },
      "revenue": {
        "key": "revenue",
        "display": "Revenue",
        "description": "The type of revenue or cost center providing the product and/or service.",
        "type": "CodeableConcept"
      },
      "category": {
        "key": "category",
        "display": "Category",
        "description": "Code to identify the general type of benefits under which products and services are provided.",
        "type": "CodeableConcept"
      },
      "productOrService": {
        "key": "productOrService",
        "display": "Product Or Service",
        "description": "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.",
        "type": "CodeableConcept"
      },
      "modifier": {
        "key": "modifier",
        "display": "Modifier",
        "description": "Item typification or modifiers codes to convey additional context for the product or service.",
        "type": "CodeableConcept",
        "array": true
      },
      "programCode": {
        "key": "programCode",
        "display": "Program Code",
        "description": "Identifies the program under which this may be recovered.",
        "type": "CodeableConcept",
        "array": true
      },
      "quantity": {
        "key": "quantity",
        "display": "Quantity",
        "description": "The number of repetitions of a service or product.",
        "type": "Quantity"
      },
      "unitPrice": {
        "key": "unitPrice",
        "display": "Unit Price",
        "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
        "type": "Money"
      },
      "factor": {
        "key": "factor",
        "display": "Factor",
        "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
        "type": "decimal"
      },
      "net": {
        "key": "net",
        "display": "Net",
        "description": "The quantity times the unit price for an additional service or product or charge.",
        "type": "Money"
      },
      "udi": {
        "key": "udi",
        "display": "Udi",
        "description": "Unique Device Identifiers associated with this line item.",
        "type": "Reference",
        "targetProfile": [
          "Device"
        ],
        "array": true
      }
    },
    "backboneElement": true
  },
  "ClaimResponse": {
    "display": "ClaimResponse",
    "description": "This resource provides the adjudication details from the processing of a Claim resource.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "A unique identifier assigned to this claim response.",
        "type": "Identifier",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of the resource instance.",
        "type": "enum",
        "enumValues": [
          "active",
          "cancelled",
          "draft",
          "entered-in-error"
        ]
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "A finer grained suite of claim type codes which may convey additional information such as Inpatient vs Outpatient and/or a specialty service.",
        "type": "CodeableConcept"
      },
      "subType": {
        "key": "subType",
        "display": "Sub Type",
        "description": "A finer grained suite of claim type codes which may convey additional information such as Inpatient vs Outpatient and/or a specialty service.",
        "type": "CodeableConcept"
      },
      "use": {
        "key": "use",
        "display": "Use",
        "description": "A code to indicate whether the nature of the request is: to request adjudication of products and services previously rendered; or requesting authorization and adjudication for provision in the future; or requesting the non-binding adjudication of the listed products and services which could be provided in the future.",
        "type": "enum",
        "enumValues": [
          "claim",
          "preauthorization",
          "predetermination"
        ]
      },
      "patient": {
        "key": "patient",
        "display": "Patient",
        "description": "The party to whom the professional services and/or products have been supplied or are being considered and for whom actual for facast reimbursement is sought.",
        "type": "Reference",
        "targetProfile": [
          "Patient"
        ]
      },
      "created": {
        "key": "created",
        "display": "Created",
        "description": "The date this resource was created.",
        "type": "dateTime"
      },
      "insurer": {
        "key": "insurer",
        "display": "Insurer",
        "description": "The party responsible for authorization, adjudication and reimbursement.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "requestor": {
        "key": "requestor",
        "display": "Requestor",
        "description": "The provider which is responsible for the claim, predetermination or preauthorization.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization"
        ]
      },
      "request": {
        "key": "request",
        "display": "Request",
        "description": "Original request resource reference.",
        "type": "Reference",
        "targetProfile": [
          "Claim"
        ]
      },
      "outcome": {
        "key": "outcome",
        "display": "Outcome",
        "description": "The outcome of the claim, predetermination, or preauthorization processing.",
        "type": "enum",
        "enumValues": [
          "queued",
          "complete",
          "error",
          "partial"
        ]
      },
      "disposition": {
        "key": "disposition",
        "display": "Disposition",
        "description": "A human readable description of the status of the adjudication.",
        "type": "string"
      },
      "preAuthRef": {
        "key": "preAuthRef",
        "display": "Pre Auth Ref",
        "description": "Reference from the Insurer which is used in later communications which refers to this adjudication.",
        "type": "string"
      },
      "preAuthPeriod": {
        "key": "preAuthPeriod",
        "display": "Pre Auth Period",
        "description": "The time frame during which this authorization is effective.",
        "type": "Period"
      },
      "payeeType": {
        "key": "payeeType",
        "display": "Payee Type",
        "description": "Type of Party to be reimbursed: subscriber, provider, other.",
        "type": "CodeableConcept"
      },
      "item": {
        "key": "item",
        "display": "Item",
        "description": "A claim line. Either a simple (a product or service) or a 'group' of details which can also be a simple items or groups of sub-details.",
        "type": "ClaimResponse_Item",
        "array": true
      },
      "addItem": {
        "key": "addItem",
        "display": "Add Item",
        "description": "The first-tier service adjudications for payor added product or service lines.",
        "type": "ClaimResponse_AddItem",
        "array": true
      },
      "adjudication": {
        "key": "adjudication",
        "display": "Adjudication",
        "description": "The adjudication results which are presented at the header level rather than at the line-item or add-item levels.",
        "type": "UNKNOWN"
      },
      "total": {
        "key": "total",
        "display": "Total",
        "description": "Categorized monetary totals for the adjudication.",
        "type": "ClaimResponse_Total",
        "array": true
      },
      "payment": {
        "key": "payment",
        "display": "Payment",
        "description": "Payment details for the adjudication of the claim.",
        "type": "ClaimResponse_Payment"
      },
      "fundsReserve": {
        "key": "fundsReserve",
        "display": "Funds Reserve",
        "description": "A code, used only on a response to a preauthorization, to indicate whether the benefits payable have been reserved and for whom.",
        "type": "CodeableConcept"
      },
      "formCode": {
        "key": "formCode",
        "display": "Form Code",
        "description": "A code for the form to be used for printing the content.",
        "type": "CodeableConcept"
      },
      "form": {
        "key": "form",
        "display": "Form",
        "description": "The actual form, by reference or inclusion, for printing the content or an EOB.",
        "type": "Attachment"
      },
      "processNote": {
        "key": "processNote",
        "display": "Process Note",
        "description": "A note that describes or explains adjudication results in a human readable form.",
        "type": "ClaimResponse_ProcessNote",
        "array": true
      },
      "communicationRequest": {
        "key": "communicationRequest",
        "display": "Communication Request",
        "description": "Request for additional supporting or authorizing information.",
        "type": "Reference",
        "targetProfile": [
          "CommunicationRequest"
        ],
        "array": true
      },
      "insurance": {
        "key": "insurance",
        "display": "Insurance",
        "description": "Financial instruments for reimbursement for the health care products and services specified on the claim.",
        "type": "ClaimResponse_Insurance",
        "array": true
      },
      "error": {
        "key": "error",
        "display": "Error",
        "description": "Errors encountered during the processing of the adjudication.",
        "type": "ClaimResponse_Error",
        "array": true
      }
    }
  },
  "ClaimResponse_Item": {
    "display": "Claim Response Item",
    "description": "Adjudication for claim line items",
    "properties": {
      "itemSequence": {
        "key": "itemSequence",
        "display": "Item Sequence",
        "description": "A number to uniquely reference the claim item entries.",
        "type": "positiveInt"
      },
      "noteNumber": {
        "key": "noteNumber",
        "display": "Note Number",
        "description": "The numbers associated with notes below which apply to the adjudication of this item.",
        "type": "positiveInt",
        "array": true
      },
      "adjudication": {
        "key": "adjudication",
        "display": "Adjudication",
        "description": "If this item is a group then the values here are a summary of the adjudication of the detail items. If this item is a simple product or service then this is the result of the adjudication of this item.",
        "type": "ClaimResponse_Item_Adjudication",
        "array": true
      },
      "detail": {
        "key": "detail",
        "display": "Detail",
        "description": "A claim detail. Either a simple (a product or service) or a 'group' of sub-details which are simple items.",
        "type": "ClaimResponse_Item_Detail",
        "array": true
      }
    },
    "backboneElement": true
  },
  "ClaimResponse_Item_Adjudication": {
    "display": "Claim Response Item_ Adjudication",
    "description": "Adjudication details",
    "properties": {
      "category": {
        "key": "category",
        "display": "Category",
        "description": "A code to indicate the information type of this adjudication record. Information types may include the value submitted, maximum values or percentages allowed or payable under the plan, amounts that: the patient is responsible for in aggregate or pertaining to this item; amounts paid by other coverages; and, the benefit payable for this item.",
        "type": "CodeableConcept"
      },
      "reason": {
        "key": "reason",
        "display": "Reason",
        "description": "A code supporting the understanding of the adjudication result and explaining variance from expected amount.",
        "type": "CodeableConcept"
      },
      "amount": {
        "key": "amount",
        "display": "Amount",
        "description": "Monetary amount associated with the category.",
        "type": "Money"
      },
      "value": {
        "key": "value",
        "display": "Value",
        "description": "A non-monetary value associated with the category. Mutually exclusive to the amount element above.",
        "type": "decimal"
      }
    },
    "backboneElement": true
  },
  "ClaimResponse_Item_Detail": {
    "display": "Claim Response Item_ Detail",
    "description": "Adjudication for claim details",
    "properties": {
      "detailSequence": {
        "key": "detailSequence",
        "display": "Detail Sequence",
        "description": "A number to uniquely reference the claim detail entry.",
        "type": "positiveInt"
      },
      "noteNumber": {
        "key": "noteNumber",
        "display": "Note Number",
        "description": "The numbers associated with notes below which apply to the adjudication of this item.",
        "type": "positiveInt",
        "array": true
      },
      "adjudication": {
        "key": "adjudication",
        "display": "Adjudication",
        "description": "The adjudication results.",
        "type": "UNKNOWN"
      },
      "subDetail": {
        "key": "subDetail",
        "display": "Sub Detail",
        "description": "A sub-detail adjudication of a simple product or service.",
        "type": "ClaimResponse_Item_Detail_SubDetail",
        "array": true
      }
    },
    "backboneElement": true
  },
  "ClaimResponse_Item_Detail_SubDetail": {
    "display": "Claim Response Item_ Detail_ Sub Detail",
    "description": "Adjudication for claim sub-details",
    "properties": {
      "subDetailSequence": {
        "key": "subDetailSequence",
        "display": "Sub Detail Sequence",
        "description": "A number to uniquely reference the claim sub-detail entry.",
        "type": "positiveInt"
      },
      "noteNumber": {
        "key": "noteNumber",
        "display": "Note Number",
        "description": "The numbers associated with notes below which apply to the adjudication of this item.",
        "type": "positiveInt",
        "array": true
      },
      "adjudication": {
        "key": "adjudication",
        "display": "Adjudication",
        "description": "The adjudication results.",
        "type": "UNKNOWN"
      }
    },
    "backboneElement": true
  },
  "ClaimResponse_AddItem": {
    "display": "Claim Response Add Item",
    "description": "Insurer added line items",
    "properties": {
      "itemSequence": {
        "key": "itemSequence",
        "display": "Item Sequence",
        "description": "Claim items which this service line is intended to replace.",
        "type": "positiveInt",
        "array": true
      },
      "detailSequence": {
        "key": "detailSequence",
        "display": "Detail Sequence",
        "description": "The sequence number of the details within the claim item which this line is intended to replace.",
        "type": "positiveInt",
        "array": true
      },
      "subdetailSequence": {
        "key": "subdetailSequence",
        "display": "Subdetail Sequence",
        "description": "The sequence number of the sub-details within the details within the claim item which this line is intended to replace.",
        "type": "positiveInt",
        "array": true
      },
      "provider": {
        "key": "provider",
        "display": "Provider",
        "description": "The providers who are authorized for the services rendered to the patient.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization"
        ],
        "array": true
      },
      "productOrService": {
        "key": "productOrService",
        "display": "Product Or Service",
        "description": "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.",
        "type": "CodeableConcept"
      },
      "modifier": {
        "key": "modifier",
        "display": "Modifier",
        "description": "Item typification or modifiers codes to convey additional context for the product or service.",
        "type": "CodeableConcept",
        "array": true
      },
      "programCode": {
        "key": "programCode",
        "display": "Program Code",
        "description": "Identifies the program under which this may be recovered.",
        "type": "CodeableConcept",
        "array": true
      },
      "serviced[x]": {
        "key": "serviced[x]",
        "display": "Serviced[x]",
        "description": "The date or dates when the service or product was supplied, performed or completed.",
        "type": "date"
      },
      "location[x]": {
        "key": "location[x]",
        "display": "Location[x]",
        "description": "Where the product or service was provided.",
        "type": "CodeableConcept"
      },
      "quantity": {
        "key": "quantity",
        "display": "Quantity",
        "description": "The number of repetitions of a service or product.",
        "type": "Quantity"
      },
      "unitPrice": {
        "key": "unitPrice",
        "display": "Unit Price",
        "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
        "type": "Money"
      },
      "factor": {
        "key": "factor",
        "display": "Factor",
        "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
        "type": "decimal"
      },
      "net": {
        "key": "net",
        "display": "Net",
        "description": "The quantity times the unit price for an additional service or product or charge.",
        "type": "Money"
      },
      "bodySite": {
        "key": "bodySite",
        "display": "Body Site",
        "description": "Physical service site on the patient (limb, tooth, etc.).",
        "type": "CodeableConcept"
      },
      "subSite": {
        "key": "subSite",
        "display": "Sub Site",
        "description": "A region or surface of the bodySite, e.g. limb region or tooth surface(s).",
        "type": "CodeableConcept",
        "array": true
      },
      "noteNumber": {
        "key": "noteNumber",
        "display": "Note Number",
        "description": "The numbers associated with notes below which apply to the adjudication of this item.",
        "type": "positiveInt",
        "array": true
      },
      "adjudication": {
        "key": "adjudication",
        "display": "Adjudication",
        "description": "The adjudication results.",
        "type": "UNKNOWN"
      },
      "detail": {
        "key": "detail",
        "display": "Detail",
        "description": "The second-tier service adjudications for payor added services.",
        "type": "ClaimResponse_AddItem_Detail",
        "array": true
      }
    },
    "backboneElement": true
  },
  "ClaimResponse_AddItem_Detail": {
    "display": "Claim Response Add Item_ Detail",
    "description": "Insurer added line details",
    "properties": {
      "productOrService": {
        "key": "productOrService",
        "display": "Product Or Service",
        "description": "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.",
        "type": "CodeableConcept"
      },
      "modifier": {
        "key": "modifier",
        "display": "Modifier",
        "description": "Item typification or modifiers codes to convey additional context for the product or service.",
        "type": "CodeableConcept",
        "array": true
      },
      "quantity": {
        "key": "quantity",
        "display": "Quantity",
        "description": "The number of repetitions of a service or product.",
        "type": "Quantity"
      },
      "unitPrice": {
        "key": "unitPrice",
        "display": "Unit Price",
        "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
        "type": "Money"
      },
      "factor": {
        "key": "factor",
        "display": "Factor",
        "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
        "type": "decimal"
      },
      "net": {
        "key": "net",
        "display": "Net",
        "description": "The quantity times the unit price for an additional service or product or charge.",
        "type": "Money"
      },
      "noteNumber": {
        "key": "noteNumber",
        "display": "Note Number",
        "description": "The numbers associated with notes below which apply to the adjudication of this item.",
        "type": "positiveInt",
        "array": true
      },
      "adjudication": {
        "key": "adjudication",
        "display": "Adjudication",
        "description": "The adjudication results.",
        "type": "UNKNOWN"
      },
      "subDetail": {
        "key": "subDetail",
        "display": "Sub Detail",
        "description": "The third-tier service adjudications for payor added services.",
        "type": "ClaimResponse_AddItem_Detail_SubDetail",
        "array": true
      }
    },
    "backboneElement": true
  },
  "ClaimResponse_AddItem_Detail_SubDetail": {
    "display": "Claim Response Add Item_ Detail_ Sub Detail",
    "description": "Insurer added line items",
    "properties": {
      "productOrService": {
        "key": "productOrService",
        "display": "Product Or Service",
        "description": "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.",
        "type": "CodeableConcept"
      },
      "modifier": {
        "key": "modifier",
        "display": "Modifier",
        "description": "Item typification or modifiers codes to convey additional context for the product or service.",
        "type": "CodeableConcept",
        "array": true
      },
      "quantity": {
        "key": "quantity",
        "display": "Quantity",
        "description": "The number of repetitions of a service or product.",
        "type": "Quantity"
      },
      "unitPrice": {
        "key": "unitPrice",
        "display": "Unit Price",
        "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
        "type": "Money"
      },
      "factor": {
        "key": "factor",
        "display": "Factor",
        "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
        "type": "decimal"
      },
      "net": {
        "key": "net",
        "display": "Net",
        "description": "The quantity times the unit price for an additional service or product or charge.",
        "type": "Money"
      },
      "noteNumber": {
        "key": "noteNumber",
        "display": "Note Number",
        "description": "The numbers associated with notes below which apply to the adjudication of this item.",
        "type": "positiveInt",
        "array": true
      },
      "adjudication": {
        "key": "adjudication",
        "display": "Adjudication",
        "description": "The adjudication results.",
        "type": "UNKNOWN"
      }
    },
    "backboneElement": true
  },
  "ClaimResponse_Total": {
    "display": "Claim Response Total",
    "description": "Adjudication totals",
    "properties": {
      "category": {
        "key": "category",
        "display": "Category",
        "description": "A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.",
        "type": "CodeableConcept"
      },
      "amount": {
        "key": "amount",
        "display": "Amount",
        "description": "Monetary total amount associated with the category.",
        "type": "Money"
      }
    },
    "backboneElement": true
  },
  "ClaimResponse_Payment": {
    "display": "Claim Response Payment",
    "description": "Payment Details",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Whether this represents partial or complete payment of the benefits payable.",
        "type": "CodeableConcept"
      },
      "adjustment": {
        "key": "adjustment",
        "display": "Adjustment",
        "description": "Total amount of all adjustments to this payment included in this transaction which are not related to this claim's adjudication.",
        "type": "Money"
      },
      "adjustmentReason": {
        "key": "adjustmentReason",
        "display": "Adjustment Reason",
        "description": "Reason for the payment adjustment.",
        "type": "CodeableConcept"
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "Estimated date the payment will be issued or the actual issue date of payment.",
        "type": "date"
      },
      "amount": {
        "key": "amount",
        "display": "Amount",
        "description": "Benefits payable less any payment adjustment.",
        "type": "Money"
      },
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Issuer's unique identifier for the payment instrument.",
        "type": "Identifier"
      }
    },
    "backboneElement": true
  },
  "ClaimResponse_ProcessNote": {
    "display": "Claim Response Process Note",
    "description": "Note concerning adjudication",
    "properties": {
      "number": {
        "key": "number",
        "display": "Number",
        "description": "A number to uniquely identify a note entry.",
        "type": "positiveInt"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The business purpose of the note text.",
        "type": "enum",
        "enumValues": [
          "display",
          "print",
          "printoper"
        ]
      },
      "language": {
        "key": "language",
        "display": "Language",
        "description": "A code to define the language used in the text of the note.",
        "type": "CodeableConcept"
      }
    },
    "backboneElement": true
  },
  "ClaimResponse_Insurance": {
    "display": "Claim Response Insurance",
    "description": "Patient insurance information",
    "properties": {
      "sequence": {
        "key": "sequence",
        "display": "Sequence",
        "description": "A number to uniquely identify insurance entries and provide a sequence of coverages to convey coordination of benefit order.",
        "type": "positiveInt"
      },
      "focal": {
        "key": "focal",
        "display": "Focal",
        "description": "A flag to indicate that this Coverage is to be used for adjudication of this claim when set to true.",
        "type": "boolean"
      },
      "coverage": {
        "key": "coverage",
        "display": "Coverage",
        "description": "Reference to the insurance card level information contained in the Coverage resource. The coverage issuing insurer will use these details to locate the patient's actual coverage within the insurer's information system.",
        "type": "Reference",
        "targetProfile": [
          "Coverage"
        ]
      },
      "businessArrangement": {
        "key": "businessArrangement",
        "display": "Business Arrangement",
        "description": "A business agreement number established between the provider and the insurer for special business processing purposes.",
        "type": "string"
      },
      "claimResponse": {
        "key": "claimResponse",
        "display": "Claim Response",
        "description": "The result of the adjudication of the line items for the Coverage specified in this insurance.",
        "type": "Reference",
        "targetProfile": [
          "ClaimResponse"
        ]
      }
    },
    "backboneElement": true
  },
  "ClaimResponse_Error": {
    "display": "Claim Response Error",
    "description": "Processing errors",
    "properties": {
      "itemSequence": {
        "key": "itemSequence",
        "display": "Item Sequence",
        "description": "The sequence number of the line item submitted which contains the error. This value is omitted when the error occurs outside of the item structure.",
        "type": "positiveInt"
      },
      "detailSequence": {
        "key": "detailSequence",
        "display": "Detail Sequence",
        "description": "The sequence number of the detail within the line item submitted which contains the error. This value is omitted when the error occurs outside of the item structure.",
        "type": "positiveInt"
      },
      "subDetailSequence": {
        "key": "subDetailSequence",
        "display": "Sub Detail Sequence",
        "description": "The sequence number of the sub-detail within the detail within the line item submitted which contains the error. This value is omitted when the error occurs outside of the item structure.",
        "type": "positiveInt"
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "An error code, from a specified code system, which details why the claim could not be adjudicated.",
        "type": "CodeableConcept"
      }
    },
    "backboneElement": true
  },
  "ClinicalImpression": {
    "display": "ClinicalImpression",
    "description": "A record of a clinical assessment performed to determine what problem(s) may affect the patient and before planning the treatments or management strategies that are best to manage a patient's condition. Assessments are often 1:1 with a clinical consultation / encounter,  but this varies greatly depending on the clinical workflow. This resource is called \"ClinicalImpression\" rather than \"ClinicalAssessment\" to avoid confusion with the recording of assessment tools such as Apgar score.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Business identifiers assigned to this clinical impression by the performer or other systems which remain constant as the resource is updated and propagates from server to server.",
        "type": "Identifier",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "Identifies the workflow status of the assessment.",
        "type": "enum",
        "enumValues": [
          "in-progress",
          "completed",
          "entered-in-error"
        ]
      },
      "statusReason": {
        "key": "statusReason",
        "display": "Status Reason",
        "description": "Captures the reason for the current state of the ClinicalImpression.",
        "type": "CodeableConcept"
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "Categorizes the type of clinical assessment performed.",
        "type": "CodeableConcept"
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A summary of the context and/or cause of the assessment - why / where it was performed, and what patient events/status prompted it.",
        "type": "string"
      },
      "subject": {
        "key": "subject",
        "display": "Subject",
        "description": "The patient or group of individuals assessed as part of this record.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Group"
        ]
      },
      "encounter": {
        "key": "encounter",
        "display": "Encounter",
        "description": "The Encounter during which this ClinicalImpression was created or to which the creation of this record is tightly associated.",
        "type": "Reference",
        "targetProfile": [
          "Encounter"
        ]
      },
      "effective[x]": {
        "key": "effective[x]",
        "display": "Effective[x]",
        "description": "The point in time or period over which the subject was assessed.",
        "type": "dateTime"
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "Indicates when the documentation of the assessment was complete.",
        "type": "dateTime"
      },
      "assessor": {
        "key": "assessor",
        "display": "Assessor",
        "description": "The clinician performing the assessment.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole"
        ]
      },
      "previous": {
        "key": "previous",
        "display": "Previous",
        "description": "A reference to the last assessment that was conducted on this patient. Assessments are often/usually ongoing in nature; a care provider (practitioner or team) will make new assessments on an ongoing basis as new data arises or the patient's conditions changes.",
        "type": "Reference",
        "targetProfile": [
          "ClinicalImpression"
        ]
      },
      "problem": {
        "key": "problem",
        "display": "Problem",
        "description": "A list of the relevant problems/conditions for a patient.",
        "type": "Reference",
        "targetProfile": [
          "Condition",
          "AllergyIntolerance"
        ],
        "array": true
      },
      "investigation": {
        "key": "investigation",
        "display": "Investigation",
        "description": "One or more sets of investigations (signs, symptoms, etc.). The actual grouping of investigations varies greatly depending on the type and context of the assessment. These investigations may include data generated during the assessment process, or data previously generated and recorded that is pertinent to the outcomes.",
        "type": "ClinicalImpression_Investigation",
        "array": true
      },
      "protocol": {
        "key": "protocol",
        "display": "Protocol",
        "description": "Reference to a specific published clinical protocol that was followed during this assessment, and/or that provides evidence in support of the diagnosis.",
        "type": "uri",
        "array": true
      },
      "summary": {
        "key": "summary",
        "display": "Summary",
        "description": "A text summary of the investigations and the diagnosis.",
        "type": "string"
      },
      "finding": {
        "key": "finding",
        "display": "Finding",
        "description": "Specific findings or diagnoses that were considered likely or relevant to ongoing treatment.",
        "type": "ClinicalImpression_Finding",
        "array": true
      },
      "prognosisCodeableConcept": {
        "key": "prognosisCodeableConcept",
        "display": "Prognosis Codeable Concept",
        "description": "Estimate of likely outcome.",
        "type": "CodeableConcept",
        "array": true
      },
      "prognosisReference": {
        "key": "prognosisReference",
        "display": "Prognosis Reference",
        "description": "RiskAssessment expressing likely outcome.",
        "type": "Reference",
        "targetProfile": [
          "RiskAssessment"
        ],
        "array": true
      },
      "supportingInfo": {
        "key": "supportingInfo",
        "display": "Supporting Info",
        "description": "Information supporting the clinical impression.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ],
        "array": true
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "Commentary about the impression, typically recorded after the impression itself was made, though supplemental notes by the original author could also appear.",
        "type": "Annotation",
        "array": true
      }
    }
  },
  "ClinicalImpression_Investigation": {
    "display": "Clinical Impression Investigation",
    "description": "One or more sets of investigations (signs, symptoms, etc.)",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "A name/code for the group (\"set\") of investigations. Typically, this will be something like \"signs\", \"symptoms\", \"clinical\", \"diagnostic\", but the list is not constrained, and others such groups such as (exposure|family|travel|nutritional) history may be used.",
        "type": "CodeableConcept"
      },
      "item": {
        "key": "item",
        "display": "Item",
        "description": "A record of a specific investigation that was undertaken.",
        "type": "Reference",
        "targetProfile": [
          "Observation",
          "QuestionnaireResponse",
          "FamilyMemberHistory",
          "DiagnosticReport",
          "RiskAssessment",
          "ImagingStudy",
          "Media"
        ],
        "array": true
      }
    },
    "backboneElement": true
  },
  "ClinicalImpression_Finding": {
    "display": "Clinical Impression Finding",
    "description": "Possible or likely findings and diagnoses",
    "properties": {
      "itemCodeableConcept": {
        "key": "itemCodeableConcept",
        "display": "Item Codeable Concept",
        "description": "Specific text or code for finding or diagnosis, which may include ruled-out or resolved conditions.",
        "type": "CodeableConcept"
      },
      "itemReference": {
        "key": "itemReference",
        "display": "Item Reference",
        "description": "Specific reference for finding or diagnosis, which may include ruled-out or resolved conditions.",
        "type": "Reference",
        "targetProfile": [
          "Condition",
          "Observation",
          "Media"
        ]
      },
      "basis": {
        "key": "basis",
        "display": "Basis",
        "description": "Which investigations support finding or diagnosis.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "CodeSystem": {
    "display": "CodeSystem",
    "description": "The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content.",
    "properties": {
      "url": {
        "key": "url",
        "display": "Url",
        "description": "An absolute URI that is used to identify this code system when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this code system is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the code system is stored on different servers. This is used in [Coding](datatypes.html#Coding).system.",
        "type": "uri"
      },
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "A formal identifier that is used to identify this code system when it is represented in other formats, or referenced in a specification, model, design or an instance.",
        "type": "Identifier",
        "array": true
      },
      "version": {
        "key": "version",
        "display": "Version",
        "description": "The identifier that is used to identify this version of the code system when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the code system author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence. This is used in [Coding](datatypes.html#Coding).version.",
        "type": "string"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A natural language name identifying the code system. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
        "type": "string"
      },
      "title": {
        "key": "title",
        "display": "Title",
        "description": "A short, descriptive, user-friendly title for the code system.",
        "type": "string"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The date (and optionally time) when the code system resource was created or revised.",
        "type": "enum",
        "enumValues": [
          "draft",
          "active",
          "retired",
          "unknown"
        ]
      },
      "experimental": {
        "key": "experimental",
        "display": "Experimental",
        "description": "A Boolean value to indicate that this code system is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
        "type": "boolean"
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "The date  (and optionally time) when the code system was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the code system changes.",
        "type": "dateTime"
      },
      "publisher": {
        "key": "publisher",
        "display": "Publisher",
        "description": "The name of the organization or individual that published the code system.",
        "type": "string"
      },
      "contact": {
        "key": "contact",
        "display": "Contact",
        "description": "Contact details to assist a user in finding and communicating with the publisher.",
        "type": "ContactDetail",
        "array": true
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A free text natural language description of the code system from a consumer's perspective.",
        "type": "markdown"
      },
      "useContext": {
        "key": "useContext",
        "display": "Use Context",
        "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate code system instances.",
        "type": "UsageContext",
        "array": true
      },
      "jurisdiction": {
        "key": "jurisdiction",
        "display": "Jurisdiction",
        "description": "A legal or geographic region in which the code system is intended to be used.",
        "type": "CodeableConcept",
        "array": true
      },
      "purpose": {
        "key": "purpose",
        "display": "Purpose",
        "description": "Explanation of why this code system is needed and why it has been designed as it has.",
        "type": "markdown"
      },
      "copyright": {
        "key": "copyright",
        "display": "Copyright",
        "description": "A copyright statement relating to the code system and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the code system.",
        "type": "markdown"
      },
      "caseSensitive": {
        "key": "caseSensitive",
        "display": "Case Sensitive",
        "description": "If code comparison is case sensitive when codes within this system are compared to each other.",
        "type": "boolean"
      },
      "valueSet": {
        "key": "valueSet",
        "display": "Value Set",
        "description": "Canonical reference to the value set that contains the entire code system.",
        "type": "canonical"
      },
      "hierarchyMeaning": {
        "key": "hierarchyMeaning",
        "display": "Hierarchy Meaning",
        "description": "The meaning of the hierarchy of concepts as represented in this resource.",
        "type": "enum",
        "enumValues": [
          "grouped-by",
          "is-a",
          "part-of",
          "classified-with"
        ]
      },
      "compositional": {
        "key": "compositional",
        "display": "Compositional",
        "description": "The code system defines a compositional (post-coordination) grammar.",
        "type": "boolean"
      },
      "versionNeeded": {
        "key": "versionNeeded",
        "display": "Version Needed",
        "description": "This flag is used to signify that the code system does not commit to concept permanence across versions. If true, a version must be specified when referencing this code system.",
        "type": "boolean"
      },
      "content": {
        "key": "content",
        "display": "Content",
        "description": "The extent of the content of the code system (the concepts and codes it defines) are represented in this resource instance.",
        "type": "enum",
        "enumValues": [
          "not-present",
          "example",
          "fragment",
          "complete",
          "supplement"
        ]
      },
      "supplements": {
        "key": "supplements",
        "display": "Supplements",
        "description": "The canonical URL of the code system that this code system supplement is adding designations and properties to.",
        "type": "canonical"
      },
      "count": {
        "key": "count",
        "display": "Count",
        "description": "The total number of concepts defined by the code system. Where the code system has a compositional grammar, the basis of this count is defined by the system steward.",
        "type": "unsignedInt"
      },
      "filter": {
        "key": "filter",
        "display": "Filter",
        "description": "A filter that can be used in a value set compose statement when selecting concepts using a filter.",
        "type": "CodeSystem_Filter",
        "array": true
      },
      "property": {
        "key": "property",
        "display": "Property",
        "description": "A property defines an additional slot through which additional information can be provided about a concept.",
        "type": "CodeSystem_Property",
        "array": true
      },
      "concept": {
        "key": "concept",
        "display": "Concept",
        "description": "Concepts that are in the code system. The concept definitions are inherently hierarchical, but the definitions must be consulted to determine what the meanings of the hierarchical relationships are.",
        "type": "CodeSystem_Concept",
        "array": true
      }
    }
  },
  "CodeSystem_Filter": {
    "display": "Code System Filter",
    "description": "Filter that can be used in a value set",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "The code that identifies this filter when it is used as a filter in [ValueSet](valueset.html#).compose.include.filter.",
        "type": "enum",
        "enumValues": [
          "Code that identifies the filter"
        ]
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A description of how or why the filter is used.",
        "type": "string"
      },
      "operator": {
        "key": "operator",
        "display": "Operator",
        "description": "A list of operators that can be used with the filter.",
        "type": "enum",
        "enumValues": [
          "=",
          "is-a",
          "descendent-of",
          "is-not-a",
          "regex",
          "in",
          "not-in",
          "generalizes",
          "exists"
        ],
        "array": true
      },
      "value": {
        "key": "value",
        "display": "Value",
        "description": "A description of what the value for the filter should be.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "CodeSystem_Property": {
    "display": "Code System Property",
    "description": "Additional information supplied about each concept",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "A code that is used to identify the property. The code is used internally (in CodeSystem.concept.property.code) and also externally, such as in property filters.",
        "type": "enum",
        "enumValues": [
          "Identifies the property on the concepts, and when referred to in operations"
        ]
      },
      "uri": {
        "key": "uri",
        "display": "Uri",
        "description": "Reference to the formal meaning of the property. One possible source of meaning is the [Concept Properties](codesystem-concept-properties.html) code system.",
        "type": "uri"
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A description of the property- why it is defined, and how its value might be used.",
        "type": "string"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The type of the property value. Properties of type \"code\" contain a code defined by the code system (e.g. a reference to another defined concept).",
        "type": "enum",
        "enumValues": [
          "code",
          "Coding",
          "string",
          "integer",
          "boolean",
          "dateTime",
          "decimal"
        ]
      }
    },
    "backboneElement": true
  },
  "CodeSystem_Concept": {
    "display": "Code System Concept",
    "description": "Concepts in the code system",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "A code - a text symbol - that uniquely identifies the concept within the code system.",
        "type": "enum",
        "enumValues": [
          "Code that identifies concept"
        ]
      },
      "display": {
        "key": "display",
        "display": "Display",
        "description": "A human readable string that is the recommended default way to present this concept to a user.",
        "type": "string"
      },
      "definition": {
        "key": "definition",
        "display": "Definition",
        "description": "The formal definition of the concept. The code system resource does not make formal definitions required, because of the prevalence of legacy systems. However, they are highly recommended, as without them there is no formal meaning associated with the concept.",
        "type": "string"
      },
      "designation": {
        "key": "designation",
        "display": "Designation",
        "description": "Additional representations for the concept - other languages, aliases, specialized purposes, used for particular purposes, etc.",
        "type": "CodeSystem_Concept_Designation",
        "array": true
      },
      "property": {
        "key": "property",
        "display": "Property",
        "description": "A property value for this concept.",
        "type": "CodeSystem_Concept_Property",
        "array": true
      },
      "concept": {
        "key": "concept",
        "display": "Concept",
        "description": "Defines children of a concept to produce a hierarchy of concepts. The nature of the relationships is variable (is-a/contains/categorizes) - see hierarchyMeaning.",
        "type": "UNKNOWN"
      }
    },
    "backboneElement": true
  },
  "CodeSystem_Concept_Designation": {
    "display": "Code System Concept_ Designation",
    "description": "Additional representations for the concept",
    "properties": {
      "language": {
        "key": "language",
        "display": "Language",
        "description": "The language this designation is defined for.",
        "type": "enum",
        "enumValues": [
          "Human language of the designation"
        ]
      },
      "use": {
        "key": "use",
        "display": "Use",
        "description": "A code that details how this designation would be used.",
        "type": "Coding"
      },
      "value": {
        "key": "value",
        "display": "Value",
        "description": "The text value for this designation.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "CodeSystem_Concept_Property": {
    "display": "Code System Concept_ Property",
    "description": "Property value for the concept",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "A code that is a reference to CodeSystem.property.code.",
        "type": "enum",
        "enumValues": [
          "Reference to CodeSystem.property.code"
        ]
      },
      "value[x]": {
        "key": "value[x]",
        "display": "Value[x]",
        "description": "The value of this property.",
        "type": "enum",
        "enumValues": [
          "Value of the property for this concept"
        ]
      }
    },
    "backboneElement": true
  },
  "Communication": {
    "display": "Communication",
    "description": "An occurrence of information being transmitted; e.g. an alert that was sent to a responsible provider, a public health agency that was notified about a reportable condition.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Business identifiers assigned to this communication by the performer or other systems which remain constant as the resource is updated and propagates from server to server.",
        "type": "Identifier",
        "array": true
      },
      "instantiatesCanonical": {
        "key": "instantiatesCanonical",
        "display": "Instantiates Canonical",
        "description": "The URL pointing to a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this Communication.",
        "type": "canonical",
        "array": true
      },
      "instantiatesUri": {
        "key": "instantiatesUri",
        "display": "Instantiates Uri",
        "description": "The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this Communication.",
        "type": "uri",
        "array": true
      },
      "basedOn": {
        "key": "basedOn",
        "display": "Based On",
        "description": "An order, proposal or plan fulfilled in whole or in part by this Communication.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ],
        "array": true
      },
      "partOf": {
        "key": "partOf",
        "display": "Part Of",
        "description": "Part of this action.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ],
        "array": true
      },
      "inResponseTo": {
        "key": "inResponseTo",
        "display": "In Response To",
        "description": "Prior communication that this communication is in response to.",
        "type": "Reference",
        "targetProfile": [
          "Communication"
        ],
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of the transmission.",
        "type": "enum",
        "enumValues": [
          "preparation",
          "in-progress",
          "not-done",
          "on-hold",
          "stopped",
          "completed",
          "entered-in-error",
          "unknown"
        ]
      },
      "statusReason": {
        "key": "statusReason",
        "display": "Status Reason",
        "description": "Captures the reason for the current state of the Communication.",
        "type": "CodeableConcept"
      },
      "category": {
        "key": "category",
        "display": "Category",
        "description": "The type of message conveyed such as alert, notification, reminder, instruction, etc.",
        "type": "CodeableConcept",
        "array": true
      },
      "priority": {
        "key": "priority",
        "display": "Priority",
        "description": "Characterizes how quickly the planned or in progress communication must be addressed. Includes concepts such as stat, urgent, routine.",
        "type": "enum",
        "enumValues": [
          "routine",
          "urgent",
          "asap",
          "stat"
        ]
      },
      "medium": {
        "key": "medium",
        "display": "Medium",
        "description": "A channel that was used for this communication (e.g. email, fax).",
        "type": "CodeableConcept",
        "array": true
      },
      "subject": {
        "key": "subject",
        "display": "Subject",
        "description": "The patient or group that was the focus of this communication.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Group"
        ]
      },
      "topic": {
        "key": "topic",
        "display": "Topic",
        "description": "Description of the purpose/content, similar to a subject line in an email.",
        "type": "CodeableConcept"
      },
      "about": {
        "key": "about",
        "display": "About",
        "description": "Other resources that pertain to this communication and to which this communication should be associated.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ],
        "array": true
      },
      "encounter": {
        "key": "encounter",
        "display": "Encounter",
        "description": "The Encounter during which this Communication was created or to which the creation of this record is tightly associated.",
        "type": "Reference",
        "targetProfile": [
          "Encounter"
        ]
      },
      "sent": {
        "key": "sent",
        "display": "Sent",
        "description": "The time when this communication was sent.",
        "type": "dateTime"
      },
      "received": {
        "key": "received",
        "display": "Received",
        "description": "The time when this communication arrived at the destination.",
        "type": "dateTime"
      },
      "recipient": {
        "key": "recipient",
        "display": "Recipient",
        "description": "The entity (e.g. person, organization, clinical information system, care team or device) which was the target of the communication. If receipts need to be tracked by an individual, a separate resource instance will need to be created for each recipient.  Multiple recipient communications are intended where either receipts are not tracked (e.g. a mass mail-out) or a receipt is captured in aggregate (all emails confirmed received by a particular time).",
        "type": "Reference",
        "targetProfile": [
          "Device",
          "Organization",
          "Patient",
          "Practitioner",
          "PractitionerRole",
          "RelatedPerson",
          "Group",
          "CareTeam",
          "HealthcareService"
        ],
        "array": true
      },
      "sender": {
        "key": "sender",
        "display": "Sender",
        "description": "The entity (e.g. person, organization, clinical information system, or device) which was the source of the communication.",
        "type": "Reference",
        "targetProfile": [
          "Device",
          "Organization",
          "Patient",
          "Practitioner",
          "PractitionerRole",
          "RelatedPerson",
          "HealthcareService"
        ]
      },
      "reasonCode": {
        "key": "reasonCode",
        "display": "Reason Code",
        "description": "The reason or justification for the communication.",
        "type": "CodeableConcept",
        "array": true
      },
      "reasonReference": {
        "key": "reasonReference",
        "display": "Reason Reference",
        "description": "Indicates another resource whose existence justifies this communication.",
        "type": "Reference",
        "targetProfile": [
          "Condition",
          "Observation",
          "DiagnosticReport",
          "DocumentReference"
        ],
        "array": true
      },
      "payload": {
        "key": "payload",
        "display": "Payload",
        "description": "Text, attachment(s), or resource(s) that was communicated to the recipient.",
        "type": "Communication_Payload",
        "array": true
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "Additional notes or commentary about the communication by the sender, receiver or other interested parties.",
        "type": "Annotation",
        "array": true
      }
    }
  },
  "Communication_Payload": {
    "display": "Communication Payload",
    "description": "Message payload",
    "properties": {
      "content[x]": {
        "key": "content[x]",
        "display": "Content[x]",
        "description": "A communicated content (or for multi-part communications, one portion of the communication).",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "CommunicationRequest": {
    "display": "CommunicationRequest",
    "description": "A request to convey information; e.g. the CDS system proposes that an alert be sent to a responsible provider, the CDS system proposes that the public health agency be notified about a reportable condition.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Business identifiers assigned to this communication request by the performer or other systems which remain constant as the resource is updated and propagates from server to server.",
        "type": "Identifier",
        "array": true
      },
      "basedOn": {
        "key": "basedOn",
        "display": "Based On",
        "description": "A plan or proposal that is fulfilled in whole or in part by this request.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ],
        "array": true
      },
      "replaces": {
        "key": "replaces",
        "display": "Replaces",
        "description": "Completed or terminated request(s) whose function is taken by this new request.",
        "type": "Reference",
        "targetProfile": [
          "CommunicationRequest"
        ],
        "array": true
      },
      "groupIdentifier": {
        "key": "groupIdentifier",
        "display": "Group Identifier",
        "description": "A shared identifier common to all requests that were authorized more or less simultaneously by a single author, representing the identifier of the requisition, prescription or similar form.",
        "type": "Identifier"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of the proposal or order.",
        "type": "enum",
        "enumValues": [
          "draft",
          "active",
          "on-hold",
          "revoked",
          "completed",
          "entered-in-error",
          "unknown"
        ]
      },
      "statusReason": {
        "key": "statusReason",
        "display": "Status Reason",
        "description": "Captures the reason for the current state of the CommunicationRequest.",
        "type": "CodeableConcept"
      },
      "category": {
        "key": "category",
        "display": "Category",
        "description": "The type of message to be sent such as alert, notification, reminder, instruction, etc.",
        "type": "CodeableConcept",
        "array": true
      },
      "priority": {
        "key": "priority",
        "display": "Priority",
        "description": "Characterizes how quickly the proposed act must be initiated. Includes concepts such as stat, urgent, routine.",
        "type": "enum",
        "enumValues": [
          "routine",
          "urgent",
          "asap",
          "stat"
        ]
      },
      "doNotPerform": {
        "key": "doNotPerform",
        "display": "Do Not Perform",
        "description": "If true indicates that the CommunicationRequest is asking for the specified action to *not* occur.",
        "type": "boolean"
      },
      "medium": {
        "key": "medium",
        "display": "Medium",
        "description": "A channel that was used for this communication (e.g. email, fax).",
        "type": "CodeableConcept",
        "array": true
      },
      "subject": {
        "key": "subject",
        "display": "Subject",
        "description": "The patient or group that is the focus of this communication request.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Group"
        ]
      },
      "about": {
        "key": "about",
        "display": "About",
        "description": "Other resources that pertain to this communication request and to which this communication request should be associated.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ],
        "array": true
      },
      "encounter": {
        "key": "encounter",
        "display": "Encounter",
        "description": "The Encounter during which this CommunicationRequest was created or to which the creation of this record is tightly associated.",
        "type": "Reference",
        "targetProfile": [
          "Encounter"
        ]
      },
      "payload": {
        "key": "payload",
        "display": "Payload",
        "description": "Text, attachment(s), or resource(s) to be communicated to the recipient.",
        "type": "CommunicationRequest_Payload",
        "array": true
      },
      "occurrence[x]": {
        "key": "occurrence[x]",
        "display": "Occurrence[x]",
        "description": "The time when this communication is to occur.",
        "type": "dateTime"
      },
      "authoredOn": {
        "key": "authoredOn",
        "display": "Authored On",
        "description": "For draft requests, indicates the date of initial creation.  For requests with other statuses, indicates the date of activation.",
        "type": "dateTime"
      },
      "requester": {
        "key": "requester",
        "display": "Requester",
        "description": "The device, individual, or organization who initiated the request and has responsibility for its activation.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization",
          "Patient",
          "RelatedPerson",
          "Device"
        ]
      },
      "recipient": {
        "key": "recipient",
        "display": "Recipient",
        "description": "The entity (e.g. person, organization, clinical information system, device, group, or care team) which is the intended target of the communication.",
        "type": "Reference",
        "targetProfile": [
          "Device",
          "Organization",
          "Patient",
          "Practitioner",
          "PractitionerRole",
          "RelatedPerson",
          "Group",
          "CareTeam",
          "HealthcareService"
        ],
        "array": true
      },
      "sender": {
        "key": "sender",
        "display": "Sender",
        "description": "The entity (e.g. person, organization, clinical information system, or device) which is to be the source of the communication.",
        "type": "Reference",
        "targetProfile": [
          "Device",
          "Organization",
          "Patient",
          "Practitioner",
          "PractitionerRole",
          "RelatedPerson",
          "HealthcareService"
        ]
      },
      "reasonCode": {
        "key": "reasonCode",
        "display": "Reason Code",
        "description": "Describes why the request is being made in coded or textual form.",
        "type": "CodeableConcept",
        "array": true
      },
      "reasonReference": {
        "key": "reasonReference",
        "display": "Reason Reference",
        "description": "Indicates another resource whose existence justifies this request.",
        "type": "Reference",
        "targetProfile": [
          "Condition",
          "Observation",
          "DiagnosticReport",
          "DocumentReference"
        ],
        "array": true
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "Comments made about the request by the requester, sender, recipient, subject or other participants.",
        "type": "Annotation",
        "array": true
      }
    }
  },
  "CommunicationRequest_Payload": {
    "display": "Communication Request Payload",
    "description": "Message payload",
    "properties": {
      "content[x]": {
        "key": "content[x]",
        "display": "Content[x]",
        "description": "The communicated content (or for multi-part communications, one portion of the communication).",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "CompartmentDefinition": {
    "display": "CompartmentDefinition",
    "description": "A compartment definition that defines how resources are accessed on a server.",
    "properties": {
      "url": {
        "key": "url",
        "display": "Url",
        "description": "An absolute URI that is used to identify this compartment definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this compartment definition is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the compartment definition is stored on different servers.",
        "type": "uri"
      },
      "version": {
        "key": "version",
        "display": "Version",
        "description": "The identifier that is used to identify this version of the compartment definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the compartment definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
        "type": "string"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A natural language name identifying the compartment definition. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
        "type": "string"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of this compartment definition. Enables tracking the life-cycle of the content.",
        "type": "enum",
        "enumValues": [
          "draft",
          "active",
          "retired",
          "unknown"
        ]
      },
      "experimental": {
        "key": "experimental",
        "display": "Experimental",
        "description": "A Boolean value to indicate that this compartment definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
        "type": "boolean"
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "The date  (and optionally time) when the compartment definition was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the compartment definition changes.",
        "type": "dateTime"
      },
      "publisher": {
        "key": "publisher",
        "display": "Publisher",
        "description": "The name of the organization or individual that published the compartment definition.",
        "type": "string"
      },
      "contact": {
        "key": "contact",
        "display": "Contact",
        "description": "Contact details to assist a user in finding and communicating with the publisher.",
        "type": "ContactDetail",
        "array": true
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A free text natural language description of the compartment definition from a consumer's perspective.",
        "type": "markdown"
      },
      "useContext": {
        "key": "useContext",
        "display": "Use Context",
        "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate compartment definition instances.",
        "type": "UsageContext",
        "array": true
      },
      "purpose": {
        "key": "purpose",
        "display": "Purpose",
        "description": "Explanation of why this compartment definition is needed and why it has been designed as it has.",
        "type": "markdown"
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "Which compartment this definition describes.",
        "type": "enum",
        "enumValues": [
          "Patient",
          "Encounter",
          "RelatedPerson",
          "Practitioner",
          "Device"
        ]
      },
      "search": {
        "key": "search",
        "display": "Search",
        "description": "Whether the search syntax is supported,.",
        "type": "boolean"
      },
      "resource": {
        "key": "resource",
        "display": "Resource",
        "description": "Information about how a resource is related to the compartment.",
        "type": "CompartmentDefinition_Resource",
        "array": true
      }
    }
  },
  "CompartmentDefinition_Resource": {
    "display": "Compartment Definition Resource",
    "description": "How a resource is related to the compartment",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "The name of a resource supported by the server.",
        "type": "enum",
        "enumValues": [
          "Name of resource type"
        ]
      },
      "param": {
        "key": "param",
        "display": "Param",
        "description": "The name of a search parameter that represents the link to the compartment. More than one may be listed because a resource may be linked to a compartment in more than one way,.",
        "type": "string",
        "array": true
      },
      "documentation": {
        "key": "documentation",
        "display": "Documentation",
        "description": "Additional documentation about the resource and compartment.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "Composition": {
    "display": "Composition",
    "description": "A set of healthcare-related information that is assembled together into a single logical package that provides a single coherent statement of meaning, establishes its own context and that has clinical attestation with regard to who is making the statement. A Composition defines the structure and narrative content necessary for a document. However, a Composition alone does not constitute a document. Rather, the Composition must be the first entry in a Bundle where Bundle.type=document, and any other resources referenced from Composition must be included as subsequent entries in the Bundle (for example Patient, Practitioner, Encounter, etc.).",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "A version-independent identifier for the Composition. This identifier stays constant as the composition is changed over time.",
        "type": "Identifier"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The workflow/clinical status of this composition. The status is a marker for the clinical standing of the document.",
        "type": "enum",
        "enumValues": [
          "preliminary",
          "final",
          "amended",
          "entered-in-error"
        ]
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Specifies the particular kind of composition (e.g. History and Physical, Discharge Summary, Progress Note). This usually equates to the purpose of making the composition.",
        "type": "CodeableConcept"
      },
      "category": {
        "key": "category",
        "display": "Category",
        "description": "A categorization for the type of the composition - helps for indexing and searching. This may be implied by or derived from the code specified in the Composition Type.",
        "type": "CodeableConcept",
        "array": true
      },
      "subject": {
        "key": "subject",
        "display": "Subject",
        "description": "Who or what the composition is about. The composition can be about a person, (patient or healthcare practitioner), a device (e.g. a machine) or even a group of subjects (such as a document about a herd of livestock, or a set of patients that share a common exposure).",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ]
      },
      "encounter": {
        "key": "encounter",
        "display": "Encounter",
        "description": "Describes the clinical encounter or type of care this documentation is associated with.",
        "type": "Reference",
        "targetProfile": [
          "Encounter"
        ]
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "The composition editing time, when the composition was last logically changed by the author.",
        "type": "dateTime"
      },
      "author": {
        "key": "author",
        "display": "Author",
        "description": "Identifies who is responsible for the information in the composition, not necessarily who typed it in.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Device",
          "Patient",
          "RelatedPerson",
          "Organization"
        ],
        "array": true
      },
      "title": {
        "key": "title",
        "display": "Title",
        "description": "Official human-readable label for the composition.",
        "type": "string"
      },
      "confidentiality": {
        "key": "confidentiality",
        "display": "Confidentiality",
        "description": "The code specifying the level of confidentiality of the Composition.",
        "type": "enum",
        "enumValues": [
          "As defined by affinity domain"
        ]
      },
      "attester": {
        "key": "attester",
        "display": "Attester",
        "description": "A participant who has attested to the accuracy of the composition/document.",
        "type": "Composition_Attester",
        "array": true
      },
      "custodian": {
        "key": "custodian",
        "display": "Custodian",
        "description": "Identifies the organization or group who is responsible for ongoing maintenance of and access to the composition/document information.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "relatesTo": {
        "key": "relatesTo",
        "display": "Relates To",
        "description": "Relationships that this composition has with other compositions or documents that already exist.",
        "type": "Composition_RelatesTo",
        "array": true
      },
      "event": {
        "key": "event",
        "display": "Event",
        "description": "The clinical service, such as a colonoscopy or an appendectomy, being documented.",
        "type": "Composition_Event",
        "array": true
      },
      "section": {
        "key": "section",
        "display": "Section",
        "description": "The root of the sections that make up the composition.",
        "type": "Composition_Section",
        "array": true
      }
    }
  },
  "Composition_Attester": {
    "display": "Composition Attester",
    "description": "Attests to accuracy of composition",
    "properties": {
      "mode": {
        "key": "mode",
        "display": "Mode",
        "description": "The type of attestation the authenticator offers.",
        "type": "enum",
        "enumValues": [
          "personal",
          "professional",
          "legal",
          "official"
        ]
      },
      "time": {
        "key": "time",
        "display": "Time",
        "description": "When the composition was attested by the party.",
        "type": "dateTime"
      },
      "party": {
        "key": "party",
        "display": "Party",
        "description": "Who attested the composition in the specified way.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "RelatedPerson",
          "Practitioner",
          "PractitionerRole",
          "Organization"
        ]
      }
    },
    "backboneElement": true
  },
  "Composition_RelatesTo": {
    "display": "Composition Relates To",
    "description": "Relationships to other compositions/documents",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "The type of relationship that this composition has with anther composition or document.",
        "type": "enum",
        "enumValues": [
          "replaces",
          "transforms",
          "signs",
          "appends"
        ]
      },
      "target[x]": {
        "key": "target[x]",
        "display": "Target[x]",
        "description": "The target composition/document of this relationship.",
        "type": "Identifier"
      }
    },
    "backboneElement": true
  },
  "Composition_Event": {
    "display": "Composition Event",
    "description": "The clinical service(s) being documented",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "This list of codes represents the main clinical acts, such as a colonoscopy or an appendectomy, being documented. In some cases, the event is inherent in the typeCode, such as a \"History and Physical Report\" in which the procedure being documented is necessarily a \"History and Physical\" act.",
        "type": "CodeableConcept",
        "array": true
      },
      "period": {
        "key": "period",
        "display": "Period",
        "description": "The period of time covered by the documentation. There is no assertion that the documentation is a complete representation for this period, only that it documents events during this time.",
        "type": "Period"
      },
      "detail": {
        "key": "detail",
        "display": "Detail",
        "description": "The description and/or reference of the event(s) being documented. For example, this could be used to document such a colonoscopy or an appendectomy.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ],
        "array": true
      }
    },
    "backboneElement": true
  },
  "Composition_Section": {
    "display": "Composition Section",
    "description": "Composition is broken into sections",
    "properties": {
      "title": {
        "key": "title",
        "display": "Title",
        "description": "The label for this particular section.  This will be part of the rendered content for the document, and is often used to build a table of contents.",
        "type": "string"
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "A code identifying the kind of content contained within the section. This must be consistent with the section title.",
        "type": "CodeableConcept"
      },
      "author": {
        "key": "author",
        "display": "Author",
        "description": "Identifies who is responsible for the information in this section, not necessarily who typed it in.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Device",
          "Patient",
          "RelatedPerson",
          "Organization"
        ],
        "array": true
      },
      "focus": {
        "key": "focus",
        "display": "Focus",
        "description": "The actual focus of the section when it is not the subject of the composition, but instead represents something or someone associated with the subject such as (for a patient subject) a spouse, parent, fetus, or donor. If not focus is specified, the focus is assumed to be focus of the parent section, or, for a section in the Composition itself, the subject of the composition. Sections with a focus SHALL only include resources where the logical subject (patient, subject, focus, etc.) matches the section focus, or the resources have no logical subject (few resources).",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ]
      },
      "mode": {
        "key": "mode",
        "display": "Mode",
        "description": "How the entry list was prepared - whether it is a working list that is suitable for being maintained on an ongoing basis, or if it represents a snapshot of a list of items from another source, or whether it is a prepared list where items may be marked as added, modified or deleted.",
        "type": "enum",
        "enumValues": [
          "working",
          "snapshot",
          "changes"
        ]
      },
      "orderedBy": {
        "key": "orderedBy",
        "display": "Ordered By",
        "description": "Specifies the order applied to the items in the section entries.",
        "type": "CodeableConcept"
      },
      "entry": {
        "key": "entry",
        "display": "Entry",
        "description": "A reference to the actual resource from which the narrative in the section is derived.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ],
        "array": true
      },
      "emptyReason": {
        "key": "emptyReason",
        "display": "Empty Reason",
        "description": "If the section is empty, why the list is empty. An empty section typically has some text explaining the empty reason.",
        "type": "CodeableConcept"
      },
      "section": {
        "key": "section",
        "display": "Section",
        "description": "A nested sub-section within this section.",
        "type": "UNKNOWN"
      }
    },
    "backboneElement": true
  },
  "ConceptMap": {
    "display": "ConceptMap",
    "description": "A statement of relationships from one set of concepts to one or more other concepts - either concepts in code systems, or data element/data element concepts, or classes in class models.",
    "properties": {
      "url": {
        "key": "url",
        "display": "Url",
        "description": "An absolute URI that is used to identify this concept map when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this concept map is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the concept map is stored on different servers.",
        "type": "uri"
      },
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "A formal identifier that is used to identify this concept map when it is represented in other formats, or referenced in a specification, model, design or an instance.",
        "type": "Identifier"
      },
      "version": {
        "key": "version",
        "display": "Version",
        "description": "The identifier that is used to identify this version of the concept map when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the concept map author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
        "type": "string"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A natural language name identifying the concept map. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
        "type": "string"
      },
      "title": {
        "key": "title",
        "display": "Title",
        "description": "A short, descriptive, user-friendly title for the concept map.",
        "type": "string"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of this concept map. Enables tracking the life-cycle of the content.",
        "type": "enum",
        "enumValues": [
          "draft",
          "active",
          "retired",
          "unknown"
        ]
      },
      "experimental": {
        "key": "experimental",
        "display": "Experimental",
        "description": "A Boolean value to indicate that this concept map is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
        "type": "boolean"
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "The date  (and optionally time) when the concept map was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the concept map changes.",
        "type": "dateTime"
      },
      "publisher": {
        "key": "publisher",
        "display": "Publisher",
        "description": "The name of the organization or individual that published the concept map.",
        "type": "string"
      },
      "contact": {
        "key": "contact",
        "display": "Contact",
        "description": "Contact details to assist a user in finding and communicating with the publisher.",
        "type": "ContactDetail",
        "array": true
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A free text natural language description of the concept map from a consumer's perspective.",
        "type": "markdown"
      },
      "useContext": {
        "key": "useContext",
        "display": "Use Context",
        "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate concept map instances.",
        "type": "UsageContext",
        "array": true
      },
      "jurisdiction": {
        "key": "jurisdiction",
        "display": "Jurisdiction",
        "description": "A legal or geographic region in which the concept map is intended to be used.",
        "type": "CodeableConcept",
        "array": true
      },
      "purpose": {
        "key": "purpose",
        "display": "Purpose",
        "description": "Explanation of why this concept map is needed and why it has been designed as it has.",
        "type": "markdown"
      },
      "copyright": {
        "key": "copyright",
        "display": "Copyright",
        "description": "A copyright statement relating to the concept map and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the concept map.",
        "type": "markdown"
      },
      "source[x]": {
        "key": "source[x]",
        "display": "Source[x]",
        "description": "Identifier for the source value set that contains the concepts that are being mapped and provides context for the mappings.",
        "type": "uri"
      },
      "target[x]": {
        "key": "target[x]",
        "display": "Target[x]",
        "description": "The target value set provides context for the mappings. Note that the mapping is made between concepts, not between value sets, but the value set provides important context about how the concept mapping choices are made.",
        "type": "uri"
      },
      "group": {
        "key": "group",
        "display": "Group",
        "description": "A group of mappings that all have the same source and target system.",
        "type": "ConceptMap_Group",
        "array": true
      }
    }
  },
  "ConceptMap_Group": {
    "display": "Concept Map Group",
    "description": "Same source and target systems",
    "properties": {
      "source": {
        "key": "source",
        "display": "Source",
        "description": "An absolute URI that identifies the source system where the concepts to be mapped are defined.",
        "type": "uri"
      },
      "sourceVersion": {
        "key": "sourceVersion",
        "display": "Source Version",
        "description": "The specific version of the code system, as determined by the code system authority.",
        "type": "string"
      },
      "target": {
        "key": "target",
        "display": "Target",
        "description": "An absolute URI that identifies the target system that the concepts will be mapped to.",
        "type": "uri"
      },
      "targetVersion": {
        "key": "targetVersion",
        "display": "Target Version",
        "description": "The specific version of the code system, as determined by the code system authority.",
        "type": "string"
      },
      "unmapped": {
        "key": "unmapped",
        "display": "Unmapped",
        "description": "What to do when there is no mapping for the source concept. \"Unmapped\" does not include codes that are unmatched, and the unmapped element is ignored in a code is specified to have equivalence = unmatched.",
        "type": "ConceptMap_Group_Unmapped"
      }
    },
    "backboneElement": true
  },
  "ConceptMap_Group_Element": {
    "display": "ConceptMap_Group_Element",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "Identity (code or path) or the element/item being mapped.",
        "type": "enum",
        "enumValues": [
          "Identifies element being mapped"
        ]
      },
      "display": {
        "key": "display",
        "display": "Display",
        "description": "The display for the code. The display is only provided to help editors when editing the concept map.",
        "type": "string"
      },
      "target": {
        "key": "target",
        "display": "Target",
        "description": "A concept from the target value set that this concept maps to.",
        "type": "ConceptMap_Group_Element_Target",
        "array": true
      }
    }
  },
  "ConceptMap_Group_Element_Target": {
    "display": "Concept Map Group_ Element_ Target",
    "description": "Concept in target system for element",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "Identity (code or path) or the element/item that the map refers to.",
        "type": "enum",
        "enumValues": [
          "Code that identifies the target element"
        ]
      },
      "display": {
        "key": "display",
        "display": "Display",
        "description": "The display for the code. The display is only provided to help editors when editing the concept map.",
        "type": "string"
      },
      "equivalence": {
        "key": "equivalence",
        "display": "Equivalence",
        "description": "The equivalence between the source and target concepts (counting for the dependencies and products). The equivalence is read from target to source (e.g. the target is 'wider' than the source).",
        "type": "enum",
        "enumValues": [
          "relatedto",
          "equivalent",
          "equal",
          "wider",
          "subsumes",
          "narrower",
          "specializes",
          "inexact",
          "unmatched",
          "disjoint"
        ]
      },
      "comment": {
        "key": "comment",
        "display": "Comment",
        "description": "A description of status/issues in mapping that conveys additional information not represented in  the structured data.",
        "type": "string"
      },
      "dependsOn": {
        "key": "dependsOn",
        "display": "Depends On",
        "description": "A set of additional dependencies for this mapping to hold. This mapping is only applicable if the specified element can be resolved, and it has the specified value.",
        "type": "ConceptMap_Group_Element_Target_DependsOn",
        "array": true
      },
      "product": {
        "key": "product",
        "display": "Product",
        "description": "A set of additional outcomes from this mapping to other elements. To properly execute this mapping, the specified element must be mapped to some data element or source that is in context. The mapping may still be useful without a place for the additional data elements, but the equivalence cannot be relied on.",
        "type": "UNKNOWN"
      }
    },
    "backboneElement": true
  },
  "ConceptMap_Group_Element_Target_DependsOn": {
    "display": "Concept Map Group_ Element_ Target_ Depends On",
    "description": "Other elements required for this mapping (from context)",
    "properties": {
      "property": {
        "key": "property",
        "display": "Property",
        "description": "A reference to an element that holds a coded value that corresponds to a code system property. The idea is that the information model carries an element somewhere that is labeled to correspond with a code system property.",
        "type": "uri"
      },
      "system": {
        "key": "system",
        "display": "System",
        "description": "An absolute URI that identifies the code system of the dependency code (if the source/dependency is a value set that crosses code systems).",
        "type": "canonical"
      },
      "value": {
        "key": "value",
        "display": "Value",
        "description": "Identity (code or path) or the element/item/ValueSet/text that the map depends on / refers to.",
        "type": "string"
      },
      "display": {
        "key": "display",
        "display": "Display",
        "description": "The display for the code. The display is only provided to help editors when editing the concept map.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "ConceptMap_Group_Unmapped": {
    "display": "Concept Map Group_ Unmapped",
    "description": "What to do when there is no mapping for the source concept",
    "properties": {
      "mode": {
        "key": "mode",
        "display": "Mode",
        "description": "Defines which action to take if there is no match for the source concept in the target system designated for the group. One of 3 actions are possible: use the unmapped code (this is useful when doing a mapping between versions, and only a few codes have changed), use a fixed code (a default code), or alternatively, a reference to a different concept map can be provided (by canonical URL).",
        "type": "enum",
        "enumValues": [
          "provided",
          "fixed",
          "other-map"
        ]
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "The fixed code to use when the mode = 'fixed'  - all unmapped codes are mapped to a single fixed code.",
        "type": "enum",
        "enumValues": [
          "Fixed code when mode = fixed"
        ]
      },
      "display": {
        "key": "display",
        "display": "Display",
        "description": "The display for the code. The display is only provided to help editors when editing the concept map.",
        "type": "string"
      },
      "url": {
        "key": "url",
        "display": "Url",
        "description": "The canonical reference to an additional ConceptMap resource instance to use for mapping if this ConceptMap resource contains no matching mapping for the source concept.",
        "type": "canonical"
      }
    },
    "backboneElement": true
  },
  "Condition": {
    "display": "Condition",
    "description": "A clinical condition, problem, diagnosis, or other event, situation, issue, or clinical concept that has risen to a level of concern.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Business identifiers assigned to this condition by the performer or other systems which remain constant as the resource is updated and propagates from server to server.",
        "type": "Identifier",
        "array": true
      },
      "clinicalStatus": {
        "key": "clinicalStatus",
        "display": "Clinical Status",
        "description": "The clinical status of the condition.",
        "type": "CodeableConcept"
      },
      "verificationStatus": {
        "key": "verificationStatus",
        "display": "Verification Status",
        "description": "The verification status to support the clinical status of the condition.",
        "type": "CodeableConcept"
      },
      "category": {
        "key": "category",
        "display": "Category",
        "description": "A category assigned to the condition.",
        "type": "CodeableConcept",
        "array": true
      },
      "severity": {
        "key": "severity",
        "display": "Severity",
        "description": "A subjective assessment of the severity of the condition as evaluated by the clinician.",
        "type": "CodeableConcept"
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "Identification of the condition, problem or diagnosis.",
        "type": "CodeableConcept"
      },
      "bodySite": {
        "key": "bodySite",
        "display": "Body Site",
        "description": "The anatomical location where this condition manifests itself.",
        "type": "CodeableConcept",
        "array": true
      },
      "subject": {
        "key": "subject",
        "display": "Subject",
        "description": "Indicates the patient or group who the condition record is associated with.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Group"
        ]
      },
      "encounter": {
        "key": "encounter",
        "display": "Encounter",
        "description": "The Encounter during which this Condition was created or to which the creation of this record is tightly associated.",
        "type": "Reference",
        "targetProfile": [
          "Encounter"
        ]
      },
      "onset[x]": {
        "key": "onset[x]",
        "display": "Onset[x]",
        "description": "Estimated or actual date or date-time  the condition began, in the opinion of the clinician.",
        "type": "dateTime"
      },
      "abatement[x]": {
        "key": "abatement[x]",
        "display": "Abatement[x]",
        "description": "The date or estimated date that the condition resolved or went into remission. This is called \"abatement\" because of the many overloaded connotations associated with \"remission\" or \"resolution\" - Conditions are never really resolved, but they can abate.",
        "type": "dateTime"
      },
      "recordedDate": {
        "key": "recordedDate",
        "display": "Recorded Date",
        "description": "The recordedDate represents when this particular Condition record was created in the system, which is often a system-generated date.",
        "type": "dateTime"
      },
      "recorder": {
        "key": "recorder",
        "display": "Recorder",
        "description": "Individual who recorded the record and takes responsibility for its content.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Patient",
          "RelatedPerson"
        ]
      },
      "asserter": {
        "key": "asserter",
        "display": "Asserter",
        "description": "Individual who is making the condition statement.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Patient",
          "RelatedPerson"
        ]
      },
      "stage": {
        "key": "stage",
        "display": "Stage",
        "description": "Clinical stage or grade of a condition. May include formal severity assessments.",
        "type": "Condition_Stage",
        "array": true
      },
      "evidence": {
        "key": "evidence",
        "display": "Evidence",
        "description": "Supporting evidence / manifestations that are the basis of the Condition's verification status, such as evidence that confirmed or refuted the condition.",
        "type": "Condition_Evidence",
        "array": true
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "Additional information about the Condition. This is a general notes/comments entry  for description of the Condition, its diagnosis and prognosis.",
        "type": "Annotation",
        "array": true
      }
    }
  },
  "Condition_Stage": {
    "display": "Condition Stage",
    "description": "Stage/grade, usually assessed formally",
    "properties": {
      "summary": {
        "key": "summary",
        "display": "Summary",
        "description": "A simple summary of the stage such as \"Stage 3\". The determination of the stage is disease-specific.",
        "type": "CodeableConcept"
      },
      "assessment": {
        "key": "assessment",
        "display": "Assessment",
        "description": "Reference to a formal record of the evidence on which the staging assessment is based.",
        "type": "Reference",
        "targetProfile": [
          "ClinicalImpression",
          "DiagnosticReport",
          "Observation"
        ],
        "array": true
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The kind of staging, such as pathological or clinical staging.",
        "type": "CodeableConcept"
      }
    },
    "backboneElement": true
  },
  "Condition_Evidence": {
    "display": "Condition Evidence",
    "description": "Supporting evidence",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "A manifestation or symptom that led to the recording of this condition.",
        "type": "CodeableConcept",
        "array": true
      },
      "detail": {
        "key": "detail",
        "display": "Detail",
        "description": "Links to other relevant information, including pathology reports.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ],
        "array": true
      }
    },
    "backboneElement": true
  },
  "Consent": {
    "display": "Consent",
    "description": "A record of a healthcare consumer’s  choices, which permits or denies identified recipient(s) or recipient role(s) to perform one or more actions within a given policy context, for specific purposes and periods of time.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Unique identifier for this copy of the Consent Statement.",
        "type": "Identifier",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "Indicates the current state of this consent.",
        "type": "enum",
        "enumValues": [
          "draft",
          "proposed",
          "active",
          "rejected",
          "inactive",
          "entered-in-error"
        ]
      },
      "scope": {
        "key": "scope",
        "display": "Scope",
        "description": "A selector of the type of consent being presented: ADR, Privacy, Treatment, Research.  This list is now extensible.",
        "type": "CodeableConcept"
      },
      "category": {
        "key": "category",
        "display": "Category",
        "description": "A classification of the type of consents found in the statement. This element supports indexing and retrieval of consent statements.",
        "type": "CodeableConcept",
        "array": true
      },
      "patient": {
        "key": "patient",
        "display": "Patient",
        "description": "The patient/healthcare consumer to whom this consent applies.",
        "type": "Reference",
        "targetProfile": [
          "Patient"
        ]
      },
      "dateTime": {
        "key": "dateTime",
        "display": "Date Time",
        "description": "When this  Consent was issued / created / indexed.",
        "type": "dateTime"
      },
      "performer": {
        "key": "performer",
        "display": "Performer",
        "description": "Either the Grantor, which is the entity responsible for granting the rights listed in a Consent Directive or the Grantee, which is the entity responsible for complying with the Consent Directive, including any obligations or limitations on authorizations and enforcement of prohibitions.",
        "type": "Reference",
        "targetProfile": [
          "Organization",
          "Patient",
          "Practitioner",
          "RelatedPerson",
          "PractitionerRole"
        ],
        "array": true
      },
      "organization": {
        "key": "organization",
        "display": "Organization",
        "description": "The organization that manages the consent, and the framework within which it is executed.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ],
        "array": true
      },
      "source[x]": {
        "key": "source[x]",
        "display": "Source[x]",
        "description": "The source on which this consent statement is based. The source might be a scanned original paper form, or a reference to a consent that links back to such a source, a reference to a document repository (e.g. XDS) that stores the original consent document.",
        "type": "Attachment"
      },
      "policy": {
        "key": "policy",
        "display": "Policy",
        "description": "The references to the policies that are included in this consent scope. Policies may be organizational, but are often defined jurisdictionally, or in law.",
        "type": "Consent_Policy",
        "array": true
      },
      "policyRule": {
        "key": "policyRule",
        "display": "Policy Rule",
        "description": "A reference to the specific base computable regulation or policy.",
        "type": "CodeableConcept"
      },
      "verification": {
        "key": "verification",
        "display": "Verification",
        "description": "Whether a treatment instruction (e.g. artificial respiration yes or no) was verified with the patient, his/her family or another authorized person.",
        "type": "Consent_Verification",
        "array": true
      },
      "provision": {
        "key": "provision",
        "display": "Provision",
        "description": "An exception to the base policy of this consent. An exception can be an addition or removal of access permissions.",
        "type": "Consent_Provision"
      }
    }
  },
  "Consent_Policy": {
    "display": "Consent Policy",
    "description": "Policies covered by this consent",
    "properties": {
      "authority": {
        "key": "authority",
        "display": "Authority",
        "description": "Entity or Organization having regulatory jurisdiction or accountability for  enforcing policies pertaining to Consent Directives.",
        "type": "uri"
      },
      "uri": {
        "key": "uri",
        "display": "Uri",
        "description": "The references to the policies that are included in this consent scope. Policies may be organizational, but are often defined jurisdictionally, or in law.",
        "type": "uri"
      }
    },
    "backboneElement": true
  },
  "Consent_Verification": {
    "display": "Consent Verification",
    "description": "Consent Verified by patient or family",
    "properties": {
      "verified": {
        "key": "verified",
        "display": "Verified",
        "description": "Has the instruction been verified.",
        "type": "boolean"
      },
      "verifiedWith": {
        "key": "verifiedWith",
        "display": "Verified With",
        "description": "Who verified the instruction (Patient, Relative or other Authorized Person).",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "RelatedPerson"
        ]
      },
      "verificationDate": {
        "key": "verificationDate",
        "display": "Verification Date",
        "description": "Date verification was collected.",
        "type": "dateTime"
      }
    },
    "backboneElement": true
  },
  "Consent_Provision": {
    "display": "Consent Provision",
    "description": "Constraints to the base Consent.policyRule",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Action  to take - permit or deny - when the rule conditions are met.  Not permitted in root rule, required in all nested rules.",
        "type": "enum",
        "enumValues": [
          "deny",
          "permit"
        ]
      },
      "period": {
        "key": "period",
        "display": "Period",
        "description": "The timeframe in this rule is valid.",
        "type": "Period"
      },
      "actor": {
        "key": "actor",
        "display": "Actor",
        "description": "Who or what is controlled by this rule. Use group to identify a set of actors by some property they share (e.g. 'admitting officers').",
        "type": "Consent_Provision_Actor",
        "array": true
      },
      "action": {
        "key": "action",
        "display": "Action",
        "description": "Actions controlled by this Rule.",
        "type": "CodeableConcept",
        "array": true
      },
      "securityLabel": {
        "key": "securityLabel",
        "display": "Security Label",
        "description": "A security label, comprised of 0..* security label fields (Privacy tags), which define which resources are controlled by this exception.",
        "type": "Coding",
        "array": true
      },
      "purpose": {
        "key": "purpose",
        "display": "Purpose",
        "description": "The context of the activities a user is taking - why the user is accessing the data - that are controlled by this rule.",
        "type": "Coding",
        "array": true
      },
      "class": {
        "key": "class",
        "display": "Class",
        "description": "The class of information covered by this rule. The type can be a FHIR resource type, a profile on a type, or a CDA document, or some other type that indicates what sort of information the consent relates to.",
        "type": "Coding",
        "array": true
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "If this code is found in an instance, then the rule applies.",
        "type": "CodeableConcept",
        "array": true
      },
      "dataPeriod": {
        "key": "dataPeriod",
        "display": "Data Period",
        "description": "Clinical or Operational Relevant period of time that bounds the data controlled by this rule.",
        "type": "Period"
      },
      "data": {
        "key": "data",
        "display": "Data",
        "description": "The resources controlled by this rule if specific resources are referenced.",
        "type": "Consent_Provision_Data",
        "array": true
      },
      "provision": {
        "key": "provision",
        "display": "Provision",
        "description": "Rules which provide exceptions to the base rule or subrules.",
        "type": "UNKNOWN"
      }
    },
    "backboneElement": true
  },
  "Consent_Provision_Actor": {
    "display": "Consent Provision_ Actor",
    "description": "Who|what controlled by this rule (or group, by role)",
    "properties": {
      "role": {
        "key": "role",
        "display": "Role",
        "description": "How the individual is involved in the resources content that is described in the exception.",
        "type": "CodeableConcept"
      },
      "reference": {
        "key": "reference",
        "display": "Reference",
        "description": "The resource that identifies the actor. To identify actors by type, use group to identify a set of actors by some property they share (e.g. 'admitting officers').",
        "type": "Reference",
        "targetProfile": [
          "Device",
          "Group",
          "CareTeam",
          "Organization",
          "Patient",
          "Practitioner",
          "RelatedPerson",
          "PractitionerRole"
        ]
      }
    },
    "backboneElement": true
  },
  "Consent_Provision_Data": {
    "display": "Consent Provision_ Data",
    "description": "Data controlled by this rule",
    "properties": {
      "meaning": {
        "key": "meaning",
        "display": "Meaning",
        "description": "How the resource reference is interpreted when testing consent restrictions.",
        "type": "enum",
        "enumValues": [
          "instance",
          "related",
          "dependents",
          "authoredby"
        ]
      },
      "reference": {
        "key": "reference",
        "display": "Reference",
        "description": "A reference to a specific resource that defines which resources are covered by this consent.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ]
      }
    },
    "backboneElement": true
  },
  "Contract": {
    "display": "Contract",
    "description": "Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Unique identifier for this Contract or a derivative that references a Source Contract.",
        "type": "Identifier",
        "array": true
      },
      "url": {
        "key": "url",
        "display": "Url",
        "description": "Canonical identifier for this contract, represented as a URI (globally unique).",
        "type": "uri"
      },
      "version": {
        "key": "version",
        "display": "Version",
        "description": "An edition identifier used for business purposes to label business significant variants.",
        "type": "string"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of the resource instance.",
        "type": "enum",
        "enumValues": [
          "amended",
          "appended",
          "cancelled",
          "disputed",
          "entered-in-error",
          "executable",
          "executed",
          "negotiable",
          "offered",
          "policy",
          "rejected",
          "renewed",
          "revoked",
          "resolved",
          "terminated"
        ]
      },
      "legalState": {
        "key": "legalState",
        "display": "Legal State",
        "description": "Legal states of the formation of a legal instrument, which is a formally executed written document that can be formally attributed to its author, records and formally expresses a legally enforceable act, process, or contractual duty, obligation, or right, and therefore evidences that act, process, or agreement.",
        "type": "CodeableConcept"
      },
      "instantiatesCanonical": {
        "key": "instantiatesCanonical",
        "display": "Instantiates Canonical",
        "description": "The URL pointing to a FHIR-defined Contract Definition that is adhered to in whole or part by this Contract.",
        "type": "Reference",
        "targetProfile": [
          "Contract"
        ]
      },
      "instantiatesUri": {
        "key": "instantiatesUri",
        "display": "Instantiates Uri",
        "description": "The URL pointing to an externally maintained definition that is adhered to in whole or in part by this Contract.",
        "type": "uri"
      },
      "contentDerivative": {
        "key": "contentDerivative",
        "display": "Content Derivative",
        "description": "The minimal content derived from the basal information source at a specific stage in its lifecycle.",
        "type": "CodeableConcept"
      },
      "issued": {
        "key": "issued",
        "display": "Issued",
        "description": "When this  Contract was issued.",
        "type": "dateTime"
      },
      "applies": {
        "key": "applies",
        "display": "Applies",
        "description": "Relevant time or time-period when this Contract is applicable.",
        "type": "Period"
      },
      "expirationType": {
        "key": "expirationType",
        "display": "Expiration Type",
        "description": "Event resulting in discontinuation or termination of this Contract instance by one or more parties to the contract.",
        "type": "CodeableConcept"
      },
      "subject": {
        "key": "subject",
        "display": "Subject",
        "description": "The target entity impacted by or of interest to parties to the agreement.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ],
        "array": true
      },
      "authority": {
        "key": "authority",
        "display": "Authority",
        "description": "A formally or informally recognized grouping of people, principals, organizations, or jurisdictions formed for the purpose of achieving some form of collective action such as the promulgation, administration and enforcement of contracts and policies.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ],
        "array": true
      },
      "domain": {
        "key": "domain",
        "display": "Domain",
        "description": "Recognized governance framework or system operating with a circumscribed scope in accordance with specified principles, policies, processes or procedures for managing rights, actions, or behaviors of parties or principals relative to resources.",
        "type": "Reference",
        "targetProfile": [
          "Location"
        ],
        "array": true
      },
      "site": {
        "key": "site",
        "display": "Site",
        "description": "Sites in which the contract is complied with,  exercised, or in force.",
        "type": "Reference",
        "targetProfile": [
          "Location"
        ],
        "array": true
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A natural language name identifying this Contract definition, derivative, or instance in any legal state. Provides additional information about its content. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
        "type": "string"
      },
      "title": {
        "key": "title",
        "display": "Title",
        "description": "A short, descriptive, user-friendly title for this Contract definition, derivative, or instance in any legal state.t giving additional information about its content.",
        "type": "string"
      },
      "subtitle": {
        "key": "subtitle",
        "display": "Subtitle",
        "description": "An explanatory or alternate user-friendly title for this Contract definition, derivative, or instance in any legal state.t giving additional information about its content.",
        "type": "string"
      },
      "alias": {
        "key": "alias",
        "display": "Alias",
        "description": "Alternative representation of the title for this Contract definition, derivative, or instance in any legal state., e.g., a domain specific contract number related to legislation.",
        "type": "string",
        "array": true
      },
      "author": {
        "key": "author",
        "display": "Author",
        "description": "The individual or organization that authored the Contract definition, derivative, or instance in any legal state.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Practitioner",
          "PractitionerRole",
          "Organization"
        ]
      },
      "scope": {
        "key": "scope",
        "display": "Scope",
        "description": "A selector of legal concerns for this Contract definition, derivative, or instance in any legal state.",
        "type": "CodeableConcept"
      },
      "topic[x]": {
        "key": "topic[x]",
        "display": "Topic[x]",
        "description": "Narrows the range of legal concerns to focus on the achievement of specific contractual objectives.",
        "type": "CodeableConcept"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "A high-level category for the legal instrument, whether constructed as a Contract definition, derivative, or instance in any legal state.  Provides additional information about its content within the context of the Contract's scope to distinguish the kinds of systems that would be interested in the contract.",
        "type": "CodeableConcept"
      },
      "subType": {
        "key": "subType",
        "display": "Sub Type",
        "description": "Sub-category for the Contract that distinguishes the kinds of systems that would be interested in the Contract within the context of the Contract's scope.",
        "type": "CodeableConcept",
        "array": true
      },
      "contentDefinition": {
        "key": "contentDefinition",
        "display": "Content Definition",
        "description": "Precusory content developed with a focus and intent of supporting the formation a Contract instance, which may be associated with and transformable into a Contract.",
        "type": "Contract_ContentDefinition"
      },
      "term": {
        "key": "term",
        "display": "Term",
        "description": "One or more Contract Provisions, which may be related and conveyed as a group, and may contain nested groups.",
        "type": "Contract_Term",
        "array": true
      },
      "supportingInfo": {
        "key": "supportingInfo",
        "display": "Supporting Info",
        "description": "Information that may be needed by/relevant to the performer in their execution of this term action.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ],
        "array": true
      },
      "relevantHistory": {
        "key": "relevantHistory",
        "display": "Relevant History",
        "description": "Links to Provenance records for past versions of this Contract definition, derivative, or instance, which identify key state transitions or updates that are likely to be relevant to a user looking at the current version of the Contract.  The Provence.entity indicates the target that was changed in the update. http://build.fhir.org/provenance-definitions.html#Provenance.entity.",
        "type": "Reference",
        "targetProfile": [
          "Provenance"
        ],
        "array": true
      },
      "signer": {
        "key": "signer",
        "display": "Signer",
        "description": "Parties with legal standing in the Contract, including the principal parties, the grantor(s) and grantee(s), which are any person or organization bound by the contract, and any ancillary parties, which facilitate the execution of the contract such as a notary or witness.",
        "type": "Contract_Signer",
        "array": true
      },
      "friendly": {
        "key": "friendly",
        "display": "Friendly",
        "description": "The \"patient friendly language\" versionof the Contract in whole or in parts. \"Patient friendly language\" means the representation of the Contract and Contract Provisions in a manner that is readily accessible and understandable by a layperson in accordance with best practices for communication styles that ensure that those agreeing to or signing the Contract understand the roles, actions, obligations, responsibilities, and implication of the agreement.",
        "type": "Contract_Friendly",
        "array": true
      },
      "legal": {
        "key": "legal",
        "display": "Legal",
        "description": "List of Legal expressions or representations of this Contract.",
        "type": "Contract_Legal",
        "array": true
      },
      "rule": {
        "key": "rule",
        "display": "Rule",
        "description": "List of Computable Policy Rule Language Representations of this Contract.",
        "type": "Contract_Rule",
        "array": true
      },
      "legallyBinding[x]": {
        "key": "legallyBinding[x]",
        "display": "Legally Binding[x]",
        "description": "Legally binding Contract: This is the signed and legally recognized representation of the Contract, which is considered the \"source of truth\" and which would be the basis for legal action related to enforcement of this Contract.",
        "type": "Attachment"
      }
    }
  },
  "Contract_ContentDefinition": {
    "display": "Contract Content Definition",
    "description": "Contract precursor content",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Precusory content structure and use, i.e., a boilerplate, template, application for a contract such as an insurance policy or benefits under a program, e.g., workers compensation.",
        "type": "CodeableConcept"
      },
      "subType": {
        "key": "subType",
        "display": "Sub Type",
        "description": "Detailed Precusory content type.",
        "type": "CodeableConcept"
      },
      "publisher": {
        "key": "publisher",
        "display": "Publisher",
        "description": "The  individual or organization that published the Contract precursor content.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization"
        ]
      },
      "publicationDate": {
        "key": "publicationDate",
        "display": "Publication Date",
        "description": "The date (and optionally time) when the contract was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the contract changes.",
        "type": "dateTime"
      },
      "publicationStatus": {
        "key": "publicationStatus",
        "display": "Publication Status",
        "description": "amended | appended | cancelled | disputed | entered-in-error | executable | executed | negotiable | offered | policy | rejected | renewed | revoked | resolved | terminated.",
        "type": "enum",
        "enumValues": [
          "amended",
          "appended",
          "cancelled",
          "disputed",
          "entered-in-error",
          "executable",
          "executed",
          "negotiable",
          "offered",
          "policy",
          "rejected",
          "renewed",
          "revoked",
          "resolved",
          "terminated"
        ]
      },
      "copyright": {
        "key": "copyright",
        "display": "Copyright",
        "description": "A copyright statement relating to Contract precursor content. Copyright statements are generally legal restrictions on the use and publishing of the Contract precursor content.",
        "type": "markdown"
      }
    },
    "backboneElement": true
  },
  "Contract_Term": {
    "display": "Contract Term",
    "description": "Contract Term List",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Unique identifier for this particular Contract Provision.",
        "type": "Identifier"
      },
      "issued": {
        "key": "issued",
        "display": "Issued",
        "description": "When this Contract Provision was issued.",
        "type": "dateTime"
      },
      "applies": {
        "key": "applies",
        "display": "Applies",
        "description": "Relevant time or time-period when this Contract Provision is applicable.",
        "type": "Period"
      },
      "topic[x]": {
        "key": "topic[x]",
        "display": "Topic[x]",
        "description": "The entity that the term applies to.",
        "type": "CodeableConcept"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "A legal clause or condition contained within a contract that requires one or both parties to perform a particular requirement by some specified time or prevents one or both parties from performing a particular requirement by some specified time.",
        "type": "CodeableConcept"
      },
      "subType": {
        "key": "subType",
        "display": "Sub Type",
        "description": "A specialized legal clause or condition based on overarching contract type.",
        "type": "CodeableConcept"
      },
      "securityLabel": {
        "key": "securityLabel",
        "display": "Security Label",
        "description": "Security labels that protect the handling of information about the term and its elements, which may be specifically identified..",
        "type": "Contract_Term_SecurityLabel",
        "array": true
      },
      "offer": {
        "key": "offer",
        "display": "Offer",
        "description": "The matter of concern in the context of this provision of the agrement.",
        "type": "Contract_Term_Offer"
      },
      "asset": {
        "key": "asset",
        "display": "Asset",
        "description": "Contract Term Asset List.",
        "type": "Contract_Term_Asset",
        "array": true
      },
      "action": {
        "key": "action",
        "display": "Action",
        "description": "An actor taking a role in an activity for which it can be assigned some degree of responsibility for the activity taking place.",
        "type": "Contract_Term_Action",
        "array": true
      },
      "group": {
        "key": "group",
        "display": "Group",
        "description": "Nested group of Contract Provisions.",
        "type": "UNKNOWN"
      }
    },
    "backboneElement": true
  },
  "Contract_Term_SecurityLabel": {
    "display": "Contract Term_ Security Label",
    "description": "Protection for the Term",
    "properties": {
      "number": {
        "key": "number",
        "display": "Number",
        "description": "Number used to link this term or term element to the applicable Security Label.",
        "type": "unsignedInt",
        "array": true
      },
      "classification": {
        "key": "classification",
        "display": "Classification",
        "description": "Security label privacy tag that species the level of confidentiality protection required for this term and/or term elements.",
        "type": "Coding"
      },
      "category": {
        "key": "category",
        "display": "Category",
        "description": "Security label privacy tag that species the applicable privacy and security policies governing this term and/or term elements.",
        "type": "Coding",
        "array": true
      },
      "control": {
        "key": "control",
        "display": "Control",
        "description": "Security label privacy tag that species the manner in which term and/or term elements are to be protected.",
        "type": "Coding",
        "array": true
      }
    },
    "backboneElement": true
  },
  "Contract_Term_Offer": {
    "display": "Contract Term_ Offer",
    "description": "Context of the Contract term",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Unique identifier for this particular Contract Provision.",
        "type": "Identifier",
        "array": true
      },
      "party": {
        "key": "party",
        "display": "Party",
        "description": "Offer Recipient.",
        "type": "Contract_Term_Offer_Party",
        "array": true
      },
      "topic": {
        "key": "topic",
        "display": "Topic",
        "description": "The owner of an asset has the residual control rights over the asset: the right to decide all usages of the asset in any way not inconsistent with a prior contract, custom, or law (Hart, 1995, p. 30).",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ]
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Type of Contract Provision such as specific requirements, purposes for actions, obligations, prohibitions, e.g. life time maximum benefit.",
        "type": "CodeableConcept"
      },
      "decision": {
        "key": "decision",
        "display": "Decision",
        "description": "Type of choice made by accepting party with respect to an offer made by an offeror/ grantee.",
        "type": "CodeableConcept"
      },
      "decisionMode": {
        "key": "decisionMode",
        "display": "Decision Mode",
        "description": "How the decision about a Contract was conveyed.",
        "type": "CodeableConcept",
        "array": true
      },
      "answer": {
        "key": "answer",
        "display": "Answer",
        "description": "Response to offer text.",
        "type": "Contract_Term_Offer_Answer",
        "array": true
      },
      "linkId": {
        "key": "linkId",
        "display": "Link Id",
        "description": "The id of the clause or question text of the offer in the referenced questionnaire/response.",
        "type": "string",
        "array": true
      },
      "securityLabelNumber": {
        "key": "securityLabelNumber",
        "display": "Security Label Number",
        "description": "Security labels that protects the offer.",
        "type": "unsignedInt",
        "array": true
      }
    },
    "backboneElement": true
  },
  "Contract_Term_Offer_Party": {
    "display": "Contract Term_ Offer_ Party",
    "description": "Offer Recipient",
    "properties": {
      "reference": {
        "key": "reference",
        "display": "Reference",
        "description": "Participant in the offer.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "RelatedPerson",
          "Practitioner",
          "PractitionerRole",
          "Device",
          "Group",
          "Organization"
        ],
        "array": true
      },
      "role": {
        "key": "role",
        "display": "Role",
        "description": "How the party participates in the offer.",
        "type": "CodeableConcept"
      }
    },
    "backboneElement": true
  },
  "Contract_Term_Offer_Answer": {
    "display": "Contract Term_ Offer_ Answer",
    "description": "Response to offer text",
    "properties": {
      "value[x]": {
        "key": "value[x]",
        "display": "Value[x]",
        "description": "Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.",
        "type": "boolean"
      }
    },
    "backboneElement": true
  },
  "Contract_Term_Asset": {
    "display": "Contract Term_ Asset",
    "description": "Contract Term Asset List",
    "properties": {
      "scope": {
        "key": "scope",
        "display": "Scope",
        "description": "Differentiates the kind of the asset .",
        "type": "CodeableConcept"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Target entity type about which the term may be concerned.",
        "type": "CodeableConcept",
        "array": true
      },
      "typeReference": {
        "key": "typeReference",
        "display": "Type Reference",
        "description": "Associated entities.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ],
        "array": true
      },
      "subtype": {
        "key": "subtype",
        "display": "Subtype",
        "description": "May be a subtype or part of an offered asset.",
        "type": "CodeableConcept",
        "array": true
      },
      "relationship": {
        "key": "relationship",
        "display": "Relationship",
        "description": "Specifies the applicability of the term to an asset resource instance, and instances it refers to orinstances that refer to it, and/or are owned by the offeree.",
        "type": "Coding"
      },
      "context": {
        "key": "context",
        "display": "Context",
        "description": "Circumstance of the asset.",
        "type": "Contract_Term_Asset_Context",
        "array": true
      },
      "condition": {
        "key": "condition",
        "display": "Condition",
        "description": "Description of the quality and completeness of the asset that imay be a factor in its valuation.",
        "type": "string"
      },
      "periodType": {
        "key": "periodType",
        "display": "Period Type",
        "description": "Type of Asset availability for use or ownership.",
        "type": "CodeableConcept",
        "array": true
      },
      "period": {
        "key": "period",
        "display": "Period",
        "description": "Asset relevant contractual time period.",
        "type": "Period",
        "array": true
      },
      "usePeriod": {
        "key": "usePeriod",
        "display": "Use Period",
        "description": "Time period of asset use.",
        "type": "Period",
        "array": true
      },
      "linkId": {
        "key": "linkId",
        "display": "Link Id",
        "description": "Id [identifier??] of the clause or question text about the asset in the referenced form or QuestionnaireResponse.",
        "type": "string",
        "array": true
      },
      "answer": {
        "key": "answer",
        "display": "Answer",
        "description": "Response to assets.",
        "type": "UNKNOWN"
      },
      "securityLabelNumber": {
        "key": "securityLabelNumber",
        "display": "Security Label Number",
        "description": "Security labels that protects the asset.",
        "type": "unsignedInt",
        "array": true
      },
      "valuedItem": {
        "key": "valuedItem",
        "display": "Valued Item",
        "description": "Contract Valued Item List.",
        "type": "Contract_Term_Asset_ValuedItem",
        "array": true
      }
    },
    "backboneElement": true
  },
  "Contract_Term_Asset_Context": {
    "display": "Contract Term_ Asset_ Context",
    "description": "Circumstance of the asset",
    "properties": {
      "reference": {
        "key": "reference",
        "display": "Reference",
        "description": "Asset context reference may include the creator, custodian, or owning Person or Organization (e.g., bank, repository),  location held, e.g., building,  jurisdiction.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ]
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "Coded representation of the context generally or of the Referenced entity, such as the asset holder type or location.",
        "type": "CodeableConcept",
        "array": true
      }
    },
    "backboneElement": true
  },
  "Contract_Term_Asset_ValuedItem": {
    "display": "Contract Term_ Asset_ Valued Item",
    "description": "Contract Valued Item List",
    "properties": {
      "entity[x]": {
        "key": "entity[x]",
        "display": "Entity[x]",
        "description": "Specific type of Contract Valued Item that may be priced.",
        "type": "CodeableConcept"
      },
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Identifies a Contract Valued Item instance.",
        "type": "Identifier"
      },
      "effectiveTime": {
        "key": "effectiveTime",
        "display": "Effective Time",
        "description": "Indicates the time during which this Contract ValuedItem information is effective.",
        "type": "dateTime"
      },
      "quantity": {
        "key": "quantity",
        "display": "Quantity",
        "description": "Specifies the units by which the Contract Valued Item is measured or counted, and quantifies the countable or measurable Contract Valued Item instances.",
        "type": "Quantity"
      },
      "unitPrice": {
        "key": "unitPrice",
        "display": "Unit Price",
        "description": "A Contract Valued Item unit valuation measure.",
        "type": "Money"
      },
      "factor": {
        "key": "factor",
        "display": "Factor",
        "description": "A real number that represents a multiplier used in determining the overall value of the Contract Valued Item delivered. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
        "type": "decimal"
      },
      "points": {
        "key": "points",
        "display": "Points",
        "description": "An amount that expresses the weighting (based on difficulty, cost and/or resource intensiveness) associated with the Contract Valued Item delivered. The concept of Points allows for assignment of point values for a Contract Valued Item, such that a monetary amount can be assigned to each point.",
        "type": "decimal"
      },
      "net": {
        "key": "net",
        "display": "Net",
        "description": "Expresses the product of the Contract Valued Item unitQuantity and the unitPriceAmt. For example, the formula: unit Quantity * unit Price (Cost per Point) * factor Number  * points = net Amount. Quantity, factor and points are assumed to be 1 if not supplied.",
        "type": "Money"
      },
      "payment": {
        "key": "payment",
        "display": "Payment",
        "description": "Terms of valuation.",
        "type": "string"
      },
      "paymentDate": {
        "key": "paymentDate",
        "display": "Payment Date",
        "description": "When payment is due.",
        "type": "dateTime"
      },
      "responsible": {
        "key": "responsible",
        "display": "Responsible",
        "description": "Who will make payment.",
        "type": "Reference",
        "targetProfile": [
          "Organization",
          "Patient",
          "Practitioner",
          "PractitionerRole",
          "RelatedPerson"
        ]
      },
      "recipient": {
        "key": "recipient",
        "display": "Recipient",
        "description": "Who will receive payment.",
        "type": "Reference",
        "targetProfile": [
          "Organization",
          "Patient",
          "Practitioner",
          "PractitionerRole",
          "RelatedPerson"
        ]
      },
      "linkId": {
        "key": "linkId",
        "display": "Link Id",
        "description": "Id  of the clause or question text related to the context of this valuedItem in the referenced form or QuestionnaireResponse.",
        "type": "string",
        "array": true
      },
      "securityLabelNumber": {
        "key": "securityLabelNumber",
        "display": "Security Label Number",
        "description": "A set of security labels that define which terms are controlled by this condition.",
        "type": "unsignedInt",
        "array": true
      }
    },
    "backboneElement": true
  },
  "Contract_Term_Action": {
    "display": "Contract Term_ Action",
    "description": "Entity being ascribed responsibility",
    "properties": {
      "doNotPerform": {
        "key": "doNotPerform",
        "display": "Do Not Perform",
        "description": "True if the term prohibits the  action.",
        "type": "boolean"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Activity or service obligation to be done or not done, performed or not performed, effectuated or not by this Contract term.",
        "type": "CodeableConcept"
      },
      "subject": {
        "key": "subject",
        "display": "Subject",
        "description": "Entity of the action.",
        "type": "Contract_Term_Action_Subject",
        "array": true
      },
      "intent": {
        "key": "intent",
        "display": "Intent",
        "description": "Reason or purpose for the action stipulated by this Contract Provision.",
        "type": "CodeableConcept"
      },
      "linkId": {
        "key": "linkId",
        "display": "Link Id",
        "description": "Id [identifier??] of the clause or question text related to this action in the referenced form or QuestionnaireResponse.",
        "type": "string",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "Current state of the term action.",
        "type": "CodeableConcept"
      },
      "context": {
        "key": "context",
        "display": "Context",
        "description": "Encounter or Episode with primary association to specified term activity.",
        "type": "Reference",
        "targetProfile": [
          "Encounter",
          "EpisodeOfCare"
        ]
      },
      "contextLinkId": {
        "key": "contextLinkId",
        "display": "Context Link Id",
        "description": "Id [identifier??] of the clause or question text related to the requester of this action in the referenced form or QuestionnaireResponse.",
        "type": "string",
        "array": true
      },
      "occurrence[x]": {
        "key": "occurrence[x]",
        "display": "Occurrence[x]",
        "description": "When action happens.",
        "type": "dateTime"
      },
      "requester": {
        "key": "requester",
        "display": "Requester",
        "description": "Who or what initiated the action and has responsibility for its activation.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "RelatedPerson",
          "Practitioner",
          "PractitionerRole",
          "Device",
          "Group",
          "Organization"
        ],
        "array": true
      },
      "requesterLinkId": {
        "key": "requesterLinkId",
        "display": "Requester Link Id",
        "description": "Id [identifier??] of the clause or question text related to the requester of this action in the referenced form or QuestionnaireResponse.",
        "type": "string",
        "array": true
      },
      "performerType": {
        "key": "performerType",
        "display": "Performer Type",
        "description": "The type of individual that is desired or required to perform or not perform the action.",
        "type": "CodeableConcept",
        "array": true
      },
      "performerRole": {
        "key": "performerRole",
        "display": "Performer Role",
        "description": "The type of role or competency of an individual desired or required to perform or not perform the action.",
        "type": "CodeableConcept"
      },
      "performer": {
        "key": "performer",
        "display": "Performer",
        "description": "Indicates who or what is being asked to perform (or not perform) the ction.",
        "type": "Reference",
        "targetProfile": [
          "RelatedPerson",
          "Patient",
          "Practitioner",
          "PractitionerRole",
          "CareTeam",
          "Device",
          "Substance",
          "Organization",
          "Location"
        ]
      },
      "performerLinkId": {
        "key": "performerLinkId",
        "display": "Performer Link Id",
        "description": "Id [identifier??] of the clause or question text related to the reason type or reference of this  action in the referenced form or QuestionnaireResponse.",
        "type": "string",
        "array": true
      },
      "reasonCode": {
        "key": "reasonCode",
        "display": "Reason Code",
        "description": "Rationale for the action to be performed or not performed. Describes why the action is permitted or prohibited.",
        "type": "CodeableConcept",
        "array": true
      },
      "reasonReference": {
        "key": "reasonReference",
        "display": "Reason Reference",
        "description": "Indicates another resource whose existence justifies permitting or not permitting this action.",
        "type": "Reference",
        "targetProfile": [
          "Condition",
          "Observation",
          "DiagnosticReport",
          "DocumentReference",
          "Questionnaire",
          "QuestionnaireResponse"
        ],
        "array": true
      },
      "reason": {
        "key": "reason",
        "display": "Reason",
        "description": "Describes why the action is to be performed or not performed in textual form.",
        "type": "string",
        "array": true
      },
      "reasonLinkId": {
        "key": "reasonLinkId",
        "display": "Reason Link Id",
        "description": "Id [identifier??] of the clause or question text related to the reason type or reference of this  action in the referenced form or QuestionnaireResponse.",
        "type": "string",
        "array": true
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "Comments made about the term action made by the requester, performer, subject or other participants.",
        "type": "Annotation",
        "array": true
      },
      "securityLabelNumber": {
        "key": "securityLabelNumber",
        "display": "Security Label Number",
        "description": "Security labels that protects the action.",
        "type": "unsignedInt",
        "array": true
      }
    },
    "backboneElement": true
  },
  "Contract_Term_Action_Subject": {
    "display": "Contract Term_ Action_ Subject",
    "description": "Entity of the action",
    "properties": {
      "reference": {
        "key": "reference",
        "display": "Reference",
        "description": "The entity the action is performed or not performed on or for.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "RelatedPerson",
          "Practitioner",
          "PractitionerRole",
          "Device",
          "Group",
          "Organization"
        ],
        "array": true
      },
      "role": {
        "key": "role",
        "display": "Role",
        "description": "Role type of agent assigned roles in this Contract.",
        "type": "CodeableConcept"
      }
    },
    "backboneElement": true
  },
  "Contract_Signer": {
    "display": "Contract Signer",
    "description": "Contract Signatory",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Role of this Contract signer, e.g. notary, grantee.",
        "type": "Coding"
      },
      "party": {
        "key": "party",
        "display": "Party",
        "description": "Party which is a signator to this Contract.",
        "type": "Reference",
        "targetProfile": [
          "Organization",
          "Patient",
          "Practitioner",
          "PractitionerRole",
          "RelatedPerson"
        ]
      },
      "signature": {
        "key": "signature",
        "display": "Signature",
        "description": "Legally binding Contract DSIG signature contents in Base64.",
        "type": "Signature",
        "array": true
      }
    },
    "backboneElement": true
  },
  "Contract_Friendly": {
    "display": "Contract Friendly",
    "description": "Contract Friendly Language",
    "properties": {
      "content[x]": {
        "key": "content[x]",
        "display": "Content[x]",
        "description": "Human readable rendering of this Contract in a format and representation intended to enhance comprehension and ensure understandability.",
        "type": "Attachment"
      }
    },
    "backboneElement": true
  },
  "Contract_Legal": {
    "display": "Contract Legal",
    "description": "Contract Legal Language",
    "properties": {
      "content[x]": {
        "key": "content[x]",
        "display": "Content[x]",
        "description": "Contract legal text in human renderable form.",
        "type": "Attachment"
      }
    },
    "backboneElement": true
  },
  "Contract_Rule": {
    "display": "Contract Rule",
    "description": "Computable Contract Language",
    "properties": {
      "content[x]": {
        "key": "content[x]",
        "display": "Content[x]",
        "description": "Computable Contract conveyed using a policy rule language (e.g. XACML, DKAL, SecPal).",
        "type": "Attachment"
      }
    },
    "backboneElement": true
  },
  "Coverage": {
    "display": "Coverage",
    "description": "Financial instrument which may be used to reimburse or pay for health care products and services. Includes both insurance and self-payment.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "A unique identifier assigned to this coverage.",
        "type": "Identifier",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of the resource instance.",
        "type": "enum",
        "enumValues": [
          "active",
          "cancelled",
          "draft",
          "entered-in-error"
        ]
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The type of coverage: social program, medical plan, accident coverage (workers compensation, auto), group health or payment by an individual or organization.",
        "type": "CodeableConcept"
      },
      "policyHolder": {
        "key": "policyHolder",
        "display": "Policy Holder",
        "description": "The party who 'owns' the insurance policy.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "RelatedPerson",
          "Organization"
        ]
      },
      "subscriber": {
        "key": "subscriber",
        "display": "Subscriber",
        "description": "The party who has signed-up for or 'owns' the contractual relationship to the policy or to whom the benefit of the policy for services rendered to them or their family is due.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "RelatedPerson"
        ]
      },
      "subscriberId": {
        "key": "subscriberId",
        "display": "Subscriber Id",
        "description": "The insurer assigned ID for the Subscriber.",
        "type": "string"
      },
      "beneficiary": {
        "key": "beneficiary",
        "display": "Beneficiary",
        "description": "The party who benefits from the insurance coverage; the patient when products and/or services are provided.",
        "type": "Reference",
        "targetProfile": [
          "Patient"
        ]
      },
      "dependent": {
        "key": "dependent",
        "display": "Dependent",
        "description": "A unique identifier for a dependent under the coverage.",
        "type": "string"
      },
      "relationship": {
        "key": "relationship",
        "display": "Relationship",
        "description": "The relationship of beneficiary (patient) to the subscriber.",
        "type": "CodeableConcept"
      },
      "period": {
        "key": "period",
        "display": "Period",
        "description": "Time period during which the coverage is in force. A missing start date indicates the start date isn't known, a missing end date means the coverage is continuing to be in force.",
        "type": "Period"
      },
      "payor": {
        "key": "payor",
        "display": "Payor",
        "description": "The program or plan underwriter or payor including both insurance and non-insurance agreements, such as patient-pay agreements.",
        "type": "Reference",
        "targetProfile": [
          "Organization",
          "Patient",
          "RelatedPerson"
        ],
        "array": true
      },
      "class": {
        "key": "class",
        "display": "Class",
        "description": "A suite of underwriter specific classifiers.",
        "type": "Coverage_Class",
        "array": true
      },
      "order": {
        "key": "order",
        "display": "Order",
        "description": "The order of applicability of this coverage relative to other coverages which are currently in force. Note, there may be gaps in the numbering and this does not imply primary, secondary etc. as the specific positioning of coverages depends upon the episode of care.",
        "type": "positiveInt"
      },
      "network": {
        "key": "network",
        "display": "Network",
        "description": "The insurer-specific identifier for the insurer-defined network of providers to which the beneficiary may seek treatment which will be covered at the 'in-network' rate, otherwise 'out of network' terms and conditions apply.",
        "type": "string"
      },
      "costToBeneficiary": {
        "key": "costToBeneficiary",
        "display": "Cost To Beneficiary",
        "description": "A suite of codes indicating the cost category and associated amount which have been detailed in the policy and may have been  included on the health card.",
        "type": "Coverage_CostToBeneficiary",
        "array": true
      },
      "subrogation": {
        "key": "subrogation",
        "display": "Subrogation",
        "description": "When 'subrogation=true' this insurance instance has been included not for adjudication but to provide insurers with the details to recover costs.",
        "type": "boolean"
      },
      "contract": {
        "key": "contract",
        "display": "Contract",
        "description": "The policy(s) which constitute this insurance coverage.",
        "type": "Reference",
        "targetProfile": [
          "Contract"
        ],
        "array": true
      }
    }
  },
  "Coverage_Class": {
    "display": "Coverage Class",
    "description": "Additional coverage classifications",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The type of classification for which an insurer-specific class label or number and optional name is provided, for example may be used to identify a class of coverage or employer group, Policy, Plan.",
        "type": "CodeableConcept"
      },
      "value": {
        "key": "value",
        "display": "Value",
        "description": "The alphanumeric string value associated with the insurer issued label.",
        "type": "string"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A short description for the class.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "Coverage_CostToBeneficiary": {
    "display": "Coverage Cost To Beneficiary",
    "description": "Patient payments for services/products",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The category of patient centric costs associated with treatment.",
        "type": "CodeableConcept"
      },
      "value[x]": {
        "key": "value[x]",
        "display": "Value[x]",
        "description": "The amount due from the patient for the cost category.",
        "type": "Quantity"
      },
      "exception": {
        "key": "exception",
        "display": "Exception",
        "description": "A suite of codes indicating exceptions or reductions to patient costs and their effective periods.",
        "type": "Coverage_CostToBeneficiary_Exception",
        "array": true
      }
    },
    "backboneElement": true
  },
  "Coverage_CostToBeneficiary_Exception": {
    "display": "Coverage Cost To Beneficiary_ Exception",
    "description": "Exceptions for patient payments",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The code for the specific exception.",
        "type": "CodeableConcept"
      },
      "period": {
        "key": "period",
        "display": "Period",
        "description": "The timeframe during when the exception is in force.",
        "type": "Period"
      }
    },
    "backboneElement": true
  },
  "CoverageEligibilityRequest": {
    "display": "CoverageEligibilityRequest",
    "description": "The CoverageEligibilityRequest provides patient and insurance coverage information to an insurer for them to respond, in the form of an CoverageEligibilityResponse, with information regarding whether the stated coverage is valid and in-force and optionally to provide the insurance details of the policy.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "A unique identifier assigned to this coverage eligiblity request.",
        "type": "Identifier",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of the resource instance.",
        "type": "enum",
        "enumValues": [
          "active",
          "cancelled",
          "draft",
          "entered-in-error"
        ]
      },
      "priority": {
        "key": "priority",
        "display": "Priority",
        "description": "When the requestor expects the processor to complete processing.",
        "type": "CodeableConcept"
      },
      "purpose": {
        "key": "purpose",
        "display": "Purpose",
        "description": "Code to specify whether requesting: prior authorization requirements for some service categories or billing codes; benefits for coverages specified or discovered; discovery and return of coverages for the patient; and/or validation that the specified coverage is in-force at the date/period specified or 'now' if not specified.",
        "type": "enum",
        "enumValues": [
          "auth-requirements",
          "benefits",
          "discovery",
          "validation"
        ],
        "array": true
      },
      "patient": {
        "key": "patient",
        "display": "Patient",
        "description": "The party who is the beneficiary of the supplied coverage and for whom eligibility is sought.",
        "type": "Reference",
        "targetProfile": [
          "Patient"
        ]
      },
      "serviced[x]": {
        "key": "serviced[x]",
        "display": "Serviced[x]",
        "description": "The date or dates when the enclosed suite of services were performed or completed.",
        "type": "date"
      },
      "created": {
        "key": "created",
        "display": "Created",
        "description": "The date when this resource was created.",
        "type": "dateTime"
      },
      "enterer": {
        "key": "enterer",
        "display": "Enterer",
        "description": "Person who created the request.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole"
        ]
      },
      "provider": {
        "key": "provider",
        "display": "Provider",
        "description": "The provider which is responsible for the request.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization"
        ]
      },
      "insurer": {
        "key": "insurer",
        "display": "Insurer",
        "description": "The Insurer who issued the coverage in question and is the recipient of the request.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "facility": {
        "key": "facility",
        "display": "Facility",
        "description": "Facility where the services are intended to be provided.",
        "type": "Reference",
        "targetProfile": [
          "Location"
        ]
      },
      "supportingInfo": {
        "key": "supportingInfo",
        "display": "Supporting Info",
        "description": "Additional information codes regarding exceptions, special considerations, the condition, situation, prior or concurrent issues.",
        "type": "CoverageEligibilityRequest_SupportingInfo",
        "array": true
      },
      "insurance": {
        "key": "insurance",
        "display": "Insurance",
        "description": "Financial instruments for reimbursement for the health care products and services.",
        "type": "CoverageEligibilityRequest_Insurance",
        "array": true
      },
      "item": {
        "key": "item",
        "display": "Item",
        "description": "Service categories or billable services for which benefit details and/or an authorization prior to service delivery may be required by the payor.",
        "type": "CoverageEligibilityRequest_Item",
        "array": true
      }
    }
  },
  "CoverageEligibilityRequest_SupportingInfo": {
    "display": "Coverage Eligibility Request Supporting Info",
    "description": "Supporting information",
    "properties": {
      "sequence": {
        "key": "sequence",
        "display": "Sequence",
        "description": "A number to uniquely identify supporting information entries.",
        "type": "positiveInt"
      },
      "information": {
        "key": "information",
        "display": "Information",
        "description": "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ]
      },
      "appliesToAll": {
        "key": "appliesToAll",
        "display": "Applies To All",
        "description": "The supporting materials are applicable for all detail items, product/servce categories and specific billing codes.",
        "type": "boolean"
      }
    },
    "backboneElement": true
  },
  "CoverageEligibilityRequest_Insurance": {
    "display": "Coverage Eligibility Request Insurance",
    "description": "Patient insurance information",
    "properties": {
      "focal": {
        "key": "focal",
        "display": "Focal",
        "description": "A flag to indicate that this Coverage is to be used for evaluation of this request when set to true.",
        "type": "boolean"
      },
      "coverage": {
        "key": "coverage",
        "display": "Coverage",
        "description": "Reference to the insurance card level information contained in the Coverage resource. The coverage issuing insurer will use these details to locate the patient's actual coverage within the insurer's information system.",
        "type": "Reference",
        "targetProfile": [
          "Coverage"
        ]
      },
      "businessArrangement": {
        "key": "businessArrangement",
        "display": "Business Arrangement",
        "description": "A business agreement number established between the provider and the insurer for special business processing purposes.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "CoverageEligibilityRequest_Item": {
    "display": "Coverage Eligibility Request Item",
    "description": "Item to be evaluated for eligibiity",
    "properties": {
      "supportingInfoSequence": {
        "key": "supportingInfoSequence",
        "display": "Supporting Info Sequence",
        "description": "Exceptions, special conditions and supporting information applicable for this service or product line.",
        "type": "positiveInt",
        "array": true
      },
      "category": {
        "key": "category",
        "display": "Category",
        "description": "Code to identify the general type of benefits under which products and services are provided.",
        "type": "CodeableConcept"
      },
      "productOrService": {
        "key": "productOrService",
        "display": "Product Or Service",
        "description": "This contains the product, service, drug or other billing code for the item.",
        "type": "CodeableConcept"
      },
      "modifier": {
        "key": "modifier",
        "display": "Modifier",
        "description": "Item typification or modifiers codes to convey additional context for the product or service.",
        "type": "CodeableConcept",
        "array": true
      },
      "provider": {
        "key": "provider",
        "display": "Provider",
        "description": "The practitioner who is responsible for the product or service to be rendered to the patient.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole"
        ]
      },
      "quantity": {
        "key": "quantity",
        "display": "Quantity",
        "description": "The number of repetitions of a service or product.",
        "type": "Quantity"
      },
      "unitPrice": {
        "key": "unitPrice",
        "display": "Unit Price",
        "description": "The amount charged to the patient by the provider for a single unit.",
        "type": "Money"
      },
      "facility": {
        "key": "facility",
        "display": "Facility",
        "description": "Facility where the services will be provided.",
        "type": "Reference",
        "targetProfile": [
          "Location",
          "Organization"
        ]
      },
      "diagnosis": {
        "key": "diagnosis",
        "display": "Diagnosis",
        "description": "Patient diagnosis for which care is sought.",
        "type": "CoverageEligibilityRequest_Item_Diagnosis",
        "array": true
      },
      "detail": {
        "key": "detail",
        "display": "Detail",
        "description": "The plan/proposal/order describing the proposed service in detail.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ],
        "array": true
      }
    },
    "backboneElement": true
  },
  "CoverageEligibilityRequest_Item_Diagnosis": {
    "display": "Coverage Eligibility Request Item_ Diagnosis",
    "description": "Applicable diagnosis",
    "properties": {
      "diagnosis[x]": {
        "key": "diagnosis[x]",
        "display": "Diagnosis[x]",
        "description": "The nature of illness or problem in a coded form or as a reference to an external defined Condition.",
        "type": "CodeableConcept"
      }
    },
    "backboneElement": true
  },
  "CoverageEligibilityResponse": {
    "display": "CoverageEligibilityResponse",
    "description": "This resource provides eligibility and plan details from the processing of an CoverageEligibilityRequest resource.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "A unique identifier assigned to this coverage eligiblity request.",
        "type": "Identifier",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of the resource instance.",
        "type": "enum",
        "enumValues": [
          "active",
          "cancelled",
          "draft",
          "entered-in-error"
        ]
      },
      "purpose": {
        "key": "purpose",
        "display": "Purpose",
        "description": "Code to specify whether requesting: prior authorization requirements for some service categories or billing codes; benefits for coverages specified or discovered; discovery and return of coverages for the patient; and/or validation that the specified coverage is in-force at the date/period specified or 'now' if not specified.",
        "type": "enum",
        "enumValues": [
          "auth-requirements",
          "benefits",
          "discovery",
          "validation"
        ],
        "array": true
      },
      "patient": {
        "key": "patient",
        "display": "Patient",
        "description": "The party who is the beneficiary of the supplied coverage and for whom eligibility is sought.",
        "type": "Reference",
        "targetProfile": [
          "Patient"
        ]
      },
      "serviced[x]": {
        "key": "serviced[x]",
        "display": "Serviced[x]",
        "description": "The date or dates when the enclosed suite of services were performed or completed.",
        "type": "date"
      },
      "created": {
        "key": "created",
        "display": "Created",
        "description": "The date this resource was created.",
        "type": "dateTime"
      },
      "requestor": {
        "key": "requestor",
        "display": "Requestor",
        "description": "The provider which is responsible for the request.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization"
        ]
      },
      "request": {
        "key": "request",
        "display": "Request",
        "description": "Reference to the original request resource.",
        "type": "Reference",
        "targetProfile": [
          "CoverageEligibilityRequest"
        ]
      },
      "outcome": {
        "key": "outcome",
        "display": "Outcome",
        "description": "The outcome of the request processing.",
        "type": "enum",
        "enumValues": [
          "queued",
          "complete",
          "error",
          "partial"
        ]
      },
      "disposition": {
        "key": "disposition",
        "display": "Disposition",
        "description": "A human readable description of the status of the adjudication.",
        "type": "string"
      },
      "insurer": {
        "key": "insurer",
        "display": "Insurer",
        "description": "The Insurer who issued the coverage in question and is the author of the response.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "insurance": {
        "key": "insurance",
        "display": "Insurance",
        "description": "Financial instruments for reimbursement for the health care products and services.",
        "type": "CoverageEligibilityResponse_Insurance",
        "array": true
      },
      "preAuthRef": {
        "key": "preAuthRef",
        "display": "Pre Auth Ref",
        "description": "A reference from the Insurer to which these services pertain to be used on further communication and as proof that the request occurred.",
        "type": "string"
      },
      "form": {
        "key": "form",
        "display": "Form",
        "description": "A code for the form to be used for printing the content.",
        "type": "CodeableConcept"
      },
      "error": {
        "key": "error",
        "display": "Error",
        "description": "Errors encountered during the processing of the request.",
        "type": "CoverageEligibilityResponse_Error",
        "array": true
      }
    }
  },
  "CoverageEligibilityResponse_Insurance": {
    "display": "Coverage Eligibility Response Insurance",
    "description": "Patient insurance information",
    "properties": {
      "coverage": {
        "key": "coverage",
        "display": "Coverage",
        "description": "Reference to the insurance card level information contained in the Coverage resource. The coverage issuing insurer will use these details to locate the patient's actual coverage within the insurer's information system.",
        "type": "Reference",
        "targetProfile": [
          "Coverage"
        ]
      },
      "inforce": {
        "key": "inforce",
        "display": "Inforce",
        "description": "Flag indicating if the coverage provided is inforce currently if no service date(s) specified or for the whole duration of the service dates.",
        "type": "boolean"
      },
      "benefitPeriod": {
        "key": "benefitPeriod",
        "display": "Benefit Period",
        "description": "The term of the benefits documented in this response.",
        "type": "Period"
      },
      "item": {
        "key": "item",
        "display": "Item",
        "description": "Benefits and optionally current balances, and authorization details by category or service.",
        "type": "CoverageEligibilityResponse_Insurance_Item",
        "array": true
      }
    },
    "backboneElement": true
  },
  "CoverageEligibilityResponse_Insurance_Item": {
    "display": "Coverage Eligibility Response Insurance_ Item",
    "description": "Benefits and authorization details",
    "properties": {
      "category": {
        "key": "category",
        "display": "Category",
        "description": "Code to identify the general type of benefits under which products and services are provided.",
        "type": "CodeableConcept"
      },
      "productOrService": {
        "key": "productOrService",
        "display": "Product Or Service",
        "description": "This contains the product, service, drug or other billing code for the item.",
        "type": "CodeableConcept"
      },
      "modifier": {
        "key": "modifier",
        "display": "Modifier",
        "description": "Item typification or modifiers codes to convey additional context for the product or service.",
        "type": "CodeableConcept",
        "array": true
      },
      "provider": {
        "key": "provider",
        "display": "Provider",
        "description": "The practitioner who is eligible for the provision of the product or service.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole"
        ]
      },
      "excluded": {
        "key": "excluded",
        "display": "Excluded",
        "description": "True if the indicated class of service is excluded from the plan, missing or False indicates the product or service is included in the coverage.",
        "type": "boolean"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A short name or tag for the benefit.",
        "type": "string"
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A richer description of the benefit or services covered.",
        "type": "string"
      },
      "network": {
        "key": "network",
        "display": "Network",
        "description": "Is a flag to indicate whether the benefits refer to in-network providers or out-of-network providers.",
        "type": "CodeableConcept"
      },
      "unit": {
        "key": "unit",
        "display": "Unit",
        "description": "Indicates if the benefits apply to an individual or to the family.",
        "type": "CodeableConcept"
      },
      "term": {
        "key": "term",
        "display": "Term",
        "description": "The term or period of the values such as 'maximum lifetime benefit' or 'maximum annual visits'.",
        "type": "CodeableConcept"
      },
      "benefit": {
        "key": "benefit",
        "display": "Benefit",
        "description": "Benefits used to date.",
        "type": "CoverageEligibilityResponse_Insurance_Item_Benefit",
        "array": true
      },
      "authorizationRequired": {
        "key": "authorizationRequired",
        "display": "Authorization Required",
        "description": "A boolean flag indicating whether a preauthorization is required prior to actual service delivery.",
        "type": "boolean"
      },
      "authorizationSupporting": {
        "key": "authorizationSupporting",
        "display": "Authorization Supporting",
        "description": "Codes or comments regarding information or actions associated with the preauthorization.",
        "type": "CodeableConcept",
        "array": true
      },
      "authorizationUrl": {
        "key": "authorizationUrl",
        "display": "Authorization Url",
        "description": "A web location for obtaining requirements or descriptive information regarding the preauthorization.",
        "type": "uri"
      }
    },
    "backboneElement": true
  },
  "CoverageEligibilityResponse_Insurance_Item_Benefit": {
    "display": "Coverage Eligibility Response Insurance_ Item_ Benefit",
    "description": "Benefit Summary",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Classification of benefit being provided.",
        "type": "CodeableConcept"
      },
      "allowed[x]": {
        "key": "allowed[x]",
        "display": "Allowed[x]",
        "description": "The quantity of the benefit which is permitted under the coverage.",
        "type": "unsignedInt"
      },
      "used[x]": {
        "key": "used[x]",
        "display": "Used[x]",
        "description": "The quantity of the benefit which have been consumed to date.",
        "type": "unsignedInt"
      }
    },
    "backboneElement": true
  },
  "CoverageEligibilityResponse_Error": {
    "display": "Coverage Eligibility Response Error",
    "description": "Processing errors",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "An error code,from a specified code system, which details why the eligibility check could not be performed.",
        "type": "CodeableConcept"
      }
    },
    "backboneElement": true
  },
  "DetectedIssue": {
    "display": "DetectedIssue",
    "description": "Indicates an actual or potential clinical issue with or between one or more active or proposed clinical actions for a patient; e.g. Drug-drug interaction, Ineffective treatment frequency, Procedure-condition conflict, etc.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Business identifier associated with the detected issue record.",
        "type": "Identifier",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "Indicates the status of the detected issue.",
        "type": "enum",
        "enumValues": [
          "registered",
          "preliminary",
          "final",
          "amended +"
        ]
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "Identifies the general type of issue identified.",
        "type": "CodeableConcept"
      },
      "severity": {
        "key": "severity",
        "display": "Severity",
        "description": "Indicates the degree of importance associated with the identified issue based on the potential impact on the patient.",
        "type": "enum",
        "enumValues": [
          "high",
          "moderate",
          "low"
        ]
      },
      "patient": {
        "key": "patient",
        "display": "Patient",
        "description": "Indicates the patient whose record the detected issue is associated with.",
        "type": "Reference",
        "targetProfile": [
          "Patient"
        ]
      },
      "identified[x]": {
        "key": "identified[x]",
        "display": "Identified[x]",
        "description": "The date or period when the detected issue was initially identified.",
        "type": "dateTime"
      },
      "author": {
        "key": "author",
        "display": "Author",
        "description": "Individual or device responsible for the issue being raised.  For example, a decision support application or a pharmacist conducting a medication review.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Device"
        ]
      },
      "implicated": {
        "key": "implicated",
        "display": "Implicated",
        "description": "Indicates the resource representing the current activity or proposed activity that is potentially problematic.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ],
        "array": true
      },
      "evidence": {
        "key": "evidence",
        "display": "Evidence",
        "description": "Supporting evidence or manifestations that provide the basis for identifying the detected issue such as a GuidanceResponse or MeasureReport.",
        "type": "DetectedIssue_Evidence",
        "array": true
      },
      "detail": {
        "key": "detail",
        "display": "Detail",
        "description": "A textual explanation of the detected issue.",
        "type": "string"
      },
      "reference": {
        "key": "reference",
        "display": "Reference",
        "description": "The literature, knowledge-base or similar reference that describes the propensity for the detected issue identified.",
        "type": "uri"
      },
      "mitigation": {
        "key": "mitigation",
        "display": "Mitigation",
        "description": "Indicates an action that has been taken or is committed to reduce or eliminate the likelihood of the risk identified by the detected issue from manifesting.  Can also reflect an observation of known mitigating factors that may reduce/eliminate the need for any action.",
        "type": "DetectedIssue_Mitigation",
        "array": true
      }
    }
  },
  "DetectedIssue_Evidence": {
    "display": "Detected Issue Evidence",
    "description": "Supporting evidence",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "A manifestation that led to the recording of this detected issue.",
        "type": "CodeableConcept",
        "array": true
      },
      "detail": {
        "key": "detail",
        "display": "Detail",
        "description": "Links to resources that constitute evidence for the detected issue such as a GuidanceResponse or MeasureReport.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ],
        "array": true
      }
    },
    "backboneElement": true
  },
  "DetectedIssue_Mitigation": {
    "display": "Detected Issue Mitigation",
    "description": "Step taken to address",
    "properties": {
      "action": {
        "key": "action",
        "display": "Action",
        "description": "Describes the action that was taken or the observation that was made that reduces/eliminates the risk associated with the identified issue.",
        "type": "CodeableConcept"
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "Indicates when the mitigating action was documented.",
        "type": "dateTime"
      },
      "author": {
        "key": "author",
        "display": "Author",
        "description": "Identifies the practitioner who determined the mitigation and takes responsibility for the mitigation step occurring.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole"
        ]
      }
    },
    "backboneElement": true
  },
  "Device": {
    "display": "Device",
    "description": "A type of a manufactured item that is used in the provision of healthcare without being substantially changed through that activity. The device may be a medical or non-medical device.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Unique instance identifiers assigned to a device by manufacturers other organizations or owners.",
        "type": "Identifier",
        "array": true
      },
      "definition": {
        "key": "definition",
        "display": "Definition",
        "description": "The reference to the definition for the device.",
        "type": "Reference",
        "targetProfile": [
          "DeviceDefinition"
        ]
      },
      "udiCarrier": {
        "key": "udiCarrier",
        "display": "Udi Carrier",
        "description": "Unique device identifier (UDI) assigned to device label or package.  Note that the Device may include multiple udiCarriers as it either may include just the udiCarrier for the jurisdiction it is sold, or for multiple jurisdictions it could have been sold.",
        "type": "Device_UdiCarrier",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "Status of the Device availability.",
        "type": "enum",
        "enumValues": [
          "active",
          "inactive",
          "entered-in-error",
          "unknown"
        ]
      },
      "statusReason": {
        "key": "statusReason",
        "display": "Status Reason",
        "description": "Reason for the dtatus of the Device availability.",
        "type": "CodeableConcept",
        "array": true
      },
      "distinctIdentifier": {
        "key": "distinctIdentifier",
        "display": "Distinct Identifier",
        "description": "The distinct identification string as required by regulation for a human cell, tissue, or cellular and tissue-based product.",
        "type": "string"
      },
      "manufacturer": {
        "key": "manufacturer",
        "display": "Manufacturer",
        "description": "A name of the manufacturer.",
        "type": "string"
      },
      "manufactureDate": {
        "key": "manufactureDate",
        "display": "Manufacture Date",
        "description": "The date and time when the device was manufactured.",
        "type": "dateTime"
      },
      "expirationDate": {
        "key": "expirationDate",
        "display": "Expiration Date",
        "description": "The date and time beyond which this device is no longer valid or should not be used (if applicable).",
        "type": "dateTime"
      },
      "lotNumber": {
        "key": "lotNumber",
        "display": "Lot Number",
        "description": "Lot number assigned by the manufacturer.",
        "type": "string"
      },
      "serialNumber": {
        "key": "serialNumber",
        "display": "Serial Number",
        "description": "The serial number assigned by the organization when the device was manufactured.",
        "type": "string"
      },
      "deviceName": {
        "key": "deviceName",
        "display": "Device Name",
        "description": "This represents the manufacturer's name of the device as provided by the device, from a UDI label, or by a person describing the Device.  This typically would be used when a person provides the name(s) or when the device represents one of the names available from DeviceDefinition.",
        "type": "Device_DeviceName",
        "array": true
      },
      "modelNumber": {
        "key": "modelNumber",
        "display": "Model Number",
        "description": "The model number for the device.",
        "type": "string"
      },
      "partNumber": {
        "key": "partNumber",
        "display": "Part Number",
        "description": "The part number of the device.",
        "type": "string"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The kind or type of device.",
        "type": "CodeableConcept"
      },
      "specialization": {
        "key": "specialization",
        "display": "Specialization",
        "description": "The capabilities supported on a  device, the standards to which the device conforms for a particular purpose, and used for the communication.",
        "type": "Device_Specialization",
        "array": true
      },
      "version": {
        "key": "version",
        "display": "Version",
        "description": "The actual design of the device or software version running on the device.",
        "type": "Device_Version",
        "array": true
      },
      "property": {
        "key": "property",
        "display": "Property",
        "description": "The actual configuration settings of a device as it actually operates, e.g., regulation status, time properties.",
        "type": "Device_Property",
        "array": true
      },
      "patient": {
        "key": "patient",
        "display": "Patient",
        "description": "Patient information, If the device is affixed to a person.",
        "type": "Reference",
        "targetProfile": [
          "Patient"
        ]
      },
      "owner": {
        "key": "owner",
        "display": "Owner",
        "description": "An organization that is responsible for the provision and ongoing maintenance of the device.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "contact": {
        "key": "contact",
        "display": "Contact",
        "description": "Contact details for an organization or a particular human that is responsible for the device.",
        "type": "ContactPoint",
        "array": true
      },
      "location": {
        "key": "location",
        "display": "Location",
        "description": "The place where the device can be found.",
        "type": "Reference",
        "targetProfile": [
          "Location"
        ]
      },
      "url": {
        "key": "url",
        "display": "Url",
        "description": "A network address on which the device may be contacted directly.",
        "type": "uri"
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "Descriptive information, usage information or implantation information that is not captured in an existing element.",
        "type": "Annotation",
        "array": true
      },
      "safety": {
        "key": "safety",
        "display": "Safety",
        "description": "Provides additional safety characteristics about a medical device.  For example devices containing latex.",
        "type": "CodeableConcept",
        "array": true
      },
      "parent": {
        "key": "parent",
        "display": "Parent",
        "description": "The parent device.",
        "type": "Reference",
        "targetProfile": [
          "Device"
        ]
      }
    }
  },
  "Device_UdiCarrier": {
    "display": "Device Udi Carrier",
    "description": "Unique Device Identifier (UDI) Barcode string",
    "properties": {
      "deviceIdentifier": {
        "key": "deviceIdentifier",
        "display": "Device Identifier",
        "description": "The device identifier (DI) is a mandatory, fixed portion of a UDI that identifies the labeler and the specific version or model of a device.",
        "type": "string"
      },
      "issuer": {
        "key": "issuer",
        "display": "Issuer",
        "description": "Organization that is charged with issuing UDIs for devices.  For example, the US FDA issuers include :\n1) GS1: \nhttp://hl7.org/fhir/NamingSystem/gs1-di, \n2) HIBCC:\nhttp://hl7.org/fhir/NamingSystem/hibcc-dI, \n3) ICCBBA for blood containers:\nhttp://hl7.org/fhir/NamingSystem/iccbba-blood-di, \n4) ICCBA for other devices:\nhttp://hl7.org/fhir/NamingSystem/iccbba-other-di.",
        "type": "uri"
      },
      "jurisdiction": {
        "key": "jurisdiction",
        "display": "Jurisdiction",
        "description": "The identity of the authoritative source for UDI generation within a  jurisdiction.  All UDIs are globally unique within a single namespace with the appropriate repository uri as the system.  For example,  UDIs of devices managed in the U.S. by the FDA, the value is  http://hl7.org/fhir/NamingSystem/fda-udi.",
        "type": "uri"
      },
      "carrierAIDC": {
        "key": "carrierAIDC",
        "display": "Carrier A I D C",
        "description": "The full UDI carrier of the Automatic Identification and Data Capture (AIDC) technology representation of the barcode string as printed on the packaging of the device - e.g., a barcode or RFID.   Because of limitations on character sets in XML and the need to round-trip JSON data through XML, AIDC Formats *SHALL* be base64 encoded.",
        "type": "base64Binary"
      },
      "carrierHRF": {
        "key": "carrierHRF",
        "display": "Carrier H R F",
        "description": "The full UDI carrier as the human readable form (HRF) representation of the barcode string as printed on the packaging of the device.",
        "type": "string"
      },
      "entryType": {
        "key": "entryType",
        "display": "Entry Type",
        "description": "A coded entry to indicate how the data was entered.",
        "type": "enum",
        "enumValues": [
          "barcode",
          "rfid",
          "manual +"
        ]
      }
    },
    "backboneElement": true
  },
  "Device_DeviceName": {
    "display": "Device Device Name",
    "description": "The name of the device as given by the manufacturer",
    "properties": {
      "name": {
        "key": "name",
        "display": "Name",
        "description": "The name of the device.",
        "type": "string"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The type of deviceName.\nUDILabelName | UserFriendlyName | PatientReportedName | ManufactureDeviceName | ModelName.",
        "type": "enum",
        "enumValues": [
          "udi-label-name",
          "user-friendly-name",
          "patient-reported-name",
          "manufacturer-name",
          "model-name",
          "other"
        ]
      }
    },
    "backboneElement": true
  },
  "Device_Specialization": {
    "display": "Device Specialization",
    "description": "The capabilities supported on a  device, the standards to which the device conforms for a particular purpose, and used for the communication",
    "properties": {
      "systemType": {
        "key": "systemType",
        "display": "System Type",
        "description": "The standard that is used to operate and communicate.",
        "type": "CodeableConcept"
      },
      "version": {
        "key": "version",
        "display": "Version",
        "description": "The version of the standard that is used to operate and communicate.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "Device_Version": {
    "display": "Device Version",
    "description": "The actual design of the device or software version running on the device",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The type of the device version.",
        "type": "CodeableConcept"
      },
      "component": {
        "key": "component",
        "display": "Component",
        "description": "A single component of the device version.",
        "type": "Identifier"
      },
      "value": {
        "key": "value",
        "display": "Value",
        "description": "The version text.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "Device_Property": {
    "display": "Device Property",
    "description": "The actual configuration settings of a device as it actually operates, e.g., regulation status, time properties",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Code that specifies the property DeviceDefinitionPropetyCode (Extensible).",
        "type": "CodeableConcept"
      },
      "valueQuantity": {
        "key": "valueQuantity",
        "display": "Value Quantity",
        "description": "Property value as a quantity.",
        "type": "Quantity",
        "array": true
      },
      "valueCode": {
        "key": "valueCode",
        "display": "Value Code",
        "description": "Property value as a code, e.g., NTP4 (synced to NTP).",
        "type": "CodeableConcept",
        "array": true
      }
    },
    "backboneElement": true
  },
  "DeviceDefinition": {
    "display": "DeviceDefinition",
    "description": "The characteristics, operational status and capabilities of a medical-related component of a medical device.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Unique instance identifiers assigned to a device by the software, manufacturers, other organizations or owners. For example: handle ID.",
        "type": "Identifier",
        "array": true
      },
      "udiDeviceIdentifier": {
        "key": "udiDeviceIdentifier",
        "display": "Udi Device Identifier",
        "description": "Unique device identifier (UDI) assigned to device label or package.  Note that the Device may include multiple udiCarriers as it either may include just the udiCarrier for the jurisdiction it is sold, or for multiple jurisdictions it could have been sold.",
        "type": "DeviceDefinition_UdiDeviceIdentifier",
        "array": true
      },
      "manufacturer[x]": {
        "key": "manufacturer[x]",
        "display": "Manufacturer[x]",
        "description": "A name of the manufacturer.",
        "type": "string"
      },
      "deviceName": {
        "key": "deviceName",
        "display": "Device Name",
        "description": "A name given to the device to identify it.",
        "type": "DeviceDefinition_DeviceName",
        "array": true
      },
      "modelNumber": {
        "key": "modelNumber",
        "display": "Model Number",
        "description": "The model number for the device.",
        "type": "string"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "What kind of device or device system this is.",
        "type": "CodeableConcept"
      },
      "specialization": {
        "key": "specialization",
        "display": "Specialization",
        "description": "The capabilities supported on a  device, the standards to which the device conforms for a particular purpose, and used for the communication.",
        "type": "DeviceDefinition_Specialization",
        "array": true
      },
      "version": {
        "key": "version",
        "display": "Version",
        "description": "The available versions of the device, e.g., software versions.",
        "type": "string",
        "array": true
      },
      "safety": {
        "key": "safety",
        "display": "Safety",
        "description": "Safety characteristics of the device.",
        "type": "CodeableConcept",
        "array": true
      },
      "shelfLifeStorage": {
        "key": "shelfLifeStorage",
        "display": "Shelf Life Storage",
        "description": "Shelf Life and storage information.",
        "type": "ProductShelfLife",
        "array": true
      },
      "physicalCharacteristics": {
        "key": "physicalCharacteristics",
        "display": "Physical Characteristics",
        "description": "Dimensions, color etc.",
        "type": "ProdCharacteristic"
      },
      "languageCode": {
        "key": "languageCode",
        "display": "Language Code",
        "description": "Language code for the human-readable text strings produced by the device (all supported).",
        "type": "CodeableConcept",
        "array": true
      },
      "capability": {
        "key": "capability",
        "display": "Capability",
        "description": "Device capabilities.",
        "type": "DeviceDefinition_Capability",
        "array": true
      },
      "property": {
        "key": "property",
        "display": "Property",
        "description": "The actual configuration settings of a device as it actually operates, e.g., regulation status, time properties.",
        "type": "DeviceDefinition_Property",
        "array": true
      },
      "owner": {
        "key": "owner",
        "display": "Owner",
        "description": "An organization that is responsible for the provision and ongoing maintenance of the device.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "contact": {
        "key": "contact",
        "display": "Contact",
        "description": "Contact details for an organization or a particular human that is responsible for the device.",
        "type": "ContactPoint",
        "array": true
      },
      "url": {
        "key": "url",
        "display": "Url",
        "description": "A network address on which the device may be contacted directly.",
        "type": "uri"
      },
      "onlineInformation": {
        "key": "onlineInformation",
        "display": "Online Information",
        "description": "Access to on-line information about the device.",
        "type": "uri"
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "Descriptive information, usage information or implantation information that is not captured in an existing element.",
        "type": "Annotation",
        "array": true
      },
      "quantity": {
        "key": "quantity",
        "display": "Quantity",
        "description": "The quantity of the device present in the packaging (e.g. the number of devices present in a pack, or the number of devices in the same package of the medicinal product).",
        "type": "Quantity"
      },
      "parentDevice": {
        "key": "parentDevice",
        "display": "Parent Device",
        "description": "The parent device it can be part of.",
        "type": "Reference",
        "targetProfile": [
          "DeviceDefinition"
        ]
      },
      "material": {
        "key": "material",
        "display": "Material",
        "description": "A substance used to create the material(s) of which the device is made.",
        "type": "DeviceDefinition_Material",
        "array": true
      }
    }
  },
  "DeviceDefinition_UdiDeviceIdentifier": {
    "display": "Device Definition Udi Device Identifier",
    "description": "Unique Device Identifier (UDI) Barcode string",
    "properties": {
      "deviceIdentifier": {
        "key": "deviceIdentifier",
        "display": "Device Identifier",
        "description": "The identifier that is to be associated with every Device that references this DeviceDefintiion for the issuer and jurisdication porvided in the DeviceDefinition.udiDeviceIdentifier.",
        "type": "string"
      },
      "issuer": {
        "key": "issuer",
        "display": "Issuer",
        "description": "The organization that assigns the identifier algorithm.",
        "type": "uri"
      },
      "jurisdiction": {
        "key": "jurisdiction",
        "display": "Jurisdiction",
        "description": "The jurisdiction to which the deviceIdentifier applies.",
        "type": "uri"
      }
    },
    "backboneElement": true
  },
  "DeviceDefinition_DeviceName": {
    "display": "Device Definition Device Name",
    "description": "A name given to the device to identify it",
    "properties": {
      "name": {
        "key": "name",
        "display": "Name",
        "description": "The name of the device.",
        "type": "string"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The type of deviceName.\nUDILabelName | UserFriendlyName | PatientReportedName | ManufactureDeviceName | ModelName.",
        "type": "enum",
        "enumValues": [
          "udi-label-name",
          "user-friendly-name",
          "patient-reported-name",
          "manufacturer-name",
          "model-name",
          "other"
        ]
      }
    },
    "backboneElement": true
  },
  "DeviceDefinition_Specialization": {
    "display": "Device Definition Specialization",
    "description": "The capabilities supported on a  device, the standards to which the device conforms for a particular purpose, and used for the communication",
    "properties": {
      "systemType": {
        "key": "systemType",
        "display": "System Type",
        "description": "The standard that is used to operate and communicate.",
        "type": "string"
      },
      "version": {
        "key": "version",
        "display": "Version",
        "description": "The version of the standard that is used to operate and communicate.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "DeviceDefinition_Capability": {
    "display": "Device Definition Capability",
    "description": "Device capabilities",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Type of capability.",
        "type": "CodeableConcept"
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "Description of capability.",
        "type": "CodeableConcept",
        "array": true
      }
    },
    "backboneElement": true
  },
  "DeviceDefinition_Property": {
    "display": "Device Definition Property",
    "description": "The actual configuration settings of a device as it actually operates, e.g., regulation status, time properties",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Code that specifies the property DeviceDefinitionPropetyCode (Extensible).",
        "type": "CodeableConcept"
      },
      "valueQuantity": {
        "key": "valueQuantity",
        "display": "Value Quantity",
        "description": "Property value as a quantity.",
        "type": "Quantity",
        "array": true
      },
      "valueCode": {
        "key": "valueCode",
        "display": "Value Code",
        "description": "Property value as a code, e.g., NTP4 (synced to NTP).",
        "type": "CodeableConcept",
        "array": true
      }
    },
    "backboneElement": true
  },
  "DeviceDefinition_Material": {
    "display": "Device Definition Material",
    "description": "A substance used to create the material(s) of which the device is made",
    "properties": {
      "substance": {
        "key": "substance",
        "display": "Substance",
        "description": "The substance.",
        "type": "CodeableConcept"
      },
      "alternate": {
        "key": "alternate",
        "display": "Alternate",
        "description": "Indicates an alternative material of the device.",
        "type": "boolean"
      },
      "allergenicIndicator": {
        "key": "allergenicIndicator",
        "display": "Allergenic Indicator",
        "description": "Whether the substance is a known or suspected allergen.",
        "type": "boolean"
      }
    },
    "backboneElement": true
  },
  "DeviceMetric": {
    "display": "DeviceMetric",
    "description": "Describes a measurement, calculation or setting capability of a medical device.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Unique instance identifiers assigned to a device by the device or gateway software, manufacturers, other organizations or owners. For example: handle ID.",
        "type": "Identifier",
        "array": true
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Describes the type of the metric. For example: Heart Rate, PEEP Setting, etc.",
        "type": "CodeableConcept"
      },
      "unit": {
        "key": "unit",
        "display": "Unit",
        "description": "Describes the unit that an observed value determined for this metric will have. For example: Percent, Seconds, etc.",
        "type": "CodeableConcept"
      },
      "source": {
        "key": "source",
        "display": "Source",
        "description": "Describes the link to the  Device that this DeviceMetric belongs to and that contains administrative device information such as manufacturer, serial number, etc.",
        "type": "Reference",
        "targetProfile": [
          "Device"
        ]
      },
      "parent": {
        "key": "parent",
        "display": "Parent",
        "description": "Describes the link to the  Device that this DeviceMetric belongs to and that provide information about the location of this DeviceMetric in the containment structure of the parent Device. An example would be a Device that represents a Channel. This reference can be used by a client application to distinguish DeviceMetrics that have the same type, but should be interpreted based on their containment location.",
        "type": "Reference",
        "targetProfile": [
          "Device"
        ]
      },
      "operationalStatus": {
        "key": "operationalStatus",
        "display": "Operational Status",
        "description": "Indicates current operational state of the device. For example: On, Off, Standby, etc.",
        "type": "enum",
        "enumValues": [
          "on",
          "off",
          "standby",
          "entered-in-error"
        ]
      },
      "color": {
        "key": "color",
        "display": "Color",
        "description": "Describes the color representation for the metric. This is often used to aid clinicians to track and identify parameter types by color. In practice, consider a Patient Monitor that has ECG/HR and Pleth for example; the parameters are displayed in different characteristic colors, such as HR-blue, BP-green, and PR and SpO2- magenta.",
        "type": "enum",
        "enumValues": [
          "black",
          "red",
          "green",
          "yellow",
          "blue",
          "magenta",
          "cyan",
          "white"
        ]
      },
      "category": {
        "key": "category",
        "display": "Category",
        "description": "Indicates the category of the observation generation process. A DeviceMetric can be for example a setting, measurement, or calculation.",
        "type": "enum",
        "enumValues": [
          "measurement",
          "setting",
          "calculation",
          "unspecified"
        ]
      },
      "measurementPeriod": {
        "key": "measurementPeriod",
        "display": "Measurement Period",
        "description": "Describes the measurement repetition time. This is not necessarily the same as the update period. The measurement repetition time can range from milliseconds up to hours. An example for a measurement repetition time in the range of milliseconds is the sampling rate of an ECG. An example for a measurement repetition time in the range of hours is a NIBP that is triggered automatically every hour. The update period may be different than the measurement repetition time, if the device does not update the published observed value with the same frequency as it was measured.",
        "type": "Timing"
      },
      "calibration": {
        "key": "calibration",
        "display": "Calibration",
        "description": "Describes the calibrations that have been performed or that are required to be performed.",
        "type": "DeviceMetric_Calibration",
        "array": true
      }
    }
  },
  "DeviceMetric_Calibration": {
    "display": "Device Metric Calibration",
    "description": "Describes the calibrations that have been performed or that are required to be performed",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Describes the type of the calibration method.",
        "type": "enum",
        "enumValues": [
          "unspecified",
          "offset",
          "gain",
          "two-point"
        ]
      },
      "state": {
        "key": "state",
        "display": "State",
        "description": "Describes the state of the calibration.",
        "type": "enum",
        "enumValues": [
          "not-calibrated",
          "calibration-required",
          "calibrated",
          "unspecified"
        ]
      },
      "time": {
        "key": "time",
        "display": "Time",
        "description": "Describes the time last calibration has been performed.",
        "type": "instant"
      }
    },
    "backboneElement": true
  },
  "DeviceRequest": {
    "display": "DeviceRequest",
    "description": "Represents a request for a patient to employ a medical device. The device may be an implantable device, or an external assistive device, such as a walker.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Identifiers assigned to this order by the orderer or by the receiver.",
        "type": "Identifier",
        "array": true
      },
      "instantiatesCanonical": {
        "key": "instantiatesCanonical",
        "display": "Instantiates Canonical",
        "description": "The URL pointing to a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this DeviceRequest.",
        "type": "canonical",
        "array": true
      },
      "instantiatesUri": {
        "key": "instantiatesUri",
        "display": "Instantiates Uri",
        "description": "The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this DeviceRequest.",
        "type": "uri",
        "array": true
      },
      "basedOn": {
        "key": "basedOn",
        "display": "Based On",
        "description": "Plan/proposal/order fulfilled by this request.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ],
        "array": true
      },
      "priorRequest": {
        "key": "priorRequest",
        "display": "Prior Request",
        "description": "The request takes the place of the referenced completed or terminated request(s).",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ],
        "array": true
      },
      "groupIdentifier": {
        "key": "groupIdentifier",
        "display": "Group Identifier",
        "description": "Composite request this is part of.",
        "type": "Identifier"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of the request.",
        "type": "enum",
        "enumValues": [
          "draft",
          "active",
          "on-hold",
          "revoked",
          "completed",
          "entered-in-error",
          "unknown"
        ]
      },
      "intent": {
        "key": "intent",
        "display": "Intent",
        "description": "Whether the request is a proposal, plan, an original order or a reflex order.",
        "type": "enum",
        "enumValues": [
          "proposal",
          "plan",
          "directive",
          "order",
          "original-order",
          "reflex-order",
          "filler-order",
          "instance-order",
          "option"
        ]
      },
      "priority": {
        "key": "priority",
        "display": "Priority",
        "description": "Indicates how quickly the {{title}} should be addressed with respect to other requests.",
        "type": "enum",
        "enumValues": [
          "routine",
          "urgent",
          "asap",
          "stat"
        ]
      },
      "code[x]": {
        "key": "code[x]",
        "display": "Code[x]",
        "description": "The details of the device to be used.",
        "type": "Reference",
        "targetProfile": [
          "Device"
        ]
      },
      "parameter": {
        "key": "parameter",
        "display": "Parameter",
        "description": "Specific parameters for the ordered item.  For example, the prism value for lenses.",
        "type": "DeviceRequest_Parameter",
        "array": true
      },
      "subject": {
        "key": "subject",
        "display": "Subject",
        "description": "The patient who will use the device.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Group",
          "Location",
          "Device"
        ]
      },
      "encounter": {
        "key": "encounter",
        "display": "Encounter",
        "description": "An encounter that provides additional context in which this request is made.",
        "type": "Reference",
        "targetProfile": [
          "Encounter"
        ]
      },
      "occurrence[x]": {
        "key": "occurrence[x]",
        "display": "Occurrence[x]",
        "description": "The timing schedule for the use of the device. The Schedule data type allows many different expressions, for example. \"Every 8 hours\"; \"Three times a day\"; \"1/2 an hour before breakfast for 10 days from 23-Dec 2011:\"; \"15 Oct 2013, 17 Oct 2013 and 1 Nov 2013\".",
        "type": "dateTime"
      },
      "authoredOn": {
        "key": "authoredOn",
        "display": "Authored On",
        "description": "When the request transitioned to being actionable.",
        "type": "dateTime"
      },
      "requester": {
        "key": "requester",
        "display": "Requester",
        "description": "The individual who initiated the request and has responsibility for its activation.",
        "type": "Reference",
        "targetProfile": [
          "Device",
          "Practitioner",
          "PractitionerRole",
          "Organization"
        ]
      },
      "performerType": {
        "key": "performerType",
        "display": "Performer Type",
        "description": "Desired type of performer for doing the diagnostic testing.",
        "type": "CodeableConcept"
      },
      "performer": {
        "key": "performer",
        "display": "Performer",
        "description": "The desired performer for doing the diagnostic testing.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization",
          "CareTeam",
          "HealthcareService",
          "Patient",
          "Device",
          "RelatedPerson"
        ]
      },
      "reasonCode": {
        "key": "reasonCode",
        "display": "Reason Code",
        "description": "Reason or justification for the use of this device.",
        "type": "CodeableConcept",
        "array": true
      },
      "reasonReference": {
        "key": "reasonReference",
        "display": "Reason Reference",
        "description": "Reason or justification for the use of this device.",
        "type": "Reference",
        "targetProfile": [
          "Condition",
          "Observation",
          "DiagnosticReport",
          "DocumentReference"
        ],
        "array": true
      },
      "insurance": {
        "key": "insurance",
        "display": "Insurance",
        "description": "Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be required for delivering the requested service.",
        "type": "Reference",
        "targetProfile": [
          "Coverage",
          "ClaimResponse"
        ],
        "array": true
      },
      "supportingInfo": {
        "key": "supportingInfo",
        "display": "Supporting Info",
        "description": "Additional clinical information about the patient that may influence the request fulfilment.  For example, this may include where on the subject's body the device will be used (i.e. the target site).",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ],
        "array": true
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "Details about this request that were not represented at all or sufficiently in one of the attributes provided in a class. These may include for example a comment, an instruction, or a note associated with the statement.",
        "type": "Annotation",
        "array": true
      },
      "relevantHistory": {
        "key": "relevantHistory",
        "display": "Relevant History",
        "description": "Key events in the history of the request.",
        "type": "Reference",
        "targetProfile": [
          "Provenance"
        ],
        "array": true
      }
    }
  },
  "DeviceRequest_Parameter": {
    "display": "Device Request Parameter",
    "description": "Device details",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "A code or string that identifies the device detail being asserted.",
        "type": "CodeableConcept"
      },
      "value[x]": {
        "key": "value[x]",
        "display": "Value[x]",
        "description": "The value of the device detail.",
        "type": "CodeableConcept"
      }
    },
    "backboneElement": true
  },
  "DeviceUseStatement": {
    "display": "DeviceUseStatement",
    "description": "A record of a device being used by a patient where the record is the result of a report from the patient or another clinician.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "An external identifier for this statement such as an IRI.",
        "type": "Identifier",
        "array": true
      },
      "basedOn": {
        "key": "basedOn",
        "display": "Based On",
        "description": "A plan, proposal or order that is fulfilled in whole or in part by this DeviceUseStatement.",
        "type": "Reference",
        "targetProfile": [
          "ServiceRequest"
        ],
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "A code representing the patient or other source's judgment about the state of the device used that this statement is about.  Generally this will be active or completed.",
        "type": "enum",
        "enumValues": [
          "active",
          "completed",
          "entered-in-error +"
        ]
      },
      "subject": {
        "key": "subject",
        "display": "Subject",
        "description": "The patient who used the device.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Group"
        ]
      },
      "derivedFrom": {
        "key": "derivedFrom",
        "display": "Derived From",
        "description": "Allows linking the DeviceUseStatement to the underlying Request, or to other information that supports or is used to derive the DeviceUseStatement.",
        "type": "Reference",
        "targetProfile": [
          "ServiceRequest",
          "Procedure",
          "Claim",
          "Observation",
          "QuestionnaireResponse",
          "DocumentReference"
        ],
        "array": true
      },
      "timing[x]": {
        "key": "timing[x]",
        "display": "Timing[x]",
        "description": "How often the device was used.",
        "type": "Timing"
      },
      "recordedOn": {
        "key": "recordedOn",
        "display": "Recorded On",
        "description": "The time at which the statement was made/recorded.",
        "type": "dateTime"
      },
      "source": {
        "key": "source",
        "display": "Source",
        "description": "Who reported the device was being used by the patient.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Practitioner",
          "PractitionerRole",
          "RelatedPerson"
        ]
      },
      "device": {
        "key": "device",
        "display": "Device",
        "description": "The details of the device used.",
        "type": "Reference",
        "targetProfile": [
          "Device"
        ]
      },
      "reasonCode": {
        "key": "reasonCode",
        "display": "Reason Code",
        "description": "Reason or justification for the use of the device.",
        "type": "CodeableConcept",
        "array": true
      },
      "reasonReference": {
        "key": "reasonReference",
        "display": "Reason Reference",
        "description": "Indicates another resource whose existence justifies this DeviceUseStatement.",
        "type": "Reference",
        "targetProfile": [
          "Condition",
          "Observation",
          "DiagnosticReport",
          "DocumentReference",
          "Media"
        ],
        "array": true
      },
      "bodySite": {
        "key": "bodySite",
        "display": "Body Site",
        "description": "Indicates the anotomic location on the subject's body where the device was used ( i.e. the target).",
        "type": "CodeableConcept"
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "Details about the device statement that were not represented at all or sufficiently in one of the attributes provided in a class. These may include for example a comment, an instruction, or a note associated with the statement.",
        "type": "Annotation",
        "array": true
      }
    }
  },
  "DiagnosticReport": {
    "display": "DiagnosticReport",
    "description": "The findings and interpretation of diagnostic  tests performed on patients, groups of patients, devices, and locations, and/or specimens derived from these. The report includes clinical context such as requesting and provider information, and some mix of atomic results, images, textual and coded interpretations, and formatted representation of diagnostic reports.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Identifiers assigned to this report by the performer or other systems.",
        "type": "Identifier",
        "array": true
      },
      "basedOn": {
        "key": "basedOn",
        "display": "Based On",
        "description": "Details concerning a service requested.",
        "type": "Reference",
        "targetProfile": [
          "CarePlan",
          "ImmunizationRecommendation",
          "MedicationRequest",
          "NutritionOrder",
          "ServiceRequest"
        ],
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of the diagnostic report.",
        "type": "enum",
        "enumValues": [
          "registered",
          "partial",
          "preliminary",
          "final +"
        ]
      },
      "category": {
        "key": "category",
        "display": "Category",
        "description": "A code that classifies the clinical discipline, department or diagnostic service that created the report (e.g. cardiology, biochemistry, hematology, MRI). This is used for searching, sorting and display purposes.",
        "type": "CodeableConcept",
        "array": true
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "A code or name that describes this diagnostic report.",
        "type": "CodeableConcept"
      },
      "subject": {
        "key": "subject",
        "display": "Subject",
        "description": "The subject of the report. Usually, but not always, this is a patient. However, diagnostic services also perform analyses on specimens collected from a variety of other sources.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Group",
          "Device",
          "Location"
        ]
      },
      "encounter": {
        "key": "encounter",
        "display": "Encounter",
        "description": "The healthcare event  (e.g. a patient and healthcare provider interaction) which this DiagnosticReport is about.",
        "type": "Reference",
        "targetProfile": [
          "Encounter"
        ]
      },
      "effective[x]": {
        "key": "effective[x]",
        "display": "Effective[x]",
        "description": "The time or time-period the observed values are related to. When the subject of the report is a patient, this is usually either the time of the procedure or of specimen collection(s), but very often the source of the date/time is not known, only the date/time itself.",
        "type": "dateTime"
      },
      "issued": {
        "key": "issued",
        "display": "Issued",
        "description": "The date and time that this version of the report was made available to providers, typically after the report was reviewed and verified.",
        "type": "instant"
      },
      "performer": {
        "key": "performer",
        "display": "Performer",
        "description": "The diagnostic service that is responsible for issuing the report.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization",
          "CareTeam"
        ],
        "array": true
      },
      "resultsInterpreter": {
        "key": "resultsInterpreter",
        "display": "Results Interpreter",
        "description": "The practitioner or organization that is responsible for the report's conclusions and interpretations.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization",
          "CareTeam"
        ],
        "array": true
      },
      "specimen": {
        "key": "specimen",
        "display": "Specimen",
        "description": "Details about the specimens on which this diagnostic report is based.",
        "type": "Reference",
        "targetProfile": [
          "Specimen"
        ],
        "array": true
      },
      "result": {
        "key": "result",
        "display": "Result",
        "description": "[Observations](observation.html)  that are part of this diagnostic report.",
        "type": "Reference",
        "targetProfile": [
          "Observation"
        ],
        "array": true
      },
      "imagingStudy": {
        "key": "imagingStudy",
        "display": "Imaging Study",
        "description": "One or more links to full details of any imaging performed during the diagnostic investigation. Typically, this is imaging performed by DICOM enabled modalities, but this is not required. A fully enabled PACS viewer can use this information to provide views of the source images.",
        "type": "Reference",
        "targetProfile": [
          "ImagingStudy"
        ],
        "array": true
      },
      "media": {
        "key": "media",
        "display": "Media",
        "description": "A list of key images associated with this report. The images are generally created during the diagnostic process, and may be directly of the patient, or of treated specimens (i.e. slides of interest).",
        "type": "DiagnosticReport_Media",
        "array": true
      },
      "conclusion": {
        "key": "conclusion",
        "display": "Conclusion",
        "description": "Concise and clinically contextualized summary conclusion (interpretation/impression) of the diagnostic report.",
        "type": "string"
      },
      "conclusionCode": {
        "key": "conclusionCode",
        "display": "Conclusion Code",
        "description": "One or more codes that represent the summary conclusion (interpretation/impression) of the diagnostic report.",
        "type": "CodeableConcept",
        "array": true
      },
      "presentedForm": {
        "key": "presentedForm",
        "display": "Presented Form",
        "description": "Rich text representation of the entire result as issued by the diagnostic service. Multiple formats are allowed but they SHALL be semantically equivalent.",
        "type": "Attachment",
        "array": true
      }
    }
  },
  "DiagnosticReport_Media": {
    "display": "Diagnostic Report Media",
    "description": "Key images associated with this report",
    "properties": {
      "comment": {
        "key": "comment",
        "display": "Comment",
        "description": "A comment about the image. Typically, this is used to provide an explanation for why the image is included, or to draw the viewer's attention to important features.",
        "type": "string"
      },
      "link": {
        "key": "link",
        "display": "Link",
        "description": "Reference to the image source.",
        "type": "Reference",
        "targetProfile": [
          "Media"
        ]
      }
    },
    "backboneElement": true
  },
  "DocumentManifest": {
    "display": "DocumentManifest",
    "description": "A collection of documents compiled for a purpose together with metadata that applies to the collection.",
    "properties": {
      "masterIdentifier": {
        "key": "masterIdentifier",
        "display": "Master Identifier",
        "description": "A single identifier that uniquely identifies this manifest. Principally used to refer to the manifest in non-FHIR contexts.",
        "type": "Identifier"
      },
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Other identifiers associated with the document manifest, including version independent  identifiers.",
        "type": "Identifier",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of this document manifest.",
        "type": "enum",
        "enumValues": [
          "current",
          "superseded",
          "entered-in-error"
        ]
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The code specifying the type of clinical activity that resulted in placing the associated content into the DocumentManifest.",
        "type": "CodeableConcept"
      },
      "subject": {
        "key": "subject",
        "display": "Subject",
        "description": "Who or what the set of documents is about. The documents can be about a person, (patient or healthcare practitioner), a device (i.e. machine) or even a group of subjects (such as a document about a herd of farm animals, or a set of patients that share a common exposure). If the documents cross more than one subject, then more than one subject is allowed here (unusual use case).",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Practitioner",
          "Group",
          "Device"
        ]
      },
      "created": {
        "key": "created",
        "display": "Created",
        "description": "When the document manifest was created for submission to the server (not necessarily the same thing as the actual resource last modified time, since it may be modified, replicated, etc.).",
        "type": "dateTime"
      },
      "author": {
        "key": "author",
        "display": "Author",
        "description": "Identifies who is the author of the manifest. Manifest author is not necessarly the author of the references included.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization",
          "Device",
          "Patient",
          "RelatedPerson"
        ],
        "array": true
      },
      "recipient": {
        "key": "recipient",
        "display": "Recipient",
        "description": "A patient, practitioner, or organization for which this set of documents is intended.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Practitioner",
          "PractitionerRole",
          "RelatedPerson",
          "Organization"
        ],
        "array": true
      },
      "source": {
        "key": "source",
        "display": "Source",
        "description": "Identifies the source system, application, or software that produced the document manifest.",
        "type": "uri"
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "Human-readable description of the source document. This is sometimes known as the \"title\".",
        "type": "string"
      },
      "content": {
        "key": "content",
        "display": "Content",
        "description": "The list of Resources that consist of the parts of this manifest.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ],
        "array": true
      },
      "related": {
        "key": "related",
        "display": "Related",
        "description": "Related identifiers or resources associated with the DocumentManifest.",
        "type": "DocumentManifest_Related",
        "array": true
      }
    }
  },
  "DocumentManifest_Related": {
    "display": "Document Manifest Related",
    "description": "Related things",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Related identifier to this DocumentManifest.  For example, Order numbers, accession numbers, XDW workflow numbers.",
        "type": "Identifier"
      },
      "ref": {
        "key": "ref",
        "display": "Ref",
        "description": "Related Resource to this DocumentManifest. For example, Order, ServiceRequest,  Procedure, EligibilityRequest, etc.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ]
      }
    },
    "backboneElement": true
  },
  "DocumentReference": {
    "display": "DocumentReference",
    "description": "A reference to a document of any kind for any purpose. Provides metadata about the document so that the document can be discovered and managed. The scope of a document is any seralized object with a mime-type, so includes formal patient centric documents (CDA), cliical notes, scanned paper, and non-patient specific documents like policy text.",
    "properties": {
      "masterIdentifier": {
        "key": "masterIdentifier",
        "display": "Master Identifier",
        "description": "Document identifier as assigned by the source of the document. This identifier is specific to this version of the document. This unique identifier may be used elsewhere to identify this version of the document.",
        "type": "Identifier"
      },
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Other identifiers associated with the document, including version independent identifiers.",
        "type": "Identifier",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of this document reference.",
        "type": "enum",
        "enumValues": [
          "current",
          "superseded",
          "entered-in-error"
        ]
      },
      "docStatus": {
        "key": "docStatus",
        "display": "Doc Status",
        "description": "The status of the underlying document.",
        "type": "enum",
        "enumValues": [
          "preliminary",
          "final",
          "amended",
          "entered-in-error"
        ]
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Specifies the particular kind of document referenced  (e.g. History and Physical, Discharge Summary, Progress Note). This usually equates to the purpose of making the document referenced.",
        "type": "CodeableConcept"
      },
      "category": {
        "key": "category",
        "display": "Category",
        "description": "A categorization for the type of document referenced - helps for indexing and searching. This may be implied by or derived from the code specified in the DocumentReference.type.",
        "type": "CodeableConcept",
        "array": true
      },
      "subject": {
        "key": "subject",
        "display": "Subject",
        "description": "Who or what the document is about. The document can be about a person, (patient or healthcare practitioner), a device (e.g. a machine) or even a group of subjects (such as a document about a herd of farm animals, or a set of patients that share a common exposure).",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Practitioner",
          "Group",
          "Device"
        ]
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "When the document reference was created.",
        "type": "instant"
      },
      "author": {
        "key": "author",
        "display": "Author",
        "description": "Identifies who is responsible for adding the information to the document.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization",
          "Device",
          "Patient",
          "RelatedPerson"
        ],
        "array": true
      },
      "authenticator": {
        "key": "authenticator",
        "display": "Authenticator",
        "description": "Which person or organization authenticates that this document is valid.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization"
        ]
      },
      "custodian": {
        "key": "custodian",
        "display": "Custodian",
        "description": "Identifies the organization or group who is responsible for ongoing maintenance of and access to the document.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "relatesTo": {
        "key": "relatesTo",
        "display": "Relates To",
        "description": "Relationships that this document has with other document references that already exist.",
        "type": "DocumentReference_RelatesTo",
        "array": true
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "Human-readable description of the source document.",
        "type": "string"
      },
      "securityLabel": {
        "key": "securityLabel",
        "display": "Security Label",
        "description": "A set of Security-Tag codes specifying the level of privacy/security of the Document. Note that DocumentReference.meta.security contains the security labels of the \"reference\" to the document, while DocumentReference.securityLabel contains a snapshot of the security labels on the document the reference refers to.",
        "type": "CodeableConcept",
        "array": true
      },
      "content": {
        "key": "content",
        "display": "Content",
        "description": "The document and format referenced. There may be multiple content element repetitions, each with a different format.",
        "type": "DocumentReference_Content",
        "array": true
      },
      "context": {
        "key": "context",
        "display": "Context",
        "description": "The clinical context in which the document was prepared.",
        "type": "DocumentReference_Context"
      }
    }
  },
  "DocumentReference_RelatesTo": {
    "display": "Document Reference Relates To",
    "description": "Relationships to other documents",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "The type of relationship that this document has with anther document.",
        "type": "enum",
        "enumValues": [
          "replaces",
          "transforms",
          "signs",
          "appends"
        ]
      },
      "target": {
        "key": "target",
        "display": "Target",
        "description": "The target document of this relationship.",
        "type": "Reference",
        "targetProfile": [
          "DocumentReference"
        ]
      }
    },
    "backboneElement": true
  },
  "DocumentReference_Content": {
    "display": "Document Reference Content",
    "description": "Document referenced",
    "properties": {
      "attachment": {
        "key": "attachment",
        "display": "Attachment",
        "description": "The document or URL of the document along with critical metadata to prove content has integrity.",
        "type": "Attachment"
      },
      "format": {
        "key": "format",
        "display": "Format",
        "description": "An identifier of the document encoding, structure, and template that the document conforms to beyond the base format indicated in the mimeType.",
        "type": "Coding"
      }
    },
    "backboneElement": true
  },
  "DocumentReference_Context": {
    "display": "Document Reference Context",
    "description": "Clinical context of document",
    "properties": {
      "encounter": {
        "key": "encounter",
        "display": "Encounter",
        "description": "Describes the clinical encounter or type of care that the document content is associated with.",
        "type": "Reference",
        "targetProfile": [
          "Encounter",
          "EpisodeOfCare"
        ],
        "array": true
      },
      "event": {
        "key": "event",
        "display": "Event",
        "description": "This list of codes represents the main clinical acts, such as a colonoscopy or an appendectomy, being documented. In some cases, the event is inherent in the type Code, such as a \"History and Physical Report\" in which the procedure being documented is necessarily a \"History and Physical\" act.",
        "type": "CodeableConcept",
        "array": true
      },
      "period": {
        "key": "period",
        "display": "Period",
        "description": "The time period over which the service that is described by the document was provided.",
        "type": "Period"
      },
      "facilityType": {
        "key": "facilityType",
        "display": "Facility Type",
        "description": "The kind of facility where the patient was seen.",
        "type": "CodeableConcept"
      },
      "practiceSetting": {
        "key": "practiceSetting",
        "display": "Practice Setting",
        "description": "This property may convey specifics about the practice setting where the content was created, often reflecting the clinical specialty.",
        "type": "CodeableConcept"
      },
      "sourcePatientInfo": {
        "key": "sourcePatientInfo",
        "display": "Source Patient Info",
        "description": "The Patient Information as known when the document was published. May be a reference to a version specific, or contained.",
        "type": "Reference",
        "targetProfile": [
          "Patient"
        ]
      },
      "related": {
        "key": "related",
        "display": "Related",
        "description": "Related identifiers or resources associated with the DocumentReference.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ],
        "array": true
      }
    },
    "backboneElement": true
  },
  "DomainResource": {
    "display": "DomainResource",
    "description": "A resource that includes narrative, extensions, and contained resources.",
    "properties": {}
  },
  "EffectEvidenceSynthesis": {
    "display": "EffectEvidenceSynthesis",
    "description": "The EffectEvidenceSynthesis resource describes the difference in an outcome between exposures states in a population where the effect estimate is derived from a combination of research studies.",
    "properties": {
      "url": {
        "key": "url",
        "display": "Url",
        "description": "An absolute URI that is used to identify this effect evidence synthesis when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this effect evidence synthesis is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the effect evidence synthesis is stored on different servers.",
        "type": "uri"
      },
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "A formal identifier that is used to identify this effect evidence synthesis when it is represented in other formats, or referenced in a specification, model, design or an instance.",
        "type": "Identifier",
        "array": true
      },
      "version": {
        "key": "version",
        "display": "Version",
        "description": "The identifier that is used to identify this version of the effect evidence synthesis when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the effect evidence synthesis author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
        "type": "string"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A natural language name identifying the effect evidence synthesis. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
        "type": "string"
      },
      "title": {
        "key": "title",
        "display": "Title",
        "description": "A short, descriptive, user-friendly title for the effect evidence synthesis.",
        "type": "string"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of this effect evidence synthesis. Enables tracking the life-cycle of the content.",
        "type": "enum",
        "enumValues": [
          "draft",
          "active",
          "retired",
          "unknown"
        ]
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "The date  (and optionally time) when the effect evidence synthesis was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the effect evidence synthesis changes.",
        "type": "dateTime"
      },
      "publisher": {
        "key": "publisher",
        "display": "Publisher",
        "description": "The name of the organization or individual that published the effect evidence synthesis.",
        "type": "string"
      },
      "contact": {
        "key": "contact",
        "display": "Contact",
        "description": "Contact details to assist a user in finding and communicating with the publisher.",
        "type": "ContactDetail",
        "array": true
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A free text natural language description of the effect evidence synthesis from a consumer's perspective.",
        "type": "markdown"
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "A human-readable string to clarify or explain concepts about the resource.",
        "type": "Annotation",
        "array": true
      },
      "useContext": {
        "key": "useContext",
        "display": "Use Context",
        "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate effect evidence synthesis instances.",
        "type": "UsageContext",
        "array": true
      },
      "jurisdiction": {
        "key": "jurisdiction",
        "display": "Jurisdiction",
        "description": "A legal or geographic region in which the effect evidence synthesis is intended to be used.",
        "type": "CodeableConcept",
        "array": true
      },
      "copyright": {
        "key": "copyright",
        "display": "Copyright",
        "description": "A copyright statement relating to the effect evidence synthesis and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the effect evidence synthesis.",
        "type": "markdown"
      },
      "approvalDate": {
        "key": "approvalDate",
        "display": "Approval Date",
        "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
        "type": "date"
      },
      "lastReviewDate": {
        "key": "lastReviewDate",
        "display": "Last Review Date",
        "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
        "type": "date"
      },
      "effectivePeriod": {
        "key": "effectivePeriod",
        "display": "Effective Period",
        "description": "The period during which the effect evidence synthesis content was or is planned to be in active use.",
        "type": "Period"
      },
      "topic": {
        "key": "topic",
        "display": "Topic",
        "description": "Descriptive topics related to the content of the EffectEvidenceSynthesis. Topics provide a high-level categorization grouping types of EffectEvidenceSynthesiss that can be useful for filtering and searching.",
        "type": "CodeableConcept",
        "array": true
      },
      "author": {
        "key": "author",
        "display": "Author",
        "description": "An individiual or organization primarily involved in the creation and maintenance of the content.",
        "type": "ContactDetail",
        "array": true
      },
      "editor": {
        "key": "editor",
        "display": "Editor",
        "description": "An individual or organization primarily responsible for internal coherence of the content.",
        "type": "ContactDetail",
        "array": true
      },
      "reviewer": {
        "key": "reviewer",
        "display": "Reviewer",
        "description": "An individual or organization primarily responsible for review of some aspect of the content.",
        "type": "ContactDetail",
        "array": true
      },
      "endorser": {
        "key": "endorser",
        "display": "Endorser",
        "description": "An individual or organization responsible for officially endorsing the content for use in some setting.",
        "type": "ContactDetail",
        "array": true
      },
      "relatedArtifact": {
        "key": "relatedArtifact",
        "display": "Related Artifact",
        "description": "Related artifacts such as additional documentation, justification, or bibliographic references.",
        "type": "RelatedArtifact",
        "array": true
      },
      "synthesisType": {
        "key": "synthesisType",
        "display": "Synthesis Type",
        "description": "Type of synthesis eg meta-analysis.",
        "type": "CodeableConcept"
      },
      "studyType": {
        "key": "studyType",
        "display": "Study Type",
        "description": "Type of study eg randomized trial.",
        "type": "CodeableConcept"
      },
      "population": {
        "key": "population",
        "display": "Population",
        "description": "A reference to a EvidenceVariable resource that defines the population for the research.",
        "type": "Reference",
        "targetProfile": [
          "EvidenceVariable"
        ]
      },
      "exposure": {
        "key": "exposure",
        "display": "Exposure",
        "description": "A reference to a EvidenceVariable resource that defines the exposure for the research.",
        "type": "Reference",
        "targetProfile": [
          "EvidenceVariable"
        ]
      },
      "exposureAlternative": {
        "key": "exposureAlternative",
        "display": "Exposure Alternative",
        "description": "A reference to a EvidenceVariable resource that defines the comparison exposure for the research.",
        "type": "Reference",
        "targetProfile": [
          "EvidenceVariable"
        ]
      },
      "outcome": {
        "key": "outcome",
        "display": "Outcome",
        "description": "A reference to a EvidenceVariable resomece that defines the outcome for the research.",
        "type": "Reference",
        "targetProfile": [
          "EvidenceVariable"
        ]
      },
      "sampleSize": {
        "key": "sampleSize",
        "display": "Sample Size",
        "description": "A description of the size of the sample involved in the synthesis.",
        "type": "EffectEvidenceSynthesis_SampleSize"
      },
      "resultsByExposure": {
        "key": "resultsByExposure",
        "display": "Results By Exposure",
        "description": "A description of the results for each exposure considered in the effect estimate.",
        "type": "EffectEvidenceSynthesis_ResultsByExposure",
        "array": true
      },
      "effectEstimate": {
        "key": "effectEstimate",
        "display": "Effect Estimate",
        "description": "The estimated effect of the exposure variant.",
        "type": "EffectEvidenceSynthesis_EffectEstimate",
        "array": true
      },
      "certainty": {
        "key": "certainty",
        "display": "Certainty",
        "description": "A description of the certainty of the effect estimate.",
        "type": "EffectEvidenceSynthesis_Certainty",
        "array": true
      }
    }
  },
  "EffectEvidenceSynthesis_SampleSize": {
    "display": "Effect Evidence Synthesis Sample Size",
    "description": "What sample size was involved?",
    "properties": {
      "description": {
        "key": "description",
        "display": "Description",
        "description": "Human-readable summary of sample size.",
        "type": "string"
      },
      "numberOfStudies": {
        "key": "numberOfStudies",
        "display": "Number Of Studies",
        "description": "Number of studies included in this evidence synthesis.",
        "type": "integer"
      },
      "numberOfParticipants": {
        "key": "numberOfParticipants",
        "display": "Number Of Participants",
        "description": "Number of participants included in this evidence synthesis.",
        "type": "integer"
      }
    },
    "backboneElement": true
  },
  "EffectEvidenceSynthesis_ResultsByExposure": {
    "display": "Effect Evidence Synthesis Results By Exposure",
    "description": "What was the result per exposure?",
    "properties": {
      "description": {
        "key": "description",
        "display": "Description",
        "description": "Human-readable summary of results by exposure state.",
        "type": "string"
      },
      "exposureState": {
        "key": "exposureState",
        "display": "Exposure State",
        "description": "Whether these results are for the exposure state or alternative exposure state.",
        "type": "enum",
        "enumValues": [
          "exposure",
          "exposure-alternative"
        ]
      },
      "variantState": {
        "key": "variantState",
        "display": "Variant State",
        "description": "Used to define variant exposure states such as low-risk state.",
        "type": "CodeableConcept"
      },
      "riskEvidenceSynthesis": {
        "key": "riskEvidenceSynthesis",
        "display": "Risk Evidence Synthesis",
        "description": "Reference to a RiskEvidenceSynthesis resource.",
        "type": "Reference",
        "targetProfile": [
          "RiskEvidenceSynthesis"
        ]
      }
    },
    "backboneElement": true
  },
  "EffectEvidenceSynthesis_EffectEstimate": {
    "display": "Effect Evidence Synthesis Effect Estimate",
    "description": "What was the estimated effect",
    "properties": {
      "description": {
        "key": "description",
        "display": "Description",
        "description": "Human-readable summary of effect estimate.",
        "type": "string"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Examples include relative risk and mean difference.",
        "type": "CodeableConcept"
      },
      "variantState": {
        "key": "variantState",
        "display": "Variant State",
        "description": "Used to define variant exposure states such as low-risk state.",
        "type": "CodeableConcept"
      },
      "value": {
        "key": "value",
        "display": "Value",
        "description": "The point estimate of the effect estimate.",
        "type": "decimal"
      },
      "unitOfMeasure": {
        "key": "unitOfMeasure",
        "display": "Unit Of Measure",
        "description": "Specifies the UCUM unit for the outcome.",
        "type": "CodeableConcept"
      },
      "precisionEstimate": {
        "key": "precisionEstimate",
        "display": "Precision Estimate",
        "description": "A description of the precision of the estimate for the effect.",
        "type": "EffectEvidenceSynthesis_EffectEstimate_PrecisionEstimate",
        "array": true
      }
    },
    "backboneElement": true
  },
  "EffectEvidenceSynthesis_EffectEstimate_PrecisionEstimate": {
    "display": "Effect Evidence Synthesis Effect Estimate_ Precision Estimate",
    "description": "How precise the estimate is",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Examples include confidence interval and interquartile range.",
        "type": "CodeableConcept"
      },
      "level": {
        "key": "level",
        "display": "Level",
        "description": "Use 95 for a 95% confidence interval.",
        "type": "decimal"
      },
      "from": {
        "key": "from",
        "display": "From",
        "description": "Lower bound of confidence interval.",
        "type": "decimal"
      },
      "to": {
        "key": "to",
        "display": "To",
        "description": "Upper bound of confidence interval.",
        "type": "decimal"
      }
    },
    "backboneElement": true
  },
  "EffectEvidenceSynthesis_Certainty": {
    "display": "Effect Evidence Synthesis Certainty",
    "description": "How certain is the effect",
    "properties": {
      "rating": {
        "key": "rating",
        "display": "Rating",
        "description": "A rating of the certainty of the effect estimate.",
        "type": "CodeableConcept",
        "array": true
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "A human-readable string to clarify or explain concepts about the resource.",
        "type": "Annotation",
        "array": true
      },
      "certaintySubcomponent": {
        "key": "certaintySubcomponent",
        "display": "Certainty Subcomponent",
        "description": "A description of a component of the overall certainty.",
        "type": "EffectEvidenceSynthesis_Certainty_CertaintySubcomponent",
        "array": true
      }
    },
    "backboneElement": true
  },
  "EffectEvidenceSynthesis_Certainty_CertaintySubcomponent": {
    "display": "Effect Evidence Synthesis Certainty_ Certainty Subcomponent",
    "description": "A component that contributes to the overall certainty",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Type of subcomponent of certainty rating.",
        "type": "CodeableConcept"
      },
      "rating": {
        "key": "rating",
        "display": "Rating",
        "description": "A rating of a subcomponent of rating certainty.",
        "type": "CodeableConcept",
        "array": true
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "A human-readable string to clarify or explain concepts about the resource.",
        "type": "Annotation",
        "array": true
      }
    },
    "backboneElement": true
  },
  "Encounter": {
    "display": "Encounter",
    "description": "An interaction between a patient and healthcare provider(s) for the purpose of providing healthcare service(s) or assessing the health status of a patient.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Identifier(s) by which this encounter is known.",
        "type": "Identifier",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "planned | arrived | triaged | in-progress | onleave | finished | cancelled +.",
        "type": "enum",
        "enumValues": [
          "planned",
          "arrived",
          "triaged",
          "in-progress",
          "onleave",
          "finished",
          "cancelled +"
        ]
      },
      "statusHistory": {
        "key": "statusHistory",
        "display": "Status History",
        "description": "The status history permits the encounter resource to contain the status history without needing to read through the historical versions of the resource, or even have the server store them.",
        "type": "Encounter_StatusHistory",
        "array": true
      },
      "class": {
        "key": "class",
        "display": "Class",
        "description": "Concepts representing classification of patient encounter such as ambulatory (outpatient), inpatient, emergency, home health or others due to local variations.",
        "type": "Coding"
      },
      "classHistory": {
        "key": "classHistory",
        "display": "Class History",
        "description": "The class history permits the tracking of the encounters transitions without needing to go  through the resource history.  This would be used for a case where an admission starts of as an emergency encounter, then transitions into an inpatient scenario. Doing this and not restarting a new encounter ensures that any lab/diagnostic results can more easily follow the patient and not require re-processing and not get lost or cancelled during a kind of discharge from emergency to inpatient.",
        "type": "Encounter_ClassHistory",
        "array": true
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Specific type of encounter (e.g. e-mail consultation, surgical day-care, skilled nursing, rehabilitation).",
        "type": "CodeableConcept",
        "array": true
      },
      "serviceType": {
        "key": "serviceType",
        "display": "Service Type",
        "description": "Broad categorization of the service that is to be provided (e.g. cardiology).",
        "type": "CodeableConcept"
      },
      "priority": {
        "key": "priority",
        "display": "Priority",
        "description": "Indicates the urgency of the encounter.",
        "type": "CodeableConcept"
      },
      "subject": {
        "key": "subject",
        "display": "Subject",
        "description": "The patient or group present at the encounter.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Group"
        ]
      },
      "episodeOfCare": {
        "key": "episodeOfCare",
        "display": "Episode Of Care",
        "description": "Where a specific encounter should be classified as a part of a specific episode(s) of care this field should be used. This association can facilitate grouping of related encounters together for a specific purpose, such as government reporting, issue tracking, association via a common problem.  The association is recorded on the encounter as these are typically created after the episode of care and grouped on entry rather than editing the episode of care to append another encounter to it (the episode of care could span years).",
        "type": "Reference",
        "targetProfile": [
          "EpisodeOfCare"
        ],
        "array": true
      },
      "basedOn": {
        "key": "basedOn",
        "display": "Based On",
        "description": "The request this encounter satisfies (e.g. incoming referral or procedure request).",
        "type": "Reference",
        "targetProfile": [
          "ServiceRequest"
        ],
        "array": true
      },
      "participant": {
        "key": "participant",
        "display": "Participant",
        "description": "The list of people responsible for providing the service.",
        "type": "Encounter_Participant",
        "array": true
      },
      "appointment": {
        "key": "appointment",
        "display": "Appointment",
        "description": "The appointment that scheduled this encounter.",
        "type": "Reference",
        "targetProfile": [
          "Appointment"
        ],
        "array": true
      },
      "period": {
        "key": "period",
        "display": "Period",
        "description": "The start and end time of the encounter.",
        "type": "Period"
      },
      "length": {
        "key": "length",
        "display": "Length",
        "description": "Quantity of time the encounter lasted. This excludes the time during leaves of absence.",
        "type": "Duration"
      },
      "reasonCode": {
        "key": "reasonCode",
        "display": "Reason Code",
        "description": "Reason the encounter takes place, expressed as a code. For admissions, this can be used for a coded admission diagnosis.",
        "type": "CodeableConcept",
        "array": true
      },
      "reasonReference": {
        "key": "reasonReference",
        "display": "Reason Reference",
        "description": "Reason the encounter takes place, expressed as a code. For admissions, this can be used for a coded admission diagnosis.",
        "type": "Reference",
        "targetProfile": [
          "Condition",
          "Procedure",
          "Observation",
          "ImmunizationRecommendation"
        ],
        "array": true
      },
      "diagnosis": {
        "key": "diagnosis",
        "display": "Diagnosis",
        "description": "The list of diagnosis relevant to this encounter.",
        "type": "Encounter_Diagnosis",
        "array": true
      },
      "account": {
        "key": "account",
        "display": "Account",
        "description": "The set of accounts that may be used for billing for this Encounter.",
        "type": "Reference",
        "targetProfile": [
          "Account"
        ],
        "array": true
      },
      "hospitalization": {
        "key": "hospitalization",
        "display": "Hospitalization",
        "description": "Details about the admission to a healthcare service.",
        "type": "Encounter_Hospitalization"
      },
      "location": {
        "key": "location",
        "display": "Location",
        "description": "List of locations where  the patient has been during this encounter.",
        "type": "Encounter_Location",
        "array": true
      },
      "serviceProvider": {
        "key": "serviceProvider",
        "display": "Service Provider",
        "description": "The organization that is primarily responsible for this Encounter's services. This MAY be the same as the organization on the Patient record, however it could be different, such as if the actor performing the services was from an external organization (which may be billed seperately) for an external consultation.  Refer to the example bundle showing an abbreviated set of Encounters for a colonoscopy.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "partOf": {
        "key": "partOf",
        "display": "Part Of",
        "description": "Another Encounter of which this encounter is a part of (administratively or in time).",
        "type": "Reference",
        "targetProfile": [
          "Encounter"
        ]
      }
    }
  },
  "Encounter_StatusHistory": {
    "display": "Encounter Status History",
    "description": "List of past encounter statuses",
    "properties": {
      "status": {
        "key": "status",
        "display": "Status",
        "description": "planned | arrived | triaged | in-progress | onleave | finished | cancelled +.",
        "type": "enum",
        "enumValues": [
          "planned",
          "arrived",
          "triaged",
          "in-progress",
          "onleave",
          "finished",
          "cancelled +"
        ]
      },
      "period": {
        "key": "period",
        "display": "Period",
        "description": "The time that the episode was in the specified status.",
        "type": "Period"
      }
    },
    "backboneElement": true
  },
  "Encounter_ClassHistory": {
    "display": "Encounter Class History",
    "description": "List of past encounter classes",
    "properties": {
      "class": {
        "key": "class",
        "display": "Class",
        "description": "inpatient | outpatient | ambulatory | emergency +.",
        "type": "Coding"
      },
      "period": {
        "key": "period",
        "display": "Period",
        "description": "The time that the episode was in the specified class.",
        "type": "Period"
      }
    },
    "backboneElement": true
  },
  "Encounter_Participant": {
    "display": "Encounter Participant",
    "description": "List of participants involved in the encounter",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Role of participant in encounter.",
        "type": "CodeableConcept",
        "array": true
      },
      "period": {
        "key": "period",
        "display": "Period",
        "description": "The period of time that the specified participant participated in the encounter. These can overlap or be sub-sets of the overall encounter's period.",
        "type": "Period"
      },
      "individual": {
        "key": "individual",
        "display": "Individual",
        "description": "Persons involved in the encounter other than the patient.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "RelatedPerson"
        ]
      }
    },
    "backboneElement": true
  },
  "Encounter_Diagnosis": {
    "display": "Encounter Diagnosis",
    "description": "The list of diagnosis relevant to this encounter",
    "properties": {
      "condition": {
        "key": "condition",
        "display": "Condition",
        "description": "Reason the encounter takes place, as specified using information from another resource. For admissions, this is the admission diagnosis. The indication will typically be a Condition (with other resources referenced in the evidence.detail), or a Procedure.",
        "type": "Reference",
        "targetProfile": [
          "Condition",
          "Procedure"
        ]
      },
      "use": {
        "key": "use",
        "display": "Use",
        "description": "Role that this diagnosis has within the encounter (e.g. admission, billing, discharge …).",
        "type": "CodeableConcept"
      },
      "rank": {
        "key": "rank",
        "display": "Rank",
        "description": "Ranking of the diagnosis (for each role type).",
        "type": "positiveInt"
      }
    },
    "backboneElement": true
  },
  "Encounter_Hospitalization": {
    "display": "Encounter Hospitalization",
    "description": "Details about the admission to a healthcare service",
    "properties": {
      "preAdmissionIdentifier": {
        "key": "preAdmissionIdentifier",
        "display": "Pre Admission Identifier",
        "description": "Pre-admission identifier.",
        "type": "Identifier"
      },
      "origin": {
        "key": "origin",
        "display": "Origin",
        "description": "The location/organization from which the patient came before admission.",
        "type": "Reference",
        "targetProfile": [
          "Location",
          "Organization"
        ]
      },
      "admitSource": {
        "key": "admitSource",
        "display": "Admit Source",
        "description": "From where patient was admitted (physician referral, transfer).",
        "type": "CodeableConcept"
      },
      "reAdmission": {
        "key": "reAdmission",
        "display": "Re Admission",
        "description": "Whether this hospitalization is a readmission and why if known.",
        "type": "CodeableConcept"
      },
      "dietPreference": {
        "key": "dietPreference",
        "display": "Diet Preference",
        "description": "Diet preferences reported by the patient.",
        "type": "CodeableConcept",
        "array": true
      },
      "specialCourtesy": {
        "key": "specialCourtesy",
        "display": "Special Courtesy",
        "description": "Special courtesies (VIP, board member).",
        "type": "CodeableConcept",
        "array": true
      },
      "specialArrangement": {
        "key": "specialArrangement",
        "display": "Special Arrangement",
        "description": "Any special requests that have been made for this hospitalization encounter, such as the provision of specific equipment or other things.",
        "type": "CodeableConcept",
        "array": true
      },
      "destination": {
        "key": "destination",
        "display": "Destination",
        "description": "Location/organization to which the patient is discharged.",
        "type": "Reference",
        "targetProfile": [
          "Location",
          "Organization"
        ]
      },
      "dischargeDisposition": {
        "key": "dischargeDisposition",
        "display": "Discharge Disposition",
        "description": "Category or kind of location after discharge.",
        "type": "CodeableConcept"
      }
    },
    "backboneElement": true
  },
  "Encounter_Location": {
    "display": "Encounter Location",
    "description": "List of locations where the patient has been",
    "properties": {
      "location": {
        "key": "location",
        "display": "Location",
        "description": "The location where the encounter takes place.",
        "type": "Reference",
        "targetProfile": [
          "Location"
        ]
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of the participants' presence at the specified location during the period specified. If the participant is no longer at the location, then the period will have an end date/time.",
        "type": "enum",
        "enumValues": [
          "planned",
          "active",
          "reserved",
          "completed"
        ]
      },
      "physicalType": {
        "key": "physicalType",
        "display": "Physical Type",
        "description": "This will be used to specify the required levels (bed/ward/room/etc.) desired to be recorded to simplify either messaging or query.",
        "type": "CodeableConcept"
      },
      "period": {
        "key": "period",
        "display": "Period",
        "description": "Time period during which the patient was present at the location.",
        "type": "Period"
      }
    },
    "backboneElement": true
  },
  "Endpoint": {
    "display": "Endpoint",
    "description": "The technical details of an endpoint that can be used for electronic services, such as for web services providing XDS.b or a REST endpoint for another FHIR server. This may include any security context information.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Identifier for the organization that is used to identify the endpoint across multiple disparate systems.",
        "type": "Identifier",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "active | suspended | error | off | test.",
        "type": "enum",
        "enumValues": [
          "active",
          "suspended",
          "error",
          "off",
          "entered-in-error",
          "test"
        ]
      },
      "connectionType": {
        "key": "connectionType",
        "display": "Connection Type",
        "description": "A coded value that represents the technical details of the usage of this endpoint, such as what WSDLs should be used in what way. (e.g. XDS.b/DICOM/cds-hook).",
        "type": "Coding"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A friendly name that this endpoint can be referred to with.",
        "type": "string"
      },
      "managingOrganization": {
        "key": "managingOrganization",
        "display": "Managing Organization",
        "description": "The organization that manages this endpoint (even if technically another organization is hosting this in the cloud, it is the organization associated with the data).",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "contact": {
        "key": "contact",
        "display": "Contact",
        "description": "Contact details for a human to contact about the subscription. The primary use of this for system administrator troubleshooting.",
        "type": "ContactPoint",
        "array": true
      },
      "period": {
        "key": "period",
        "display": "Period",
        "description": "The interval during which the endpoint is expected to be operational.",
        "type": "Period"
      },
      "payloadType": {
        "key": "payloadType",
        "display": "Payload Type",
        "description": "The payload type describes the acceptable content that can be communicated on the endpoint.",
        "type": "CodeableConcept",
        "array": true
      },
      "payloadMimeType": {
        "key": "payloadMimeType",
        "display": "Payload Mime Type",
        "description": "The mime type to send the payload in - e.g. application/fhir+xml, application/fhir+json. If the mime type is not specified, then the sender could send any content (including no content depending on the connectionType).",
        "type": "enum",
        "enumValues": [
          "Mimetype to send. If not specified, the content could be anything (including no payload, if the connectionType defined this)"
        ],
        "array": true
      },
      "address": {
        "key": "address",
        "display": "Address",
        "description": "The uri that describes the actual end-point to connect to.",
        "type": "url"
      },
      "header": {
        "key": "header",
        "display": "Header",
        "description": "Additional headers / information to send as part of the notification.",
        "type": "string",
        "array": true
      }
    }
  },
  "EnrollmentRequest": {
    "display": "EnrollmentRequest",
    "description": "This resource provides the insurance enrollment details to the insurer regarding a specified coverage.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "The Response business identifier.",
        "type": "Identifier",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of the resource instance.",
        "type": "enum",
        "enumValues": [
          "active",
          "cancelled",
          "draft",
          "entered-in-error"
        ]
      },
      "created": {
        "key": "created",
        "display": "Created",
        "description": "The date when this resource was created.",
        "type": "dateTime"
      },
      "insurer": {
        "key": "insurer",
        "display": "Insurer",
        "description": "The Insurer who is target  of the request.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "provider": {
        "key": "provider",
        "display": "Provider",
        "description": "The practitioner who is responsible for the services rendered to the patient.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization"
        ]
      },
      "candidate": {
        "key": "candidate",
        "display": "Candidate",
        "description": "Patient Resource.",
        "type": "Reference",
        "targetProfile": [
          "Patient"
        ]
      },
      "coverage": {
        "key": "coverage",
        "display": "Coverage",
        "description": "Reference to the program or plan identification, underwriter or payor.",
        "type": "Reference",
        "targetProfile": [
          "Coverage"
        ]
      }
    }
  },
  "EnrollmentResponse": {
    "display": "EnrollmentResponse",
    "description": "This resource provides enrollment and plan details from the processing of an EnrollmentRequest resource.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "The Response business identifier.",
        "type": "Identifier",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of the resource instance.",
        "type": "enum",
        "enumValues": [
          "active",
          "cancelled",
          "draft",
          "entered-in-error"
        ]
      },
      "request": {
        "key": "request",
        "display": "Request",
        "description": "Original request resource reference.",
        "type": "Reference",
        "targetProfile": [
          "EnrollmentRequest"
        ]
      },
      "outcome": {
        "key": "outcome",
        "display": "Outcome",
        "description": "Processing status: error, complete.",
        "type": "enum",
        "enumValues": [
          "queued",
          "complete",
          "error",
          "partial"
        ]
      },
      "disposition": {
        "key": "disposition",
        "display": "Disposition",
        "description": "A description of the status of the adjudication.",
        "type": "string"
      },
      "created": {
        "key": "created",
        "display": "Created",
        "description": "The date when the enclosed suite of services were performed or completed.",
        "type": "dateTime"
      },
      "organization": {
        "key": "organization",
        "display": "Organization",
        "description": "The Insurer who produced this adjudicated response.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "requestProvider": {
        "key": "requestProvider",
        "display": "Request Provider",
        "description": "The practitioner who is responsible for the services rendered to the patient.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization"
        ]
      }
    }
  },
  "EpisodeOfCare": {
    "display": "EpisodeOfCare",
    "description": "An association between a patient and an organization / healthcare provider(s) during which time encounters may occur. The managing organization assumes a level of responsibility for the patient during this time.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "The EpisodeOfCare may be known by different identifiers for different contexts of use, such as when an external agency is tracking the Episode for funding purposes.",
        "type": "Identifier",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "planned | waitlist | active | onhold | finished | cancelled.",
        "type": "enum",
        "enumValues": [
          "planned",
          "waitlist",
          "active",
          "onhold",
          "finished",
          "cancelled",
          "entered-in-error"
        ]
      },
      "statusHistory": {
        "key": "statusHistory",
        "display": "Status History",
        "description": "The history of statuses that the EpisodeOfCare has been through (without requiring processing the history of the resource).",
        "type": "EpisodeOfCare_StatusHistory",
        "array": true
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "A classification of the type of episode of care; e.g. specialist referral, disease management, type of funded care.",
        "type": "CodeableConcept",
        "array": true
      },
      "diagnosis": {
        "key": "diagnosis",
        "display": "Diagnosis",
        "description": "The list of diagnosis relevant to this episode of care.",
        "type": "EpisodeOfCare_Diagnosis",
        "array": true
      },
      "patient": {
        "key": "patient",
        "display": "Patient",
        "description": "The patient who is the focus of this episode of care.",
        "type": "Reference",
        "targetProfile": [
          "Patient"
        ]
      },
      "managingOrganization": {
        "key": "managingOrganization",
        "display": "Managing Organization",
        "description": "The organization that has assumed the specific responsibilities for the specified duration.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "period": {
        "key": "period",
        "display": "Period",
        "description": "The interval during which the managing organization assumes the defined responsibility.",
        "type": "Period"
      },
      "referralRequest": {
        "key": "referralRequest",
        "display": "Referral Request",
        "description": "Referral Request(s) that are fulfilled by this EpisodeOfCare, incoming referrals.",
        "type": "Reference",
        "targetProfile": [
          "ServiceRequest"
        ],
        "array": true
      },
      "careManager": {
        "key": "careManager",
        "display": "Care Manager",
        "description": "The practitioner that is the care manager/care coordinator for this patient.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole"
        ]
      },
      "team": {
        "key": "team",
        "display": "Team",
        "description": "The list of practitioners that may be facilitating this episode of care for specific purposes.",
        "type": "Reference",
        "targetProfile": [
          "CareTeam"
        ],
        "array": true
      },
      "account": {
        "key": "account",
        "display": "Account",
        "description": "The set of accounts that may be used for billing for this EpisodeOfCare.",
        "type": "Reference",
        "targetProfile": [
          "Account"
        ],
        "array": true
      }
    }
  },
  "EpisodeOfCare_StatusHistory": {
    "display": "Episode Of Care Status History",
    "description": "Past list of status codes (the current status may be included to cover the start date of the status)",
    "properties": {
      "status": {
        "key": "status",
        "display": "Status",
        "description": "planned | waitlist | active | onhold | finished | cancelled.",
        "type": "enum",
        "enumValues": [
          "planned",
          "waitlist",
          "active",
          "onhold",
          "finished",
          "cancelled",
          "entered-in-error"
        ]
      },
      "period": {
        "key": "period",
        "display": "Period",
        "description": "The period during this EpisodeOfCare that the specific status applied.",
        "type": "Period"
      }
    },
    "backboneElement": true
  },
  "EpisodeOfCare_Diagnosis": {
    "display": "Episode Of Care Diagnosis",
    "description": "The list of diagnosis relevant to this episode of care",
    "properties": {
      "condition": {
        "key": "condition",
        "display": "Condition",
        "description": "A list of conditions/problems/diagnoses that this episode of care is intended to be providing care for.",
        "type": "Reference",
        "targetProfile": [
          "Condition"
        ]
      },
      "role": {
        "key": "role",
        "display": "Role",
        "description": "Role that this diagnosis has within the episode of care (e.g. admission, billing, discharge …).",
        "type": "CodeableConcept"
      },
      "rank": {
        "key": "rank",
        "display": "Rank",
        "description": "Ranking of the diagnosis (for each role type).",
        "type": "positiveInt"
      }
    },
    "backboneElement": true
  },
  "EventDefinition": {
    "display": "EventDefinition",
    "description": "The EventDefinition resource provides a reusable description of when a particular event can occur.",
    "properties": {
      "url": {
        "key": "url",
        "display": "Url",
        "description": "An absolute URI that is used to identify this event definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this event definition is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the event definition is stored on different servers.",
        "type": "uri"
      },
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "A formal identifier that is used to identify this event definition when it is represented in other formats, or referenced in a specification, model, design or an instance.",
        "type": "Identifier",
        "array": true
      },
      "version": {
        "key": "version",
        "display": "Version",
        "description": "The identifier that is used to identify this version of the event definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the event definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
        "type": "string"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A natural language name identifying the event definition. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
        "type": "string"
      },
      "title": {
        "key": "title",
        "display": "Title",
        "description": "A short, descriptive, user-friendly title for the event definition.",
        "type": "string"
      },
      "subtitle": {
        "key": "subtitle",
        "display": "Subtitle",
        "description": "An explanatory or alternate title for the event definition giving additional information about its content.",
        "type": "string"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of this event definition. Enables tracking the life-cycle of the content.",
        "type": "enum",
        "enumValues": [
          "draft",
          "active",
          "retired",
          "unknown"
        ]
      },
      "experimental": {
        "key": "experimental",
        "display": "Experimental",
        "description": "A Boolean value to indicate that this event definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
        "type": "boolean"
      },
      "subject[x]": {
        "key": "subject[x]",
        "display": "Subject[x]",
        "description": "A code or group definition that describes the intended subject of the event definition.",
        "type": "CodeableConcept"
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "The date  (and optionally time) when the event definition was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the event definition changes.",
        "type": "dateTime"
      },
      "publisher": {
        "key": "publisher",
        "display": "Publisher",
        "description": "The name of the organization or individual that published the event definition.",
        "type": "string"
      },
      "contact": {
        "key": "contact",
        "display": "Contact",
        "description": "Contact details to assist a user in finding and communicating with the publisher.",
        "type": "ContactDetail",
        "array": true
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A free text natural language description of the event definition from a consumer's perspective.",
        "type": "markdown"
      },
      "useContext": {
        "key": "useContext",
        "display": "Use Context",
        "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate event definition instances.",
        "type": "UsageContext",
        "array": true
      },
      "jurisdiction": {
        "key": "jurisdiction",
        "display": "Jurisdiction",
        "description": "A legal or geographic region in which the event definition is intended to be used.",
        "type": "CodeableConcept",
        "array": true
      },
      "purpose": {
        "key": "purpose",
        "display": "Purpose",
        "description": "Explanation of why this event definition is needed and why it has been designed as it has.",
        "type": "markdown"
      },
      "usage": {
        "key": "usage",
        "display": "Usage",
        "description": "A detailed description of how the event definition is used from a clinical perspective.",
        "type": "string"
      },
      "copyright": {
        "key": "copyright",
        "display": "Copyright",
        "description": "A copyright statement relating to the event definition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the event definition.",
        "type": "markdown"
      },
      "approvalDate": {
        "key": "approvalDate",
        "display": "Approval Date",
        "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
        "type": "date"
      },
      "lastReviewDate": {
        "key": "lastReviewDate",
        "display": "Last Review Date",
        "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
        "type": "date"
      },
      "effectivePeriod": {
        "key": "effectivePeriod",
        "display": "Effective Period",
        "description": "The period during which the event definition content was or is planned to be in active use.",
        "type": "Period"
      },
      "topic": {
        "key": "topic",
        "display": "Topic",
        "description": "Descriptive topics related to the module. Topics provide a high-level categorization of the module that can be useful for filtering and searching.",
        "type": "CodeableConcept",
        "array": true
      },
      "author": {
        "key": "author",
        "display": "Author",
        "description": "An individiual or organization primarily involved in the creation and maintenance of the content.",
        "type": "ContactDetail",
        "array": true
      },
      "editor": {
        "key": "editor",
        "display": "Editor",
        "description": "An individual or organization primarily responsible for internal coherence of the content.",
        "type": "ContactDetail",
        "array": true
      },
      "reviewer": {
        "key": "reviewer",
        "display": "Reviewer",
        "description": "An individual or organization primarily responsible for review of some aspect of the content.",
        "type": "ContactDetail",
        "array": true
      },
      "endorser": {
        "key": "endorser",
        "display": "Endorser",
        "description": "An individual or organization responsible for officially endorsing the content for use in some setting.",
        "type": "ContactDetail",
        "array": true
      },
      "relatedArtifact": {
        "key": "relatedArtifact",
        "display": "Related Artifact",
        "description": "Related resources such as additional documentation, justification, or bibliographic references.",
        "type": "RelatedArtifact",
        "array": true
      },
      "trigger": {
        "key": "trigger",
        "display": "Trigger",
        "description": "The trigger element defines when the event occurs. If more than one trigger condition is specified, the event fires whenever any one of the trigger conditions is met.",
        "type": "TriggerDefinition",
        "array": true
      }
    }
  },
  "Evidence": {
    "display": "Evidence",
    "description": "The Evidence resource describes the conditional state (population and any exposures being compared within the population) and outcome (if specified) that the knowledge (evidence, assertion, recommendation) is about.",
    "properties": {
      "url": {
        "key": "url",
        "display": "Url",
        "description": "An absolute URI that is used to identify this evidence when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this evidence is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the evidence is stored on different servers.",
        "type": "uri"
      },
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "A formal identifier that is used to identify this evidence when it is represented in other formats, or referenced in a specification, model, design or an instance.",
        "type": "Identifier",
        "array": true
      },
      "version": {
        "key": "version",
        "display": "Version",
        "description": "The identifier that is used to identify this version of the evidence when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the evidence author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence. To provide a version consistent with the Decision Support Service specification, use the format Major.Minor.Revision (e.g. 1.0.0). For more information on versioning knowledge assets, refer to the Decision Support Service specification. Note that a version is required for non-experimental active artifacts.",
        "type": "string"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A natural language name identifying the evidence. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
        "type": "string"
      },
      "title": {
        "key": "title",
        "display": "Title",
        "description": "A short, descriptive, user-friendly title for the evidence.",
        "type": "string"
      },
      "shortTitle": {
        "key": "shortTitle",
        "display": "Short Title",
        "description": "The short title provides an alternate title for use in informal descriptive contexts where the full, formal title is not necessary.",
        "type": "string"
      },
      "subtitle": {
        "key": "subtitle",
        "display": "Subtitle",
        "description": "An explanatory or alternate title for the Evidence giving additional information about its content.",
        "type": "string"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of this evidence. Enables tracking the life-cycle of the content.",
        "type": "enum",
        "enumValues": [
          "draft",
          "active",
          "retired",
          "unknown"
        ]
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "The date  (and optionally time) when the evidence was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the evidence changes.",
        "type": "dateTime"
      },
      "publisher": {
        "key": "publisher",
        "display": "Publisher",
        "description": "The name of the organization or individual that published the evidence.",
        "type": "string"
      },
      "contact": {
        "key": "contact",
        "display": "Contact",
        "description": "Contact details to assist a user in finding and communicating with the publisher.",
        "type": "ContactDetail",
        "array": true
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A free text natural language description of the evidence from a consumer's perspective.",
        "type": "markdown"
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "A human-readable string to clarify or explain concepts about the resource.",
        "type": "Annotation",
        "array": true
      },
      "useContext": {
        "key": "useContext",
        "display": "Use Context",
        "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate evidence instances.",
        "type": "UsageContext",
        "array": true
      },
      "jurisdiction": {
        "key": "jurisdiction",
        "display": "Jurisdiction",
        "description": "A legal or geographic region in which the evidence is intended to be used.",
        "type": "CodeableConcept",
        "array": true
      },
      "copyright": {
        "key": "copyright",
        "display": "Copyright",
        "description": "A copyright statement relating to the evidence and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the evidence.",
        "type": "markdown"
      },
      "approvalDate": {
        "key": "approvalDate",
        "display": "Approval Date",
        "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
        "type": "date"
      },
      "lastReviewDate": {
        "key": "lastReviewDate",
        "display": "Last Review Date",
        "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
        "type": "date"
      },
      "effectivePeriod": {
        "key": "effectivePeriod",
        "display": "Effective Period",
        "description": "The period during which the evidence content was or is planned to be in active use.",
        "type": "Period"
      },
      "topic": {
        "key": "topic",
        "display": "Topic",
        "description": "Descriptive topics related to the content of the Evidence. Topics provide a high-level categorization grouping types of Evidences that can be useful for filtering and searching.",
        "type": "CodeableConcept",
        "array": true
      },
      "author": {
        "key": "author",
        "display": "Author",
        "description": "An individiual or organization primarily involved in the creation and maintenance of the content.",
        "type": "ContactDetail",
        "array": true
      },
      "editor": {
        "key": "editor",
        "display": "Editor",
        "description": "An individual or organization primarily responsible for internal coherence of the content.",
        "type": "ContactDetail",
        "array": true
      },
      "reviewer": {
        "key": "reviewer",
        "display": "Reviewer",
        "description": "An individual or organization primarily responsible for review of some aspect of the content.",
        "type": "ContactDetail",
        "array": true
      },
      "endorser": {
        "key": "endorser",
        "display": "Endorser",
        "description": "An individual or organization responsible for officially endorsing the content for use in some setting.",
        "type": "ContactDetail",
        "array": true
      },
      "relatedArtifact": {
        "key": "relatedArtifact",
        "display": "Related Artifact",
        "description": "Related artifacts such as additional documentation, justification, or bibliographic references.",
        "type": "RelatedArtifact",
        "array": true
      },
      "exposureBackground": {
        "key": "exposureBackground",
        "display": "Exposure Background",
        "description": "A reference to a EvidenceVariable resource that defines the population for the research.",
        "type": "Reference",
        "targetProfile": [
          "EvidenceVariable"
        ]
      },
      "exposureVariant": {
        "key": "exposureVariant",
        "display": "Exposure Variant",
        "description": "A reference to a EvidenceVariable resource that defines the exposure for the research.",
        "type": "Reference",
        "targetProfile": [
          "EvidenceVariable"
        ],
        "array": true
      },
      "outcome": {
        "key": "outcome",
        "display": "Outcome",
        "description": "A reference to a EvidenceVariable resomece that defines the outcome for the research.",
        "type": "Reference",
        "targetProfile": [
          "EvidenceVariable"
        ],
        "array": true
      }
    }
  },
  "EvidenceVariable": {
    "display": "EvidenceVariable",
    "description": "The EvidenceVariable resource describes a \"PICO\" element that knowledge (evidence, assertion, recommendation) is about.",
    "properties": {
      "url": {
        "key": "url",
        "display": "Url",
        "description": "An absolute URI that is used to identify this evidence variable when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this evidence variable is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the evidence variable is stored on different servers.",
        "type": "uri"
      },
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "A formal identifier that is used to identify this evidence variable when it is represented in other formats, or referenced in a specification, model, design or an instance.",
        "type": "Identifier",
        "array": true
      },
      "version": {
        "key": "version",
        "display": "Version",
        "description": "The identifier that is used to identify this version of the evidence variable when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the evidence variable author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence. To provide a version consistent with the Decision Support Service specification, use the format Major.Minor.Revision (e.g. 1.0.0). For more information on versioning knowledge assets, refer to the Decision Support Service specification. Note that a version is required for non-experimental active artifacts.",
        "type": "string"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A natural language name identifying the evidence variable. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
        "type": "string"
      },
      "title": {
        "key": "title",
        "display": "Title",
        "description": "A short, descriptive, user-friendly title for the evidence variable.",
        "type": "string"
      },
      "shortTitle": {
        "key": "shortTitle",
        "display": "Short Title",
        "description": "The short title provides an alternate title for use in informal descriptive contexts where the full, formal title is not necessary.",
        "type": "string"
      },
      "subtitle": {
        "key": "subtitle",
        "display": "Subtitle",
        "description": "An explanatory or alternate title for the EvidenceVariable giving additional information about its content.",
        "type": "string"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of this evidence variable. Enables tracking the life-cycle of the content.",
        "type": "enum",
        "enumValues": [
          "draft",
          "active",
          "retired",
          "unknown"
        ]
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "The date  (and optionally time) when the evidence variable was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the evidence variable changes.",
        "type": "dateTime"
      },
      "publisher": {
        "key": "publisher",
        "display": "Publisher",
        "description": "The name of the organization or individual that published the evidence variable.",
        "type": "string"
      },
      "contact": {
        "key": "contact",
        "display": "Contact",
        "description": "Contact details to assist a user in finding and communicating with the publisher.",
        "type": "ContactDetail",
        "array": true
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A free text natural language description of the evidence variable from a consumer's perspective.",
        "type": "markdown"
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "A human-readable string to clarify or explain concepts about the resource.",
        "type": "Annotation",
        "array": true
      },
      "useContext": {
        "key": "useContext",
        "display": "Use Context",
        "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate evidence variable instances.",
        "type": "UsageContext",
        "array": true
      },
      "jurisdiction": {
        "key": "jurisdiction",
        "display": "Jurisdiction",
        "description": "A legal or geographic region in which the evidence variable is intended to be used.",
        "type": "CodeableConcept",
        "array": true
      },
      "copyright": {
        "key": "copyright",
        "display": "Copyright",
        "description": "A copyright statement relating to the evidence variable and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the evidence variable.",
        "type": "markdown"
      },
      "approvalDate": {
        "key": "approvalDate",
        "display": "Approval Date",
        "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
        "type": "date"
      },
      "lastReviewDate": {
        "key": "lastReviewDate",
        "display": "Last Review Date",
        "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
        "type": "date"
      },
      "effectivePeriod": {
        "key": "effectivePeriod",
        "display": "Effective Period",
        "description": "The period during which the evidence variable content was or is planned to be in active use.",
        "type": "Period"
      },
      "topic": {
        "key": "topic",
        "display": "Topic",
        "description": "Descriptive topics related to the content of the EvidenceVariable. Topics provide a high-level categorization grouping types of EvidenceVariables that can be useful for filtering and searching.",
        "type": "CodeableConcept",
        "array": true
      },
      "author": {
        "key": "author",
        "display": "Author",
        "description": "An individiual or organization primarily involved in the creation and maintenance of the content.",
        "type": "ContactDetail",
        "array": true
      },
      "editor": {
        "key": "editor",
        "display": "Editor",
        "description": "An individual or organization primarily responsible for internal coherence of the content.",
        "type": "ContactDetail",
        "array": true
      },
      "reviewer": {
        "key": "reviewer",
        "display": "Reviewer",
        "description": "An individual or organization primarily responsible for review of some aspect of the content.",
        "type": "ContactDetail",
        "array": true
      },
      "endorser": {
        "key": "endorser",
        "display": "Endorser",
        "description": "An individual or organization responsible for officially endorsing the content for use in some setting.",
        "type": "ContactDetail",
        "array": true
      },
      "relatedArtifact": {
        "key": "relatedArtifact",
        "display": "Related Artifact",
        "description": "Related artifacts such as additional documentation, justification, or bibliographic references.",
        "type": "RelatedArtifact",
        "array": true
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The type of evidence element, a population, an exposure, or an outcome.",
        "type": "enum",
        "enumValues": [
          "dichotomous",
          "continuous",
          "descriptive"
        ]
      },
      "characteristic": {
        "key": "characteristic",
        "display": "Characteristic",
        "description": "A characteristic that defines the members of the evidence element. Multiple characteristics are applied with \"and\" semantics.",
        "type": "EvidenceVariable_Characteristic",
        "array": true
      }
    }
  },
  "EvidenceVariable_Characteristic": {
    "display": "Evidence Variable Characteristic",
    "description": "What defines the members of the evidence element",
    "properties": {
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A short, natural language description of the characteristic that could be used to communicate the criteria to an end-user.",
        "type": "string"
      },
      "definition[x]": {
        "key": "definition[x]",
        "display": "Definition[x]",
        "description": "Define members of the evidence element using Codes (such as condition, medication, or observation), Expressions ( using an expression language such as FHIRPath or CQL) or DataRequirements (such as Diabetes diagnosis onset in the last year).",
        "type": "Reference",
        "targetProfile": [
          "Group"
        ]
      },
      "usageContext": {
        "key": "usageContext",
        "display": "Usage Context",
        "description": "Use UsageContext to define the members of the population, such as Age Ranges, Genders, Settings.",
        "type": "UsageContext",
        "array": true
      },
      "exclude": {
        "key": "exclude",
        "display": "Exclude",
        "description": "When true, members with this characteristic are excluded from the element.",
        "type": "boolean"
      },
      "participantEffective[x]": {
        "key": "participantEffective[x]",
        "display": "Participant Effective[x]",
        "description": "Indicates what effective period the study covers.",
        "type": "dateTime"
      },
      "timeFromStart": {
        "key": "timeFromStart",
        "display": "Time From Start",
        "description": "Indicates duration from the participant's study entry.",
        "type": "Duration"
      },
      "groupMeasure": {
        "key": "groupMeasure",
        "display": "Group Measure",
        "description": "Indicates how elements are aggregated within the study effective period.",
        "type": "enum",
        "enumValues": [
          "mean",
          "median",
          "mean-of-mean",
          "mean-of-median",
          "median-of-mean",
          "median-of-median"
        ]
      }
    },
    "backboneElement": true
  },
  "ExampleScenario": {
    "display": "ExampleScenario",
    "description": "Example of workflow instance.",
    "properties": {
      "url": {
        "key": "url",
        "display": "Url",
        "description": "An absolute URI that is used to identify this example scenario when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this example scenario is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the example scenario is stored on different servers.",
        "type": "uri"
      },
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "A formal identifier that is used to identify this example scenario when it is represented in other formats, or referenced in a specification, model, design or an instance.",
        "type": "Identifier",
        "array": true
      },
      "version": {
        "key": "version",
        "display": "Version",
        "description": "The identifier that is used to identify this version of the example scenario when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the example scenario author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
        "type": "string"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A natural language name identifying the example scenario. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
        "type": "string"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of this example scenario. Enables tracking the life-cycle of the content.",
        "type": "enum",
        "enumValues": [
          "draft",
          "active",
          "retired",
          "unknown"
        ]
      },
      "experimental": {
        "key": "experimental",
        "display": "Experimental",
        "description": "A Boolean value to indicate that this example scenario is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
        "type": "boolean"
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "The date  (and optionally time) when the example scenario was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the example scenario changes. (e.g. the 'content logical definition').",
        "type": "dateTime"
      },
      "publisher": {
        "key": "publisher",
        "display": "Publisher",
        "description": "The name of the organization or individual that published the example scenario.",
        "type": "string"
      },
      "contact": {
        "key": "contact",
        "display": "Contact",
        "description": "Contact details to assist a user in finding and communicating with the publisher.",
        "type": "ContactDetail",
        "array": true
      },
      "useContext": {
        "key": "useContext",
        "display": "Use Context",
        "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate example scenario instances.",
        "type": "UsageContext",
        "array": true
      },
      "jurisdiction": {
        "key": "jurisdiction",
        "display": "Jurisdiction",
        "description": "A legal or geographic region in which the example scenario is intended to be used.",
        "type": "CodeableConcept",
        "array": true
      },
      "copyright": {
        "key": "copyright",
        "display": "Copyright",
        "description": "A copyright statement relating to the example scenario and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the example scenario.",
        "type": "markdown"
      },
      "purpose": {
        "key": "purpose",
        "display": "Purpose",
        "description": "What the example scenario resource is created for. This should not be used to show the business purpose of the scenario itself, but the purpose of documenting a scenario.",
        "type": "markdown"
      },
      "actor": {
        "key": "actor",
        "display": "Actor",
        "description": "Actor participating in the resource.",
        "type": "ExampleScenario_Actor",
        "array": true
      },
      "instance": {
        "key": "instance",
        "display": "Instance",
        "description": "Each resource and each version that is present in the workflow.",
        "type": "ExampleScenario_Instance",
        "array": true
      },
      "process": {
        "key": "process",
        "display": "Process",
        "description": "Each major process - a group of operations.",
        "type": "ExampleScenario_Process",
        "array": true
      },
      "workflow": {
        "key": "workflow",
        "display": "Workflow",
        "description": "Another nested workflow.",
        "type": "canonical",
        "array": true
      }
    }
  },
  "ExampleScenario_Actor": {
    "display": "Example Scenario Actor",
    "description": "Actor participating in the resource",
    "properties": {
      "actorId": {
        "key": "actorId",
        "display": "Actor Id",
        "description": "ID or acronym of actor.",
        "type": "string"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The type of actor - person or system.",
        "type": "enum",
        "enumValues": [
          "person",
          "entity"
        ]
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "The name of the actor as shown in the page.",
        "type": "string"
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "The description of the actor.",
        "type": "markdown"
      }
    },
    "backboneElement": true
  },
  "ExampleScenario_Instance": {
    "display": "Example Scenario Instance",
    "description": "Each resource and each version that is present in the workflow",
    "properties": {
      "resourceId": {
        "key": "resourceId",
        "display": "Resource Id",
        "description": "The id of the resource for referencing.",
        "type": "string"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A short name for the resource instance.",
        "type": "string"
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "Human-friendly description of the resource instance.",
        "type": "markdown"
      },
      "version": {
        "key": "version",
        "display": "Version",
        "description": "A specific version of the resource.",
        "type": "ExampleScenario_Instance_Version",
        "array": true
      },
      "containedInstance": {
        "key": "containedInstance",
        "display": "Contained Instance",
        "description": "Resources contained in the instance (e.g. the observations contained in a bundle).",
        "type": "ExampleScenario_Instance_ContainedInstance",
        "array": true
      }
    },
    "backboneElement": true
  },
  "ExampleScenario_Instance_Version": {
    "display": "Example Scenario Instance_ Version",
    "description": "A specific version of the resource",
    "properties": {
      "versionId": {
        "key": "versionId",
        "display": "Version Id",
        "description": "The identifier of a specific version of a resource.",
        "type": "string"
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "The description of the resource version.",
        "type": "markdown"
      }
    },
    "backboneElement": true
  },
  "ExampleScenario_Instance_ContainedInstance": {
    "display": "Example Scenario Instance_ Contained Instance",
    "description": "Resources contained in the instance",
    "properties": {
      "resourceId": {
        "key": "resourceId",
        "display": "Resource Id",
        "description": "Each resource contained in the instance.",
        "type": "string"
      },
      "versionId": {
        "key": "versionId",
        "display": "Version Id",
        "description": "A specific version of a resource contained in the instance.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "ExampleScenario_Process": {
    "display": "Example Scenario Process",
    "description": "Each major process - a group of operations",
    "properties": {
      "title": {
        "key": "title",
        "display": "Title",
        "description": "The diagram title of the group of operations.",
        "type": "string"
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A longer description of the group of operations.",
        "type": "markdown"
      },
      "preConditions": {
        "key": "preConditions",
        "display": "Pre Conditions",
        "description": "Description of initial status before the process starts.",
        "type": "markdown"
      },
      "postConditions": {
        "key": "postConditions",
        "display": "Post Conditions",
        "description": "Description of final status after the process ends.",
        "type": "markdown"
      },
      "step": {
        "key": "step",
        "display": "Step",
        "description": "Each step of the process.",
        "type": "ExampleScenario_Process_Step",
        "array": true
      }
    },
    "backboneElement": true
  },
  "ExampleScenario_Process_Step": {
    "display": "Example Scenario Process_ Step",
    "description": "Each step of the process",
    "properties": {
      "process": {
        "key": "process",
        "display": "Process",
        "description": "Nested process.",
        "type": "UNKNOWN"
      },
      "pause": {
        "key": "pause",
        "display": "Pause",
        "description": "If there is a pause in the flow.",
        "type": "boolean"
      },
      "operation": {
        "key": "operation",
        "display": "Operation",
        "description": "Each interaction or action.",
        "type": "ExampleScenario_Process_Step_Operation"
      },
      "alternative": {
        "key": "alternative",
        "display": "Alternative",
        "description": "Indicates an alternative step that can be taken instead of the operations on the base step in exceptional/atypical circumstances.",
        "type": "ExampleScenario_Process_Step_Alternative",
        "array": true
      }
    },
    "backboneElement": true
  },
  "ExampleScenario_Process_Step_Operation": {
    "display": "Example Scenario Process_ Step_ Operation",
    "description": "Each interaction or action",
    "properties": {
      "number": {
        "key": "number",
        "display": "Number",
        "description": "The sequential number of the interaction, e.g. 1.2.5.",
        "type": "string"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The type of operation - CRUD.",
        "type": "string"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "The human-friendly name of the interaction.",
        "type": "string"
      },
      "initiator": {
        "key": "initiator",
        "display": "Initiator",
        "description": "Who starts the transaction.",
        "type": "string"
      },
      "receiver": {
        "key": "receiver",
        "display": "Receiver",
        "description": "Who receives the transaction.",
        "type": "string"
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A comment to be inserted in the diagram.",
        "type": "markdown"
      },
      "initiatorActive": {
        "key": "initiatorActive",
        "display": "Initiator Active",
        "description": "Whether the initiator is deactivated right after the transaction.",
        "type": "boolean"
      },
      "receiverActive": {
        "key": "receiverActive",
        "display": "Receiver Active",
        "description": "Whether the receiver is deactivated right after the transaction.",
        "type": "boolean"
      },
      "request": {
        "key": "request",
        "display": "Request",
        "description": "Each resource instance used by the initiator.",
        "type": "UNKNOWN"
      },
      "response": {
        "key": "response",
        "display": "Response",
        "description": "Each resource instance used by the responder.",
        "type": "UNKNOWN"
      }
    },
    "backboneElement": true
  },
  "ExampleScenario_Process_Step_Alternative": {
    "display": "Example Scenario Process_ Step_ Alternative",
    "description": "Alternate non-typical step action",
    "properties": {
      "title": {
        "key": "title",
        "display": "Title",
        "description": "The label to display for the alternative that gives a sense of the circumstance in which the alternative should be invoked.",
        "type": "string"
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A human-readable description of the alternative explaining when the alternative should occur rather than the base step.",
        "type": "markdown"
      },
      "step": {
        "key": "step",
        "display": "Step",
        "description": "What happens in each alternative option.",
        "type": "UNKNOWN"
      }
    },
    "backboneElement": true
  },
  "ExplanationOfBenefit": {
    "display": "ExplanationOfBenefit",
    "description": "This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "A unique identifier assigned to this explanation of benefit.",
        "type": "Identifier",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of the resource instance.",
        "type": "enum",
        "enumValues": [
          "active",
          "cancelled",
          "draft",
          "entered-in-error"
        ]
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The category of claim, e.g. oral, pharmacy, vision, institutional, professional.",
        "type": "CodeableConcept"
      },
      "subType": {
        "key": "subType",
        "display": "Sub Type",
        "description": "A finer grained suite of claim type codes which may convey additional information such as Inpatient vs Outpatient and/or a specialty service.",
        "type": "CodeableConcept"
      },
      "use": {
        "key": "use",
        "display": "Use",
        "description": "A code to indicate whether the nature of the request is: to request adjudication of products and services previously rendered; or requesting authorization and adjudication for provision in the future; or requesting the non-binding adjudication of the listed products and services which could be provided in the future.",
        "type": "enum",
        "enumValues": [
          "claim",
          "preauthorization",
          "predetermination"
        ]
      },
      "patient": {
        "key": "patient",
        "display": "Patient",
        "description": "The party to whom the professional services and/or products have been supplied or are being considered and for whom actual for forecast reimbursement is sought.",
        "type": "Reference",
        "targetProfile": [
          "Patient"
        ]
      },
      "billablePeriod": {
        "key": "billablePeriod",
        "display": "Billable Period",
        "description": "The period for which charges are being submitted.",
        "type": "Period"
      },
      "created": {
        "key": "created",
        "display": "Created",
        "description": "The date this resource was created.",
        "type": "dateTime"
      },
      "enterer": {
        "key": "enterer",
        "display": "Enterer",
        "description": "Individual who created the claim, predetermination or preauthorization.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole"
        ]
      },
      "insurer": {
        "key": "insurer",
        "display": "Insurer",
        "description": "The party responsible for authorization, adjudication and reimbursement.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "provider": {
        "key": "provider",
        "display": "Provider",
        "description": "The provider which is responsible for the claim, predetermination or preauthorization.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization"
        ]
      },
      "priority": {
        "key": "priority",
        "display": "Priority",
        "description": "The provider-required urgency of processing the request. Typical values include: stat, routine deferred.",
        "type": "CodeableConcept"
      },
      "fundsReserveRequested": {
        "key": "fundsReserveRequested",
        "display": "Funds Reserve Requested",
        "description": "A code to indicate whether and for whom funds are to be reserved for future claims.",
        "type": "CodeableConcept"
      },
      "fundsReserve": {
        "key": "fundsReserve",
        "display": "Funds Reserve",
        "description": "A code, used only on a response to a preauthorization, to indicate whether the benefits payable have been reserved and for whom.",
        "type": "CodeableConcept"
      },
      "related": {
        "key": "related",
        "display": "Related",
        "description": "Other claims which are related to this claim such as prior submissions or claims for related services or for the same event.",
        "type": "ExplanationOfBenefit_Related",
        "array": true
      },
      "prescription": {
        "key": "prescription",
        "display": "Prescription",
        "description": "Prescription to support the dispensing of pharmacy, device or vision products.",
        "type": "Reference",
        "targetProfile": [
          "MedicationRequest",
          "VisionPrescription"
        ]
      },
      "originalPrescription": {
        "key": "originalPrescription",
        "display": "Original Prescription",
        "description": "Original prescription which has been superseded by this prescription to support the dispensing of pharmacy services, medications or products.",
        "type": "Reference",
        "targetProfile": [
          "MedicationRequest"
        ]
      },
      "payee": {
        "key": "payee",
        "display": "Payee",
        "description": "The party to be reimbursed for cost of the products and services according to the terms of the policy.",
        "type": "ExplanationOfBenefit_Payee"
      },
      "referral": {
        "key": "referral",
        "display": "Referral",
        "description": "A reference to a referral resource.",
        "type": "Reference",
        "targetProfile": [
          "ServiceRequest"
        ]
      },
      "facility": {
        "key": "facility",
        "display": "Facility",
        "description": "Facility where the services were provided.",
        "type": "Reference",
        "targetProfile": [
          "Location"
        ]
      },
      "claim": {
        "key": "claim",
        "display": "Claim",
        "description": "The business identifier for the instance of the adjudication request: claim predetermination or preauthorization.",
        "type": "Reference",
        "targetProfile": [
          "Claim"
        ]
      },
      "claimResponse": {
        "key": "claimResponse",
        "display": "Claim Response",
        "description": "The business identifier for the instance of the adjudication response: claim, predetermination or preauthorization response.",
        "type": "Reference",
        "targetProfile": [
          "ClaimResponse"
        ]
      },
      "outcome": {
        "key": "outcome",
        "display": "Outcome",
        "description": "The outcome of the claim, predetermination, or preauthorization processing.",
        "type": "enum",
        "enumValues": [
          "queued",
          "complete",
          "error",
          "partial"
        ]
      },
      "disposition": {
        "key": "disposition",
        "display": "Disposition",
        "description": "A human readable description of the status of the adjudication.",
        "type": "string"
      },
      "preAuthRef": {
        "key": "preAuthRef",
        "display": "Pre Auth Ref",
        "description": "Reference from the Insurer which is used in later communications which refers to this adjudication.",
        "type": "string",
        "array": true
      },
      "preAuthRefPeriod": {
        "key": "preAuthRefPeriod",
        "display": "Pre Auth Ref Period",
        "description": "The timeframe during which the supplied preauthorization reference may be quoted on claims to obtain the adjudication as provided.",
        "type": "Period",
        "array": true
      },
      "careTeam": {
        "key": "careTeam",
        "display": "Care Team",
        "description": "The members of the team who provided the products and services.",
        "type": "ExplanationOfBenefit_CareTeam",
        "array": true
      },
      "supportingInfo": {
        "key": "supportingInfo",
        "display": "Supporting Info",
        "description": "Additional information codes regarding exceptions, special considerations, the condition, situation, prior or concurrent issues.",
        "type": "ExplanationOfBenefit_SupportingInfo",
        "array": true
      },
      "diagnosis": {
        "key": "diagnosis",
        "display": "Diagnosis",
        "description": "Information about diagnoses relevant to the claim items.",
        "type": "ExplanationOfBenefit_Diagnosis",
        "array": true
      },
      "procedure": {
        "key": "procedure",
        "display": "Procedure",
        "description": "Procedures performed on the patient relevant to the billing items with the claim.",
        "type": "ExplanationOfBenefit_Procedure",
        "array": true
      },
      "precedence": {
        "key": "precedence",
        "display": "Precedence",
        "description": "This indicates the relative order of a series of EOBs related to different coverages for the same suite of services.",
        "type": "positiveInt"
      },
      "insurance": {
        "key": "insurance",
        "display": "Insurance",
        "description": "Financial instruments for reimbursement for the health care products and services specified on the claim.",
        "type": "ExplanationOfBenefit_Insurance",
        "array": true
      },
      "accident": {
        "key": "accident",
        "display": "Accident",
        "description": "Details of a accident which resulted in injuries which required the products and services listed in the claim.",
        "type": "ExplanationOfBenefit_Accident"
      },
      "item": {
        "key": "item",
        "display": "Item",
        "description": "A claim line. Either a simple (a product or service) or a 'group' of details which can also be a simple items or groups of sub-details.",
        "type": "ExplanationOfBenefit_Item",
        "array": true
      },
      "addItem": {
        "key": "addItem",
        "display": "Add Item",
        "description": "The first-tier service adjudications for payor added product or service lines.",
        "type": "ExplanationOfBenefit_AddItem",
        "array": true
      },
      "adjudication": {
        "key": "adjudication",
        "display": "Adjudication",
        "description": "The adjudication results which are presented at the header level rather than at the line-item or add-item levels.",
        "type": "UNKNOWN"
      },
      "total": {
        "key": "total",
        "display": "Total",
        "description": "Categorized monetary totals for the adjudication.",
        "type": "ExplanationOfBenefit_Total",
        "array": true
      },
      "payment": {
        "key": "payment",
        "display": "Payment",
        "description": "Payment details for the adjudication of the claim.",
        "type": "ExplanationOfBenefit_Payment"
      },
      "formCode": {
        "key": "formCode",
        "display": "Form Code",
        "description": "A code for the form to be used for printing the content.",
        "type": "CodeableConcept"
      },
      "form": {
        "key": "form",
        "display": "Form",
        "description": "The actual form, by reference or inclusion, for printing the content or an EOB.",
        "type": "Attachment"
      },
      "processNote": {
        "key": "processNote",
        "display": "Process Note",
        "description": "A note that describes or explains adjudication results in a human readable form.",
        "type": "ExplanationOfBenefit_ProcessNote",
        "array": true
      },
      "benefitPeriod": {
        "key": "benefitPeriod",
        "display": "Benefit Period",
        "description": "The term of the benefits documented in this response.",
        "type": "Period"
      },
      "benefitBalance": {
        "key": "benefitBalance",
        "display": "Benefit Balance",
        "description": "Balance by Benefit Category.",
        "type": "ExplanationOfBenefit_BenefitBalance",
        "array": true
      }
    }
  },
  "ExplanationOfBenefit_Related": {
    "display": "Explanation Of Benefit Related",
    "description": "Prior or corollary claims",
    "properties": {
      "claim": {
        "key": "claim",
        "display": "Claim",
        "description": "Reference to a related claim.",
        "type": "Reference",
        "targetProfile": [
          "Claim"
        ]
      },
      "relationship": {
        "key": "relationship",
        "display": "Relationship",
        "description": "A code to convey how the claims are related.",
        "type": "CodeableConcept"
      },
      "reference": {
        "key": "reference",
        "display": "Reference",
        "description": "An alternate organizational reference to the case or file to which this particular claim pertains.",
        "type": "Identifier"
      }
    },
    "backboneElement": true
  },
  "ExplanationOfBenefit_Payee": {
    "display": "Explanation Of Benefit Payee",
    "description": "Recipient of benefits payable",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Type of Party to be reimbursed: Subscriber, provider, other.",
        "type": "CodeableConcept"
      },
      "party": {
        "key": "party",
        "display": "Party",
        "description": "Reference to the individual or organization to whom any payment will be made.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization",
          "Patient",
          "RelatedPerson"
        ]
      }
    },
    "backboneElement": true
  },
  "ExplanationOfBenefit_CareTeam": {
    "display": "Explanation Of Benefit Care Team",
    "description": "Care Team members",
    "properties": {
      "sequence": {
        "key": "sequence",
        "display": "Sequence",
        "description": "A number to uniquely identify care team entries.",
        "type": "positiveInt"
      },
      "provider": {
        "key": "provider",
        "display": "Provider",
        "description": "Member of the team who provided the product or service.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization"
        ]
      },
      "responsible": {
        "key": "responsible",
        "display": "Responsible",
        "description": "The party who is billing and/or responsible for the claimed products or services.",
        "type": "boolean"
      },
      "role": {
        "key": "role",
        "display": "Role",
        "description": "The lead, assisting or supervising practitioner and their discipline if a multidisciplinary team.",
        "type": "CodeableConcept"
      },
      "qualification": {
        "key": "qualification",
        "display": "Qualification",
        "description": "The qualification of the practitioner which is applicable for this service.",
        "type": "CodeableConcept"
      }
    },
    "backboneElement": true
  },
  "ExplanationOfBenefit_SupportingInfo": {
    "display": "Explanation Of Benefit Supporting Info",
    "description": "Supporting information",
    "properties": {
      "sequence": {
        "key": "sequence",
        "display": "Sequence",
        "description": "A number to uniquely identify supporting information entries.",
        "type": "positiveInt"
      },
      "category": {
        "key": "category",
        "display": "Category",
        "description": "The general class of the information supplied: information; exception; accident, employment; onset, etc.",
        "type": "CodeableConcept"
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient  for which care is sought.",
        "type": "CodeableConcept"
      },
      "timing[x]": {
        "key": "timing[x]",
        "display": "Timing[x]",
        "description": "The date when or period to which this information refers.",
        "type": "date"
      },
      "value[x]": {
        "key": "value[x]",
        "display": "Value[x]",
        "description": "Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.",
        "type": "boolean"
      },
      "reason": {
        "key": "reason",
        "display": "Reason",
        "description": "Provides the reason in the situation where a reason code is required in addition to the content.",
        "type": "Coding"
      }
    },
    "backboneElement": true
  },
  "ExplanationOfBenefit_Diagnosis": {
    "display": "Explanation Of Benefit Diagnosis",
    "description": "Pertinent diagnosis information",
    "properties": {
      "sequence": {
        "key": "sequence",
        "display": "Sequence",
        "description": "A number to uniquely identify diagnosis entries.",
        "type": "positiveInt"
      },
      "diagnosis[x]": {
        "key": "diagnosis[x]",
        "display": "Diagnosis[x]",
        "description": "The nature of illness or problem in a coded form or as a reference to an external defined Condition.",
        "type": "CodeableConcept"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "When the condition was observed or the relative ranking.",
        "type": "CodeableConcept",
        "array": true
      },
      "onAdmission": {
        "key": "onAdmission",
        "display": "On Admission",
        "description": "Indication of whether the diagnosis was present on admission to a facility.",
        "type": "CodeableConcept"
      },
      "packageCode": {
        "key": "packageCode",
        "display": "Package Code",
        "description": "A package billing code or bundle code used to group products and services to a particular health condition (such as heart attack) which is based on a predetermined grouping code system.",
        "type": "CodeableConcept"
      }
    },
    "backboneElement": true
  },
  "ExplanationOfBenefit_Procedure": {
    "display": "Explanation Of Benefit Procedure",
    "description": "Clinical procedures performed",
    "properties": {
      "sequence": {
        "key": "sequence",
        "display": "Sequence",
        "description": "A number to uniquely identify procedure entries.",
        "type": "positiveInt"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "When the condition was observed or the relative ranking.",
        "type": "CodeableConcept",
        "array": true
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "Date and optionally time the procedure was performed.",
        "type": "dateTime"
      },
      "procedure[x]": {
        "key": "procedure[x]",
        "display": "Procedure[x]",
        "description": "The code or reference to a Procedure resource which identifies the clinical intervention performed.",
        "type": "CodeableConcept"
      },
      "udi": {
        "key": "udi",
        "display": "Udi",
        "description": "Unique Device Identifiers associated with this line item.",
        "type": "Reference",
        "targetProfile": [
          "Device"
        ],
        "array": true
      }
    },
    "backboneElement": true
  },
  "ExplanationOfBenefit_Insurance": {
    "display": "Explanation Of Benefit Insurance",
    "description": "Patient insurance information",
    "properties": {
      "focal": {
        "key": "focal",
        "display": "Focal",
        "description": "A flag to indicate that this Coverage is to be used for adjudication of this claim when set to true.",
        "type": "boolean"
      },
      "coverage": {
        "key": "coverage",
        "display": "Coverage",
        "description": "Reference to the insurance card level information contained in the Coverage resource. The coverage issuing insurer will use these details to locate the patient's actual coverage within the insurer's information system.",
        "type": "Reference",
        "targetProfile": [
          "Coverage"
        ]
      },
      "preAuthRef": {
        "key": "preAuthRef",
        "display": "Pre Auth Ref",
        "description": "Reference numbers previously provided by the insurer to the provider to be quoted on subsequent claims containing services or products related to the prior authorization.",
        "type": "string",
        "array": true
      }
    },
    "backboneElement": true
  },
  "ExplanationOfBenefit_Accident": {
    "display": "Explanation Of Benefit Accident",
    "description": "Details of the event",
    "properties": {
      "date": {
        "key": "date",
        "display": "Date",
        "description": "Date of an accident event  related to the products and services contained in the claim.",
        "type": "date"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The type or context of the accident event for the purposes of selection of potential insurance coverages and determination of coordination between insurers.",
        "type": "CodeableConcept"
      },
      "location[x]": {
        "key": "location[x]",
        "display": "Location[x]",
        "description": "The physical location of the accident event.",
        "type": "Address"
      }
    },
    "backboneElement": true
  },
  "ExplanationOfBenefit_Item": {
    "display": "Explanation Of Benefit Item",
    "description": "Product or service provided",
    "properties": {
      "sequence": {
        "key": "sequence",
        "display": "Sequence",
        "description": "A number to uniquely identify item entries.",
        "type": "positiveInt"
      },
      "careTeamSequence": {
        "key": "careTeamSequence",
        "display": "Care Team Sequence",
        "description": "Care team members related to this service or product.",
        "type": "positiveInt",
        "array": true
      },
      "diagnosisSequence": {
        "key": "diagnosisSequence",
        "display": "Diagnosis Sequence",
        "description": "Diagnoses applicable for this service or product.",
        "type": "positiveInt",
        "array": true
      },
      "procedureSequence": {
        "key": "procedureSequence",
        "display": "Procedure Sequence",
        "description": "Procedures applicable for this service or product.",
        "type": "positiveInt",
        "array": true
      },
      "informationSequence": {
        "key": "informationSequence",
        "display": "Information Sequence",
        "description": "Exceptions, special conditions and supporting information applicable for this service or product.",
        "type": "positiveInt",
        "array": true
      },
      "revenue": {
        "key": "revenue",
        "display": "Revenue",
        "description": "The type of revenue or cost center providing the product and/or service.",
        "type": "CodeableConcept"
      },
      "category": {
        "key": "category",
        "display": "Category",
        "description": "Code to identify the general type of benefits under which products and services are provided.",
        "type": "CodeableConcept"
      },
      "productOrService": {
        "key": "productOrService",
        "display": "Product Or Service",
        "description": "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.",
        "type": "CodeableConcept"
      },
      "modifier": {
        "key": "modifier",
        "display": "Modifier",
        "description": "Item typification or modifiers codes to convey additional context for the product or service.",
        "type": "CodeableConcept",
        "array": true
      },
      "programCode": {
        "key": "programCode",
        "display": "Program Code",
        "description": "Identifies the program under which this may be recovered.",
        "type": "CodeableConcept",
        "array": true
      },
      "serviced[x]": {
        "key": "serviced[x]",
        "display": "Serviced[x]",
        "description": "The date or dates when the service or product was supplied, performed or completed.",
        "type": "date"
      },
      "location[x]": {
        "key": "location[x]",
        "display": "Location[x]",
        "description": "Where the product or service was provided.",
        "type": "CodeableConcept"
      },
      "quantity": {
        "key": "quantity",
        "display": "Quantity",
        "description": "The number of repetitions of a service or product.",
        "type": "Quantity"
      },
      "unitPrice": {
        "key": "unitPrice",
        "display": "Unit Price",
        "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
        "type": "Money"
      },
      "factor": {
        "key": "factor",
        "display": "Factor",
        "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
        "type": "decimal"
      },
      "net": {
        "key": "net",
        "display": "Net",
        "description": "The quantity times the unit price for an additional service or product or charge.",
        "type": "Money"
      },
      "udi": {
        "key": "udi",
        "display": "Udi",
        "description": "Unique Device Identifiers associated with this line item.",
        "type": "Reference",
        "targetProfile": [
          "Device"
        ],
        "array": true
      },
      "bodySite": {
        "key": "bodySite",
        "display": "Body Site",
        "description": "Physical service site on the patient (limb, tooth, etc.).",
        "type": "CodeableConcept"
      },
      "subSite": {
        "key": "subSite",
        "display": "Sub Site",
        "description": "A region or surface of the bodySite, e.g. limb region or tooth surface(s).",
        "type": "CodeableConcept",
        "array": true
      },
      "encounter": {
        "key": "encounter",
        "display": "Encounter",
        "description": "A billed item may include goods or services provided in multiple encounters.",
        "type": "Reference",
        "targetProfile": [
          "Encounter"
        ],
        "array": true
      },
      "noteNumber": {
        "key": "noteNumber",
        "display": "Note Number",
        "description": "The numbers associated with notes below which apply to the adjudication of this item.",
        "type": "positiveInt",
        "array": true
      },
      "adjudication": {
        "key": "adjudication",
        "display": "Adjudication",
        "description": "If this item is a group then the values here are a summary of the adjudication of the detail items. If this item is a simple product or service then this is the result of the adjudication of this item.",
        "type": "ExplanationOfBenefit_Item_Adjudication",
        "array": true
      },
      "detail": {
        "key": "detail",
        "display": "Detail",
        "description": "Second-tier of goods and services.",
        "type": "ExplanationOfBenefit_Item_Detail",
        "array": true
      }
    },
    "backboneElement": true
  },
  "ExplanationOfBenefit_Item_Adjudication": {
    "display": "Explanation Of Benefit Item_ Adjudication",
    "description": "Adjudication details",
    "properties": {
      "category": {
        "key": "category",
        "display": "Category",
        "description": "A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in-aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.",
        "type": "CodeableConcept"
      },
      "reason": {
        "key": "reason",
        "display": "Reason",
        "description": "A code supporting the understanding of the adjudication result and explaining variance from expected amount.",
        "type": "CodeableConcept"
      },
      "amount": {
        "key": "amount",
        "display": "Amount",
        "description": "Monetary amount associated with the category.",
        "type": "Money"
      },
      "value": {
        "key": "value",
        "display": "Value",
        "description": "A non-monetary value associated with the category. Mutually exclusive to the amount element above.",
        "type": "decimal"
      }
    },
    "backboneElement": true
  },
  "ExplanationOfBenefit_Item_Detail": {
    "display": "Explanation Of Benefit Item_ Detail",
    "description": "Additional items",
    "properties": {
      "sequence": {
        "key": "sequence",
        "display": "Sequence",
        "description": "A claim detail line. Either a simple (a product or service) or a 'group' of sub-details which are simple items.",
        "type": "positiveInt"
      },
      "revenue": {
        "key": "revenue",
        "display": "Revenue",
        "description": "The type of revenue or cost center providing the product and/or service.",
        "type": "CodeableConcept"
      },
      "category": {
        "key": "category",
        "display": "Category",
        "description": "Code to identify the general type of benefits under which products and services are provided.",
        "type": "CodeableConcept"
      },
      "productOrService": {
        "key": "productOrService",
        "display": "Product Or Service",
        "description": "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.",
        "type": "CodeableConcept"
      },
      "modifier": {
        "key": "modifier",
        "display": "Modifier",
        "description": "Item typification or modifiers codes to convey additional context for the product or service.",
        "type": "CodeableConcept",
        "array": true
      },
      "programCode": {
        "key": "programCode",
        "display": "Program Code",
        "description": "Identifies the program under which this may be recovered.",
        "type": "CodeableConcept",
        "array": true
      },
      "quantity": {
        "key": "quantity",
        "display": "Quantity",
        "description": "The number of repetitions of a service or product.",
        "type": "Quantity"
      },
      "unitPrice": {
        "key": "unitPrice",
        "display": "Unit Price",
        "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
        "type": "Money"
      },
      "factor": {
        "key": "factor",
        "display": "Factor",
        "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
        "type": "decimal"
      },
      "net": {
        "key": "net",
        "display": "Net",
        "description": "The quantity times the unit price for an additional service or product or charge.",
        "type": "Money"
      },
      "udi": {
        "key": "udi",
        "display": "Udi",
        "description": "Unique Device Identifiers associated with this line item.",
        "type": "Reference",
        "targetProfile": [
          "Device"
        ],
        "array": true
      },
      "noteNumber": {
        "key": "noteNumber",
        "display": "Note Number",
        "description": "The numbers associated with notes below which apply to the adjudication of this item.",
        "type": "positiveInt",
        "array": true
      },
      "adjudication": {
        "key": "adjudication",
        "display": "Adjudication",
        "description": "The adjudication results.",
        "type": "UNKNOWN"
      },
      "subDetail": {
        "key": "subDetail",
        "display": "Sub Detail",
        "description": "Third-tier of goods and services.",
        "type": "ExplanationOfBenefit_Item_Detail_SubDetail",
        "array": true
      }
    },
    "backboneElement": true
  },
  "ExplanationOfBenefit_Item_Detail_SubDetail": {
    "display": "Explanation Of Benefit Item_ Detail_ Sub Detail",
    "description": "Additional items",
    "properties": {
      "sequence": {
        "key": "sequence",
        "display": "Sequence",
        "description": "A claim detail line. Either a simple (a product or service) or a 'group' of sub-details which are simple items.",
        "type": "positiveInt"
      },
      "revenue": {
        "key": "revenue",
        "display": "Revenue",
        "description": "The type of revenue or cost center providing the product and/or service.",
        "type": "CodeableConcept"
      },
      "category": {
        "key": "category",
        "display": "Category",
        "description": "Code to identify the general type of benefits under which products and services are provided.",
        "type": "CodeableConcept"
      },
      "productOrService": {
        "key": "productOrService",
        "display": "Product Or Service",
        "description": "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.",
        "type": "CodeableConcept"
      },
      "modifier": {
        "key": "modifier",
        "display": "Modifier",
        "description": "Item typification or modifiers codes to convey additional context for the product or service.",
        "type": "CodeableConcept",
        "array": true
      },
      "programCode": {
        "key": "programCode",
        "display": "Program Code",
        "description": "Identifies the program under which this may be recovered.",
        "type": "CodeableConcept",
        "array": true
      },
      "quantity": {
        "key": "quantity",
        "display": "Quantity",
        "description": "The number of repetitions of a service or product.",
        "type": "Quantity"
      },
      "unitPrice": {
        "key": "unitPrice",
        "display": "Unit Price",
        "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
        "type": "Money"
      },
      "factor": {
        "key": "factor",
        "display": "Factor",
        "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
        "type": "decimal"
      },
      "net": {
        "key": "net",
        "display": "Net",
        "description": "The quantity times the unit price for an additional service or product or charge.",
        "type": "Money"
      },
      "udi": {
        "key": "udi",
        "display": "Udi",
        "description": "Unique Device Identifiers associated with this line item.",
        "type": "Reference",
        "targetProfile": [
          "Device"
        ],
        "array": true
      },
      "noteNumber": {
        "key": "noteNumber",
        "display": "Note Number",
        "description": "The numbers associated with notes below which apply to the adjudication of this item.",
        "type": "positiveInt",
        "array": true
      },
      "adjudication": {
        "key": "adjudication",
        "display": "Adjudication",
        "description": "The adjudication results.",
        "type": "UNKNOWN"
      }
    },
    "backboneElement": true
  },
  "ExplanationOfBenefit_AddItem": {
    "display": "Explanation Of Benefit Add Item",
    "description": "Insurer added line items",
    "properties": {
      "itemSequence": {
        "key": "itemSequence",
        "display": "Item Sequence",
        "description": "Claim items which this service line is intended to replace.",
        "type": "positiveInt",
        "array": true
      },
      "detailSequence": {
        "key": "detailSequence",
        "display": "Detail Sequence",
        "description": "The sequence number of the details within the claim item which this line is intended to replace.",
        "type": "positiveInt",
        "array": true
      },
      "subDetailSequence": {
        "key": "subDetailSequence",
        "display": "Sub Detail Sequence",
        "description": "The sequence number of the sub-details woithin the details within the claim item which this line is intended to replace.",
        "type": "positiveInt",
        "array": true
      },
      "provider": {
        "key": "provider",
        "display": "Provider",
        "description": "The providers who are authorized for the services rendered to the patient.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization"
        ],
        "array": true
      },
      "productOrService": {
        "key": "productOrService",
        "display": "Product Or Service",
        "description": "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.",
        "type": "CodeableConcept"
      },
      "modifier": {
        "key": "modifier",
        "display": "Modifier",
        "description": "Item typification or modifiers codes to convey additional context for the product or service.",
        "type": "CodeableConcept",
        "array": true
      },
      "programCode": {
        "key": "programCode",
        "display": "Program Code",
        "description": "Identifies the program under which this may be recovered.",
        "type": "CodeableConcept",
        "array": true
      },
      "serviced[x]": {
        "key": "serviced[x]",
        "display": "Serviced[x]",
        "description": "The date or dates when the service or product was supplied, performed or completed.",
        "type": "date"
      },
      "location[x]": {
        "key": "location[x]",
        "display": "Location[x]",
        "description": "Where the product or service was provided.",
        "type": "CodeableConcept"
      },
      "quantity": {
        "key": "quantity",
        "display": "Quantity",
        "description": "The number of repetitions of a service or product.",
        "type": "Quantity"
      },
      "unitPrice": {
        "key": "unitPrice",
        "display": "Unit Price",
        "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
        "type": "Money"
      },
      "factor": {
        "key": "factor",
        "display": "Factor",
        "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
        "type": "decimal"
      },
      "net": {
        "key": "net",
        "display": "Net",
        "description": "The quantity times the unit price for an additional service or product or charge.",
        "type": "Money"
      },
      "bodySite": {
        "key": "bodySite",
        "display": "Body Site",
        "description": "Physical service site on the patient (limb, tooth, etc.).",
        "type": "CodeableConcept"
      },
      "subSite": {
        "key": "subSite",
        "display": "Sub Site",
        "description": "A region or surface of the bodySite, e.g. limb region or tooth surface(s).",
        "type": "CodeableConcept",
        "array": true
      },
      "noteNumber": {
        "key": "noteNumber",
        "display": "Note Number",
        "description": "The numbers associated with notes below which apply to the adjudication of this item.",
        "type": "positiveInt",
        "array": true
      },
      "adjudication": {
        "key": "adjudication",
        "display": "Adjudication",
        "description": "The adjudication results.",
        "type": "UNKNOWN"
      },
      "detail": {
        "key": "detail",
        "display": "Detail",
        "description": "The second-tier service adjudications for payor added services.",
        "type": "ExplanationOfBenefit_AddItem_Detail",
        "array": true
      }
    },
    "backboneElement": true
  },
  "ExplanationOfBenefit_AddItem_Detail": {
    "display": "Explanation Of Benefit Add Item_ Detail",
    "description": "Insurer added line items",
    "properties": {
      "productOrService": {
        "key": "productOrService",
        "display": "Product Or Service",
        "description": "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.",
        "type": "CodeableConcept"
      },
      "modifier": {
        "key": "modifier",
        "display": "Modifier",
        "description": "Item typification or modifiers codes to convey additional context for the product or service.",
        "type": "CodeableConcept",
        "array": true
      },
      "quantity": {
        "key": "quantity",
        "display": "Quantity",
        "description": "The number of repetitions of a service or product.",
        "type": "Quantity"
      },
      "unitPrice": {
        "key": "unitPrice",
        "display": "Unit Price",
        "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
        "type": "Money"
      },
      "factor": {
        "key": "factor",
        "display": "Factor",
        "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
        "type": "decimal"
      },
      "net": {
        "key": "net",
        "display": "Net",
        "description": "The quantity times the unit price for an additional service or product or charge.",
        "type": "Money"
      },
      "noteNumber": {
        "key": "noteNumber",
        "display": "Note Number",
        "description": "The numbers associated with notes below which apply to the adjudication of this item.",
        "type": "positiveInt",
        "array": true
      },
      "adjudication": {
        "key": "adjudication",
        "display": "Adjudication",
        "description": "The adjudication results.",
        "type": "UNKNOWN"
      },
      "subDetail": {
        "key": "subDetail",
        "display": "Sub Detail",
        "description": "The third-tier service adjudications for payor added services.",
        "type": "ExplanationOfBenefit_AddItem_Detail_SubDetail",
        "array": true
      }
    },
    "backboneElement": true
  },
  "ExplanationOfBenefit_AddItem_Detail_SubDetail": {
    "display": "Explanation Of Benefit Add Item_ Detail_ Sub Detail",
    "description": "Insurer added line items",
    "properties": {
      "productOrService": {
        "key": "productOrService",
        "display": "Product Or Service",
        "description": "When the value is a group code then this item collects a set of related claim details, otherwise this contains the product, service, drug or other billing code for the item.",
        "type": "CodeableConcept"
      },
      "modifier": {
        "key": "modifier",
        "display": "Modifier",
        "description": "Item typification or modifiers codes to convey additional context for the product or service.",
        "type": "CodeableConcept",
        "array": true
      },
      "quantity": {
        "key": "quantity",
        "display": "Quantity",
        "description": "The number of repetitions of a service or product.",
        "type": "Quantity"
      },
      "unitPrice": {
        "key": "unitPrice",
        "display": "Unit Price",
        "description": "If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.",
        "type": "Money"
      },
      "factor": {
        "key": "factor",
        "display": "Factor",
        "description": "A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.",
        "type": "decimal"
      },
      "net": {
        "key": "net",
        "display": "Net",
        "description": "The quantity times the unit price for an additional service or product or charge.",
        "type": "Money"
      },
      "noteNumber": {
        "key": "noteNumber",
        "display": "Note Number",
        "description": "The numbers associated with notes below which apply to the adjudication of this item.",
        "type": "positiveInt",
        "array": true
      },
      "adjudication": {
        "key": "adjudication",
        "display": "Adjudication",
        "description": "The adjudication results.",
        "type": "UNKNOWN"
      }
    },
    "backboneElement": true
  },
  "ExplanationOfBenefit_Total": {
    "display": "Explanation Of Benefit Total",
    "description": "Adjudication totals",
    "properties": {
      "category": {
        "key": "category",
        "display": "Category",
        "description": "A code to indicate the information type of this adjudication record. Information types may include: the value submitted, maximum values or percentages allowed or payable under the plan, amounts that the patient is responsible for in aggregate or pertaining to this item, amounts paid by other coverages, and the benefit payable for this item.",
        "type": "CodeableConcept"
      },
      "amount": {
        "key": "amount",
        "display": "Amount",
        "description": "Monetary total amount associated with the category.",
        "type": "Money"
      }
    },
    "backboneElement": true
  },
  "ExplanationOfBenefit_Payment": {
    "display": "Explanation Of Benefit Payment",
    "description": "Payment Details",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Whether this represents partial or complete payment of the benefits payable.",
        "type": "CodeableConcept"
      },
      "adjustment": {
        "key": "adjustment",
        "display": "Adjustment",
        "description": "Total amount of all adjustments to this payment included in this transaction which are not related to this claim's adjudication.",
        "type": "Money"
      },
      "adjustmentReason": {
        "key": "adjustmentReason",
        "display": "Adjustment Reason",
        "description": "Reason for the payment adjustment.",
        "type": "CodeableConcept"
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "Estimated date the payment will be issued or the actual issue date of payment.",
        "type": "date"
      },
      "amount": {
        "key": "amount",
        "display": "Amount",
        "description": "Benefits payable less any payment adjustment.",
        "type": "Money"
      },
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Issuer's unique identifier for the payment instrument.",
        "type": "Identifier"
      }
    },
    "backboneElement": true
  },
  "ExplanationOfBenefit_ProcessNote": {
    "display": "Explanation Of Benefit Process Note",
    "description": "Note concerning adjudication",
    "properties": {
      "number": {
        "key": "number",
        "display": "Number",
        "description": "A number to uniquely identify a note entry.",
        "type": "positiveInt"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The business purpose of the note text.",
        "type": "enum",
        "enumValues": [
          "display",
          "print",
          "printoper"
        ]
      },
      "language": {
        "key": "language",
        "display": "Language",
        "description": "A code to define the language used in the text of the note.",
        "type": "CodeableConcept"
      }
    },
    "backboneElement": true
  },
  "ExplanationOfBenefit_BenefitBalance": {
    "display": "Explanation Of Benefit Benefit Balance",
    "description": "Balance by Benefit Category",
    "properties": {
      "category": {
        "key": "category",
        "display": "Category",
        "description": "Code to identify the general type of benefits under which products and services are provided.",
        "type": "CodeableConcept"
      },
      "excluded": {
        "key": "excluded",
        "display": "Excluded",
        "description": "True if the indicated class of service is excluded from the plan, missing or False indicates the product or service is included in the coverage.",
        "type": "boolean"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A short name or tag for the benefit.",
        "type": "string"
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A richer description of the benefit or services covered.",
        "type": "string"
      },
      "network": {
        "key": "network",
        "display": "Network",
        "description": "Is a flag to indicate whether the benefits refer to in-network providers or out-of-network providers.",
        "type": "CodeableConcept"
      },
      "unit": {
        "key": "unit",
        "display": "Unit",
        "description": "Indicates if the benefits apply to an individual or to the family.",
        "type": "CodeableConcept"
      },
      "term": {
        "key": "term",
        "display": "Term",
        "description": "The term or period of the values such as 'maximum lifetime benefit' or 'maximum annual visits'.",
        "type": "CodeableConcept"
      },
      "financial": {
        "key": "financial",
        "display": "Financial",
        "description": "Benefits Used to date.",
        "type": "ExplanationOfBenefit_BenefitBalance_Financial",
        "array": true
      }
    },
    "backboneElement": true
  },
  "ExplanationOfBenefit_BenefitBalance_Financial": {
    "display": "Explanation Of Benefit Benefit Balance_ Financial",
    "description": "Benefit Summary",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Classification of benefit being provided.",
        "type": "CodeableConcept"
      },
      "allowed[x]": {
        "key": "allowed[x]",
        "display": "Allowed[x]",
        "description": "The quantity of the benefit which is permitted under the coverage.",
        "type": "unsignedInt"
      },
      "used[x]": {
        "key": "used[x]",
        "display": "Used[x]",
        "description": "The quantity of the benefit which have been consumed to date.",
        "type": "unsignedInt"
      }
    },
    "backboneElement": true
  },
  "FamilyMemberHistory": {
    "display": "FamilyMemberHistory",
    "description": "Significant health conditions for a person related to the patient relevant in the context of care for the patient.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Business identifiers assigned to this family member history by the performer or other systems which remain constant as the resource is updated and propagates from server to server.",
        "type": "Identifier",
        "array": true
      },
      "instantiatesCanonical": {
        "key": "instantiatesCanonical",
        "display": "Instantiates Canonical",
        "description": "The URL pointing to a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this FamilyMemberHistory.",
        "type": "canonical",
        "array": true
      },
      "instantiatesUri": {
        "key": "instantiatesUri",
        "display": "Instantiates Uri",
        "description": "The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this FamilyMemberHistory.",
        "type": "uri",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "A code specifying the status of the record of the family history of a specific family member.",
        "type": "enum",
        "enumValues": [
          "partial",
          "completed",
          "entered-in-error",
          "health-unknown"
        ]
      },
      "dataAbsentReason": {
        "key": "dataAbsentReason",
        "display": "Data Absent Reason",
        "description": "Describes why the family member's history is not available.",
        "type": "CodeableConcept"
      },
      "patient": {
        "key": "patient",
        "display": "Patient",
        "description": "The person who this history concerns.",
        "type": "Reference",
        "targetProfile": [
          "Patient"
        ]
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "The date (and possibly time) when the family member history was recorded or last updated.",
        "type": "dateTime"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "This will either be a name or a description; e.g. \"Aunt Susan\", \"my cousin with the red hair\".",
        "type": "string"
      },
      "relationship": {
        "key": "relationship",
        "display": "Relationship",
        "description": "The type of relationship this person has to the patient (father, mother, brother etc.).",
        "type": "CodeableConcept"
      },
      "sex": {
        "key": "sex",
        "display": "Sex",
        "description": "The birth sex of the family member.",
        "type": "CodeableConcept"
      },
      "born[x]": {
        "key": "born[x]",
        "display": "Born[x]",
        "description": "The actual or approximate date of birth of the relative.",
        "type": "Period"
      },
      "age[x]": {
        "key": "age[x]",
        "display": "Age[x]",
        "description": "The age of the relative at the time the family member history is recorded.",
        "type": "Age"
      },
      "estimatedAge": {
        "key": "estimatedAge",
        "display": "Estimated Age",
        "description": "If true, indicates that the age value specified is an estimated value.",
        "type": "boolean"
      },
      "deceased[x]": {
        "key": "deceased[x]",
        "display": "Deceased[x]",
        "description": "Deceased flag or the actual or approximate age of the relative at the time of death for the family member history record.",
        "type": "boolean"
      },
      "reasonCode": {
        "key": "reasonCode",
        "display": "Reason Code",
        "description": "Describes why the family member history occurred in coded or textual form.",
        "type": "CodeableConcept",
        "array": true
      },
      "reasonReference": {
        "key": "reasonReference",
        "display": "Reason Reference",
        "description": "Indicates a Condition, Observation, AllergyIntolerance, or QuestionnaireResponse that justifies this family member history event.",
        "type": "Reference",
        "targetProfile": [
          "Condition",
          "Observation",
          "AllergyIntolerance",
          "QuestionnaireResponse",
          "DiagnosticReport",
          "DocumentReference"
        ],
        "array": true
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "This property allows a non condition-specific note to the made about the related person. Ideally, the note would be in the condition property, but this is not always possible.",
        "type": "Annotation",
        "array": true
      },
      "condition": {
        "key": "condition",
        "display": "Condition",
        "description": "The significant Conditions (or condition) that the family member had. This is a repeating section to allow a system to represent more than one condition per resource, though there is nothing stopping multiple resources - one per condition.",
        "type": "FamilyMemberHistory_Condition",
        "array": true
      }
    }
  },
  "FamilyMemberHistory_Condition": {
    "display": "Family Member History Condition",
    "description": "Condition that the related person had",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "The actual condition specified. Could be a coded condition (like MI or Diabetes) or a less specific string like 'cancer' depending on how much is known about the condition and the capabilities of the creating system.",
        "type": "CodeableConcept"
      },
      "outcome": {
        "key": "outcome",
        "display": "Outcome",
        "description": "Indicates what happened following the condition.  If the condition resulted in death, deceased date is captured on the relation.",
        "type": "CodeableConcept"
      },
      "contributedToDeath": {
        "key": "contributedToDeath",
        "display": "Contributed To Death",
        "description": "This condition contributed to the cause of death of the related person. If contributedToDeath is not populated, then it is unknown.",
        "type": "boolean"
      },
      "onset[x]": {
        "key": "onset[x]",
        "display": "Onset[x]",
        "description": "Either the age of onset, range of approximate age or descriptive string can be recorded.  For conditions with multiple occurrences, this describes the first known occurrence.",
        "type": "Age"
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "An area where general notes can be placed about this specific condition.",
        "type": "Annotation",
        "array": true
      }
    },
    "backboneElement": true
  },
  "Flag": {
    "display": "Flag",
    "description": "Prospective warnings of potential issues when providing care to the patient.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Business identifiers assigned to this flag by the performer or other systems which remain constant as the resource is updated and propagates from server to server.",
        "type": "Identifier",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "Supports basic workflow.",
        "type": "enum",
        "enumValues": [
          "active",
          "inactive",
          "entered-in-error"
        ]
      },
      "category": {
        "key": "category",
        "display": "Category",
        "description": "Allows a flag to be divided into different categories like clinical, administrative etc. Intended to be used as a means of filtering which flags are displayed to particular user or in a given context.",
        "type": "CodeableConcept",
        "array": true
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "The coded value or textual component of the flag to display to the user.",
        "type": "CodeableConcept"
      },
      "subject": {
        "key": "subject",
        "display": "Subject",
        "description": "The patient, location, group, organization, or practitioner etc. this is about record this flag is associated with.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Location",
          "Group",
          "Organization",
          "Practitioner",
          "PlanDefinition",
          "Medication",
          "Procedure"
        ]
      },
      "period": {
        "key": "period",
        "display": "Period",
        "description": "The period of time from the activation of the flag to inactivation of the flag. If the flag is active, the end of the period should be unspecified.",
        "type": "Period"
      },
      "encounter": {
        "key": "encounter",
        "display": "Encounter",
        "description": "This alert is only relevant during the encounter.",
        "type": "Reference",
        "targetProfile": [
          "Encounter"
        ]
      },
      "author": {
        "key": "author",
        "display": "Author",
        "description": "The person, organization or device that created the flag.",
        "type": "Reference",
        "targetProfile": [
          "Device",
          "Organization",
          "Patient",
          "Practitioner",
          "PractitionerRole"
        ]
      }
    }
  },
  "Goal": {
    "display": "Goal",
    "description": "Describes the intended objective(s) for a patient, group or organization care, for example, weight loss, restoring an activity of daily living, obtaining herd immunity via immunization, meeting a process improvement objective, etc.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Business identifiers assigned to this goal by the performer or other systems which remain constant as the resource is updated and propagates from server to server.",
        "type": "Identifier",
        "array": true
      },
      "lifecycleStatus": {
        "key": "lifecycleStatus",
        "display": "Lifecycle Status",
        "description": "The state of the goal throughout its lifecycle.",
        "type": "enum",
        "enumValues": [
          "proposed",
          "planned",
          "accepted",
          "active",
          "on-hold",
          "completed",
          "cancelled",
          "entered-in-error",
          "rejected"
        ]
      },
      "achievementStatus": {
        "key": "achievementStatus",
        "display": "Achievement Status",
        "description": "Describes the progression, or lack thereof, towards the goal against the target.",
        "type": "CodeableConcept"
      },
      "category": {
        "key": "category",
        "display": "Category",
        "description": "Indicates a category the goal falls within.",
        "type": "CodeableConcept",
        "array": true
      },
      "priority": {
        "key": "priority",
        "display": "Priority",
        "description": "Identifies the mutually agreed level of importance associated with reaching/sustaining the goal.",
        "type": "CodeableConcept"
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "Human-readable and/or coded description of a specific desired objective of care, such as \"control blood pressure\" or \"negotiate an obstacle course\" or \"dance with child at wedding\".",
        "type": "CodeableConcept"
      },
      "subject": {
        "key": "subject",
        "display": "Subject",
        "description": "Identifies the patient, group or organization for whom the goal is being established.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Group",
          "Organization"
        ]
      },
      "start[x]": {
        "key": "start[x]",
        "display": "Start[x]",
        "description": "The date or event after which the goal should begin being pursued.",
        "type": "date"
      },
      "target": {
        "key": "target",
        "display": "Target",
        "description": "Indicates what should be done by when.",
        "type": "Goal_Target",
        "array": true
      },
      "statusDate": {
        "key": "statusDate",
        "display": "Status Date",
        "description": "Identifies when the current status.  I.e. When initially created, when achieved, when cancelled, etc.",
        "type": "date"
      },
      "statusReason": {
        "key": "statusReason",
        "display": "Status Reason",
        "description": "Captures the reason for the current status.",
        "type": "string"
      },
      "expressedBy": {
        "key": "expressedBy",
        "display": "Expressed By",
        "description": "Indicates whose goal this is - patient goal, practitioner goal, etc.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Practitioner",
          "PractitionerRole",
          "RelatedPerson"
        ]
      },
      "addresses": {
        "key": "addresses",
        "display": "Addresses",
        "description": "The identified conditions and other health record elements that are intended to be addressed by the goal.",
        "type": "Reference",
        "targetProfile": [
          "Condition",
          "Observation",
          "MedicationStatement",
          "NutritionOrder",
          "ServiceRequest",
          "RiskAssessment"
        ],
        "array": true
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "Any comments related to the goal.",
        "type": "Annotation",
        "array": true
      },
      "outcomeCode": {
        "key": "outcomeCode",
        "display": "Outcome Code",
        "description": "Identifies the change (or lack of change) at the point when the status of the goal is assessed.",
        "type": "CodeableConcept",
        "array": true
      },
      "outcomeReference": {
        "key": "outcomeReference",
        "display": "Outcome Reference",
        "description": "Details of what's changed (or not changed).",
        "type": "Reference",
        "targetProfile": [
          "Observation"
        ],
        "array": true
      }
    }
  },
  "Goal_Target": {
    "display": "Goal Target",
    "description": "Target outcome for the goal",
    "properties": {
      "measure": {
        "key": "measure",
        "display": "Measure",
        "description": "The parameter whose value is being tracked, e.g. body weight, blood pressure, or hemoglobin A1c level.",
        "type": "CodeableConcept"
      },
      "detail[x]": {
        "key": "detail[x]",
        "display": "Detail[x]",
        "description": "The target value of the focus to be achieved to signify the fulfillment of the goal, e.g. 150 pounds, 7.0%. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any focus value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any focus value at or above the low value.",
        "type": "Quantity"
      },
      "due[x]": {
        "key": "due[x]",
        "display": "Due[x]",
        "description": "Indicates either the date or the duration after start by which the goal should be met.",
        "type": "date"
      }
    },
    "backboneElement": true
  },
  "GraphDefinition": {
    "display": "GraphDefinition",
    "description": "A formal computable definition of a graph of resources - that is, a coherent set of resources that form a graph by following references. The Graph Definition resource defines a set and makes rules about the set.",
    "properties": {
      "url": {
        "key": "url",
        "display": "Url",
        "description": "An absolute URI that is used to identify this graph definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this graph definition is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the graph definition is stored on different servers.",
        "type": "uri"
      },
      "version": {
        "key": "version",
        "display": "Version",
        "description": "The identifier that is used to identify this version of the graph definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the graph definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
        "type": "string"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A natural language name identifying the graph definition. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
        "type": "string"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of this graph definition. Enables tracking the life-cycle of the content.",
        "type": "enum",
        "enumValues": [
          "draft",
          "active",
          "retired",
          "unknown"
        ]
      },
      "experimental": {
        "key": "experimental",
        "display": "Experimental",
        "description": "A Boolean value to indicate that this graph definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
        "type": "boolean"
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "The date  (and optionally time) when the graph definition was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the graph definition changes.",
        "type": "dateTime"
      },
      "publisher": {
        "key": "publisher",
        "display": "Publisher",
        "description": "The name of the organization or individual that published the graph definition.",
        "type": "string"
      },
      "contact": {
        "key": "contact",
        "display": "Contact",
        "description": "Contact details to assist a user in finding and communicating with the publisher.",
        "type": "ContactDetail",
        "array": true
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A free text natural language description of the graph definition from a consumer's perspective.",
        "type": "markdown"
      },
      "useContext": {
        "key": "useContext",
        "display": "Use Context",
        "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate graph definition instances.",
        "type": "UsageContext",
        "array": true
      },
      "jurisdiction": {
        "key": "jurisdiction",
        "display": "Jurisdiction",
        "description": "A legal or geographic region in which the graph definition is intended to be used.",
        "type": "CodeableConcept",
        "array": true
      },
      "purpose": {
        "key": "purpose",
        "display": "Purpose",
        "description": "Explanation of why this graph definition is needed and why it has been designed as it has.",
        "type": "markdown"
      },
      "start": {
        "key": "start",
        "display": "Start",
        "description": "The type of FHIR resource at which instances of this graph start.",
        "type": "enum",
        "enumValues": [
          "Type of resource at which the graph starts"
        ]
      },
      "profile": {
        "key": "profile",
        "display": "Profile",
        "description": "The profile that describes the use of the base resource.",
        "type": "canonical"
      },
      "link": {
        "key": "link",
        "display": "Link",
        "description": "Links this graph makes rules about.",
        "type": "GraphDefinition_Link",
        "array": true
      }
    }
  },
  "GraphDefinition_Link": {
    "display": "Graph Definition Link",
    "description": "Links this graph makes rules about",
    "properties": {
      "path": {
        "key": "path",
        "display": "Path",
        "description": "A FHIR expression that identifies one of FHIR References to other resources.",
        "type": "string"
      },
      "sliceName": {
        "key": "sliceName",
        "display": "Slice Name",
        "description": "Which slice (if profiled).",
        "type": "string"
      },
      "min": {
        "key": "min",
        "display": "Min",
        "description": "Minimum occurrences for this link.",
        "type": "integer"
      },
      "max": {
        "key": "max",
        "display": "Max",
        "description": "Maximum occurrences for this link.",
        "type": "string"
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "Information about why this link is of interest in this graph definition.",
        "type": "string"
      },
      "target": {
        "key": "target",
        "display": "Target",
        "description": "Potential target for the link.",
        "type": "GraphDefinition_Link_Target",
        "array": true
      }
    },
    "backboneElement": true
  },
  "GraphDefinition_Link_Target": {
    "display": "Graph Definition Link_ Target",
    "description": "Potential target for the link",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Type of resource this link refers to.",
        "type": "enum",
        "enumValues": [
          "Type of resource this link refers to"
        ]
      },
      "params": {
        "key": "params",
        "display": "Params",
        "description": "A set of parameters to look up.",
        "type": "string"
      },
      "profile": {
        "key": "profile",
        "display": "Profile",
        "description": "Profile for the target resource.",
        "type": "canonical"
      },
      "compartment": {
        "key": "compartment",
        "display": "Compartment",
        "description": "Compartment Consistency Rules.",
        "type": "GraphDefinition_Link_Target_Compartment",
        "array": true
      },
      "link": {
        "key": "link",
        "display": "Link",
        "description": "Additional links from target resource.",
        "type": "UNKNOWN"
      }
    },
    "backboneElement": true
  },
  "GraphDefinition_Link_Target_Compartment": {
    "display": "Graph Definition Link_ Target_ Compartment",
    "description": "Compartment Consistency Rules",
    "properties": {
      "use": {
        "key": "use",
        "display": "Use",
        "description": "Defines how the compartment rule is used - whether it it is used to test whether resources are subject to the rule, or whether it is a rule that must be followed.",
        "type": "enum",
        "enumValues": [
          "condition",
          "requirement"
        ]
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "Identifies the compartment.",
        "type": "enum",
        "enumValues": [
          "Patient",
          "Encounter",
          "RelatedPerson",
          "Practitioner",
          "Device"
        ]
      },
      "rule": {
        "key": "rule",
        "display": "Rule",
        "description": "identical | matching | different | no-rule | custom.",
        "type": "enum",
        "enumValues": [
          "identical",
          "matching",
          "different",
          "custom"
        ]
      },
      "expression": {
        "key": "expression",
        "display": "Expression",
        "description": "Custom rule, as a FHIRPath expression.",
        "type": "string"
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "Documentation for FHIRPath expression.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "Group": {
    "display": "Group",
    "description": "Represents a defined collection of entities that may be discussed or acted upon collectively but which are not expected to act collectively, and are not formally or legally recognized; i.e. a collection of entities that isn't an Organization.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "A unique business identifier for this group.",
        "type": "Identifier",
        "array": true
      },
      "active": {
        "key": "active",
        "display": "Active",
        "description": "Indicates whether the record for the group is available for use or is merely being retained for historical purposes.",
        "type": "boolean"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Identifies the broad classification of the kind of resources the group includes.",
        "type": "enum",
        "enumValues": [
          "person",
          "animal",
          "practitioner",
          "device",
          "medication",
          "substance"
        ]
      },
      "actual": {
        "key": "actual",
        "display": "Actual",
        "description": "If true, indicates that the resource refers to a specific group of real individuals.  If false, the group defines a set of intended individuals.",
        "type": "boolean"
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "Provides a specific type of resource the group includes; e.g. \"cow\", \"syringe\", etc.",
        "type": "CodeableConcept"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A label assigned to the group for human identification and communication.",
        "type": "string"
      },
      "quantity": {
        "key": "quantity",
        "display": "Quantity",
        "description": "A count of the number of resource instances that are part of the group.",
        "type": "unsignedInt"
      },
      "managingEntity": {
        "key": "managingEntity",
        "display": "Managing Entity",
        "description": "Entity responsible for defining and maintaining Group characteristics and/or registered members.",
        "type": "Reference",
        "targetProfile": [
          "Organization",
          "RelatedPerson",
          "Practitioner",
          "PractitionerRole"
        ]
      },
      "characteristic": {
        "key": "characteristic",
        "display": "Characteristic",
        "description": "Identifies traits whose presence r absence is shared by members of the group.",
        "type": "Group_Characteristic",
        "array": true
      },
      "member": {
        "key": "member",
        "display": "Member",
        "description": "Identifies the resource instances that are members of the group.",
        "type": "Group_Member",
        "array": true
      }
    }
  },
  "Group_Characteristic": {
    "display": "Group Characteristic",
    "description": "Include / Exclude group members by Trait",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "A code that identifies the kind of trait being asserted.",
        "type": "CodeableConcept"
      },
      "value[x]": {
        "key": "value[x]",
        "display": "Value[x]",
        "description": "The value of the trait that holds (or does not hold - see 'exclude') for members of the group.",
        "type": "CodeableConcept"
      },
      "exclude": {
        "key": "exclude",
        "display": "Exclude",
        "description": "If true, indicates the characteristic is one that is NOT held by members of the group.",
        "type": "boolean"
      },
      "period": {
        "key": "period",
        "display": "Period",
        "description": "The period over which the characteristic is tested; e.g. the patient had an operation during the month of June.",
        "type": "Period"
      }
    },
    "backboneElement": true
  },
  "Group_Member": {
    "display": "Group Member",
    "description": "Who or what is in group",
    "properties": {
      "entity": {
        "key": "entity",
        "display": "Entity",
        "description": "A reference to the entity that is a member of the group. Must be consistent with Group.type. If the entity is another group, then the type must be the same.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Practitioner",
          "PractitionerRole",
          "Device",
          "Medication",
          "Substance",
          "Group"
        ]
      },
      "period": {
        "key": "period",
        "display": "Period",
        "description": "The period that the member was in the group, if known.",
        "type": "Period"
      },
      "inactive": {
        "key": "inactive",
        "display": "Inactive",
        "description": "A flag to indicate that the member is no longer in the group, but previously may have been a member.",
        "type": "boolean"
      }
    },
    "backboneElement": true
  },
  "GuidanceResponse": {
    "display": "GuidanceResponse",
    "description": "A guidance response is the formal response to a guidance request, including any output parameters returned by the evaluation, as well as the description of any proposed actions to be taken.",
    "properties": {
      "requestIdentifier": {
        "key": "requestIdentifier",
        "display": "Request Identifier",
        "description": "The identifier of the request associated with this response. If an identifier was given as part of the request, it will be reproduced here to enable the requester to more easily identify the response in a multi-request scenario.",
        "type": "Identifier"
      },
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Allows a service to provide  unique, business identifiers for the response.",
        "type": "Identifier",
        "array": true
      },
      "module[x]": {
        "key": "module[x]",
        "display": "Module[x]",
        "description": "An identifier, CodeableConcept or canonical reference to the guidance that was requested.",
        "type": "uri"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of the response. If the evaluation is completed successfully, the status will indicate success. However, in order to complete the evaluation, the engine may require more information. In this case, the status will be data-required, and the response will contain a description of the additional required information. If the evaluation completed successfully, but the engine determines that a potentially more accurate response could be provided if more data was available, the status will be data-requested, and the response will contain a description of the additional requested information.",
        "type": "enum",
        "enumValues": [
          "success",
          "data-requested",
          "data-required",
          "in-progress",
          "failure",
          "entered-in-error"
        ]
      },
      "subject": {
        "key": "subject",
        "display": "Subject",
        "description": "The patient for which the request was processed.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Group"
        ]
      },
      "encounter": {
        "key": "encounter",
        "display": "Encounter",
        "description": "The encounter during which this response was created or to which the creation of this record is tightly associated.",
        "type": "Reference",
        "targetProfile": [
          "Encounter"
        ]
      },
      "occurrenceDateTime": {
        "key": "occurrenceDateTime",
        "display": "Occurrence Date Time",
        "description": "Indicates when the guidance response was processed.",
        "type": "dateTime"
      },
      "performer": {
        "key": "performer",
        "display": "Performer",
        "description": "Provides a reference to the device that performed the guidance.",
        "type": "Reference",
        "targetProfile": [
          "Device"
        ]
      },
      "reasonCode": {
        "key": "reasonCode",
        "display": "Reason Code",
        "description": "Describes the reason for the guidance response in coded or textual form.",
        "type": "CodeableConcept",
        "array": true
      },
      "reasonReference": {
        "key": "reasonReference",
        "display": "Reason Reference",
        "description": "Indicates the reason the request was initiated. This is typically provided as a parameter to the evaluation and echoed by the service, although for some use cases, such as subscription- or event-based scenarios, it may provide an indication of the cause for the response.",
        "type": "Reference",
        "targetProfile": [
          "Condition",
          "Observation",
          "DiagnosticReport",
          "DocumentReference"
        ],
        "array": true
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "Provides a mechanism to communicate additional information about the response.",
        "type": "Annotation",
        "array": true
      },
      "evaluationMessage": {
        "key": "evaluationMessage",
        "display": "Evaluation Message",
        "description": "Messages resulting from the evaluation of the artifact or artifacts. As part of evaluating the request, the engine may produce informational or warning messages. These messages will be provided by this element.",
        "type": "Reference",
        "targetProfile": [
          "OperationOutcome"
        ],
        "array": true
      },
      "outputParameters": {
        "key": "outputParameters",
        "display": "Output Parameters",
        "description": "The output parameters of the evaluation, if any. Many modules will result in the return of specific resources such as procedure or communication requests that are returned as part of the operation result. However, modules may define specific outputs that would be returned as the result of the evaluation, and these would be returned in this element.",
        "type": "Reference",
        "targetProfile": [
          "Parameters"
        ]
      },
      "result": {
        "key": "result",
        "display": "Result",
        "description": "The actions, if any, produced by the evaluation of the artifact.",
        "type": "Reference",
        "targetProfile": [
          "CarePlan",
          "RequestGroup"
        ]
      },
      "dataRequirement": {
        "key": "dataRequirement",
        "display": "Data Requirement",
        "description": "If the evaluation could not be completed due to lack of information, or additional information would potentially result in a more accurate response, this element will a description of the data required in order to proceed with the evaluation. A subsequent request to the service should include this data.",
        "type": "DataRequirement",
        "array": true
      }
    }
  },
  "HealthcareService": {
    "display": "HealthcareService",
    "description": "The details of a healthcare service available at a location.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "External identifiers for this item.",
        "type": "Identifier",
        "array": true
      },
      "active": {
        "key": "active",
        "display": "Active",
        "description": "This flag is used to mark the record to not be used. This is not used when a center is closed for maintenance, or for holidays, the notAvailable period is to be used for this.",
        "type": "boolean"
      },
      "providedBy": {
        "key": "providedBy",
        "display": "Provided By",
        "description": "The organization that provides this healthcare service.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "category": {
        "key": "category",
        "display": "Category",
        "description": "Identifies the broad category of service being performed or delivered.",
        "type": "CodeableConcept",
        "array": true
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The specific type of service that may be delivered or performed.",
        "type": "CodeableConcept",
        "array": true
      },
      "specialty": {
        "key": "specialty",
        "display": "Specialty",
        "description": "Collection of specialties handled by the service site. This is more of a medical term.",
        "type": "CodeableConcept",
        "array": true
      },
      "location": {
        "key": "location",
        "display": "Location",
        "description": "The location(s) where this healthcare service may be provided.",
        "type": "Reference",
        "targetProfile": [
          "Location"
        ],
        "array": true
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "Further description of the service as it would be presented to a consumer while searching.",
        "type": "string"
      },
      "comment": {
        "key": "comment",
        "display": "Comment",
        "description": "Any additional description of the service and/or any specific issues not covered by the other attributes, which can be displayed as further detail under the serviceName.",
        "type": "string"
      },
      "extraDetails": {
        "key": "extraDetails",
        "display": "Extra Details",
        "description": "Extra details about the service that can't be placed in the other fields.",
        "type": "markdown"
      },
      "photo": {
        "key": "photo",
        "display": "Photo",
        "description": "If there is a photo/symbol associated with this HealthcareService, it may be included here to facilitate quick identification of the service in a list.",
        "type": "Attachment"
      },
      "telecom": {
        "key": "telecom",
        "display": "Telecom",
        "description": "List of contacts related to this specific healthcare service.",
        "type": "ContactPoint",
        "array": true
      },
      "coverageArea": {
        "key": "coverageArea",
        "display": "Coverage Area",
        "description": "The location(s) that this service is available to (not where the service is provided).",
        "type": "Reference",
        "targetProfile": [
          "Location"
        ],
        "array": true
      },
      "serviceProvisionCode": {
        "key": "serviceProvisionCode",
        "display": "Service Provision Code",
        "description": "The code(s) that detail the conditions under which the healthcare service is available/offered.",
        "type": "CodeableConcept",
        "array": true
      },
      "eligibility": {
        "key": "eligibility",
        "display": "Eligibility",
        "description": "Does this service have specific eligibility requirements that need to be met in order to use the service?",
        "type": "HealthcareService_Eligibility",
        "array": true
      },
      "program": {
        "key": "program",
        "display": "Program",
        "description": "Programs that this service is applicable to.",
        "type": "CodeableConcept",
        "array": true
      },
      "characteristic": {
        "key": "characteristic",
        "display": "Characteristic",
        "description": "Collection of characteristics (attributes).",
        "type": "CodeableConcept",
        "array": true
      },
      "communication": {
        "key": "communication",
        "display": "Communication",
        "description": "Some services are specifically made available in multiple languages, this property permits a directory to declare the languages this is offered in. Typically this is only provided where a service operates in communities with mixed languages used.",
        "type": "CodeableConcept",
        "array": true
      },
      "referralMethod": {
        "key": "referralMethod",
        "display": "Referral Method",
        "description": "Ways that the service accepts referrals, if this is not provided then it is implied that no referral is required.",
        "type": "CodeableConcept",
        "array": true
      },
      "appointmentRequired": {
        "key": "appointmentRequired",
        "display": "Appointment Required",
        "description": "Indicates whether or not a prospective consumer will require an appointment for a particular service at a site to be provided by the Organization. Indicates if an appointment is required for access to this service.",
        "type": "boolean"
      },
      "availableTime": {
        "key": "availableTime",
        "display": "Available Time",
        "description": "A collection of times that the Service Site is available.",
        "type": "HealthcareService_AvailableTime",
        "array": true
      },
      "notAvailable": {
        "key": "notAvailable",
        "display": "Not Available",
        "description": "The HealthcareService is not available during this period of time due to the provided reason.",
        "type": "HealthcareService_NotAvailable",
        "array": true
      },
      "availabilityExceptions": {
        "key": "availabilityExceptions",
        "display": "Availability Exceptions",
        "description": "A description of site availability exceptions, e.g. public holiday availability. Succinctly describing all possible exceptions to normal site availability as details in the available Times and not available Times.",
        "type": "string"
      },
      "endpoint": {
        "key": "endpoint",
        "display": "Endpoint",
        "description": "Technical endpoints providing access to services operated for the specific healthcare services defined at this resource.",
        "type": "Reference",
        "targetProfile": [
          "Endpoint"
        ],
        "array": true
      }
    }
  },
  "HealthcareService_Eligibility": {
    "display": "Healthcare Service Eligibility",
    "description": "Specific eligibility requirements required to use the service",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "Coded value for the eligibility.",
        "type": "CodeableConcept"
      },
      "comment": {
        "key": "comment",
        "display": "Comment",
        "description": "Describes the eligibility conditions for the service.",
        "type": "markdown"
      }
    },
    "backboneElement": true
  },
  "HealthcareService_AvailableTime": {
    "display": "Healthcare Service Available Time",
    "description": "Times the Service Site is available",
    "properties": {
      "daysOfWeek": {
        "key": "daysOfWeek",
        "display": "Days Of Week",
        "description": "Indicates which days of the week are available between the start and end Times.",
        "type": "enum",
        "enumValues": [
          "mon",
          "tue",
          "wed",
          "thu",
          "fri",
          "sat",
          "sun"
        ],
        "array": true
      },
      "allDay": {
        "key": "allDay",
        "display": "All Day",
        "description": "Is this always available? (hence times are irrelevant) e.g. 24 hour service.",
        "type": "boolean"
      },
      "availableStartTime": {
        "key": "availableStartTime",
        "display": "Available Start Time",
        "description": "The opening time of day. Note: If the AllDay flag is set, then this time is ignored.",
        "type": "time"
      },
      "availableEndTime": {
        "key": "availableEndTime",
        "display": "Available End Time",
        "description": "The closing time of day. Note: If the AllDay flag is set, then this time is ignored.",
        "type": "time"
      }
    },
    "backboneElement": true
  },
  "HealthcareService_NotAvailable": {
    "display": "Healthcare Service Not Available",
    "description": "Not available during this time due to provided reason",
    "properties": {
      "description": {
        "key": "description",
        "display": "Description",
        "description": "The reason that can be presented to the user as to why this time is not available.",
        "type": "string"
      },
      "during": {
        "key": "during",
        "display": "During",
        "description": "Service is not available (seasonally or for a public holiday) from this date.",
        "type": "Period"
      }
    },
    "backboneElement": true
  },
  "ImagingStudy": {
    "display": "ImagingStudy",
    "description": "Representation of the content produced in a DICOM imaging study. A study comprises a set of series, each of which includes a set of Service-Object Pair Instances (SOP Instances - images or other data) acquired or produced in a common context.  A series is of only one modality (e.g. X-ray, CT, MR, ultrasound), but a study may have multiple series of different modalities.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Identifiers for the ImagingStudy such as DICOM Study Instance UID, and Accession Number.",
        "type": "Identifier",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The current state of the ImagingStudy.",
        "type": "enum",
        "enumValues": [
          "registered",
          "available",
          "cancelled",
          "entered-in-error",
          "unknown"
        ]
      },
      "modality": {
        "key": "modality",
        "display": "Modality",
        "description": "A list of all the series.modality values that are actual acquisition modalities, i.e. those in the DICOM Context Group 29 (value set OID 1.2.840.10008.6.1.19).",
        "type": "Coding",
        "array": true
      },
      "subject": {
        "key": "subject",
        "display": "Subject",
        "description": "The subject, typically a patient, of the imaging study.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Device",
          "Group"
        ]
      },
      "encounter": {
        "key": "encounter",
        "display": "Encounter",
        "description": "The healthcare event (e.g. a patient and healthcare provider interaction) during which this ImagingStudy is made.",
        "type": "Reference",
        "targetProfile": [
          "Encounter"
        ]
      },
      "started": {
        "key": "started",
        "display": "Started",
        "description": "Date and time the study started.",
        "type": "dateTime"
      },
      "basedOn": {
        "key": "basedOn",
        "display": "Based On",
        "description": "A list of the diagnostic requests that resulted in this imaging study being performed.",
        "type": "Reference",
        "targetProfile": [
          "CarePlan",
          "ServiceRequest",
          "Appointment",
          "AppointmentResponse",
          "Task"
        ],
        "array": true
      },
      "referrer": {
        "key": "referrer",
        "display": "Referrer",
        "description": "The requesting/referring physician.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole"
        ]
      },
      "interpreter": {
        "key": "interpreter",
        "display": "Interpreter",
        "description": "Who read the study and interpreted the images or other content.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole"
        ],
        "array": true
      },
      "endpoint": {
        "key": "endpoint",
        "display": "Endpoint",
        "description": "The network service providing access (e.g., query, view, or retrieval) for the study. See implementation notes for information about using DICOM endpoints. A study-level endpoint applies to each series in the study, unless overridden by a series-level endpoint with the same Endpoint.connectionType.",
        "type": "Reference",
        "targetProfile": [
          "Endpoint"
        ],
        "array": true
      },
      "numberOfSeries": {
        "key": "numberOfSeries",
        "display": "Number Of Series",
        "description": "Number of Series in the Study. This value given may be larger than the number of series elements this Resource contains due to resource availability, security, or other factors. This element should be present if any series elements are present.",
        "type": "unsignedInt"
      },
      "numberOfInstances": {
        "key": "numberOfInstances",
        "display": "Number Of Instances",
        "description": "Number of SOP Instances in Study. This value given may be larger than the number of instance elements this resource contains due to resource availability, security, or other factors. This element should be present if any instance elements are present.",
        "type": "unsignedInt"
      },
      "procedureReference": {
        "key": "procedureReference",
        "display": "Procedure Reference",
        "description": "The procedure which this ImagingStudy was part of.",
        "type": "Reference",
        "targetProfile": [
          "Procedure"
        ]
      },
      "procedureCode": {
        "key": "procedureCode",
        "display": "Procedure Code",
        "description": "The code for the performed procedure type.",
        "type": "CodeableConcept",
        "array": true
      },
      "location": {
        "key": "location",
        "display": "Location",
        "description": "The principal physical location where the ImagingStudy was performed.",
        "type": "Reference",
        "targetProfile": [
          "Location"
        ]
      },
      "reasonCode": {
        "key": "reasonCode",
        "display": "Reason Code",
        "description": "Description of clinical condition indicating why the ImagingStudy was requested.",
        "type": "CodeableConcept",
        "array": true
      },
      "reasonReference": {
        "key": "reasonReference",
        "display": "Reason Reference",
        "description": "Indicates another resource whose existence justifies this Study.",
        "type": "Reference",
        "targetProfile": [
          "Condition",
          "Observation",
          "Media",
          "DiagnosticReport",
          "DocumentReference"
        ],
        "array": true
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "Per the recommended DICOM mapping, this element is derived from the Study Description attribute (0008,1030). Observations or findings about the imaging study should be recorded in another resource, e.g. Observation, and not in this element.",
        "type": "Annotation",
        "array": true
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "The Imaging Manager description of the study. Institution-generated description or classification of the Study (component) performed.",
        "type": "string"
      },
      "series": {
        "key": "series",
        "display": "Series",
        "description": "Each study has one or more series of images or other content.",
        "type": "ImagingStudy_Series",
        "array": true
      }
    }
  },
  "ImagingStudy_Series": {
    "display": "Imaging Study Series",
    "description": "Each study has one or more series of instances",
    "properties": {
      "uid": {
        "key": "uid",
        "display": "Uid",
        "description": "The DICOM Series Instance UID for the series.",
        "type": "id"
      },
      "number": {
        "key": "number",
        "display": "Number",
        "description": "The numeric identifier of this series in the study.",
        "type": "unsignedInt"
      },
      "modality": {
        "key": "modality",
        "display": "Modality",
        "description": "The modality of this series sequence.",
        "type": "Coding"
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A description of the series.",
        "type": "string"
      },
      "numberOfInstances": {
        "key": "numberOfInstances",
        "display": "Number Of Instances",
        "description": "Number of SOP Instances in the Study. The value given may be larger than the number of instance elements this resource contains due to resource availability, security, or other factors. This element should be present if any instance elements are present.",
        "type": "unsignedInt"
      },
      "endpoint": {
        "key": "endpoint",
        "display": "Endpoint",
        "description": "The network service providing access (e.g., query, view, or retrieval) for this series. See implementation notes for information about using DICOM endpoints. A series-level endpoint, if present, has precedence over a study-level endpoint with the same Endpoint.connectionType.",
        "type": "Reference",
        "targetProfile": [
          "Endpoint"
        ],
        "array": true
      },
      "bodySite": {
        "key": "bodySite",
        "display": "Body Site",
        "description": "The anatomic structures examined. See DICOM Part 16 Annex L (http://dicom.nema.org/medical/dicom/current/output/chtml/part16/chapter_L.html) for DICOM to SNOMED-CT mappings. The bodySite may indicate the laterality of body part imaged; if so, it shall be consistent with any content of ImagingStudy.series.laterality.",
        "type": "Coding"
      },
      "laterality": {
        "key": "laterality",
        "display": "Laterality",
        "description": "The laterality of the (possibly paired) anatomic structures examined. E.g., the left knee, both lungs, or unpaired abdomen. If present, shall be consistent with any laterality information indicated in ImagingStudy.series.bodySite.",
        "type": "Coding"
      },
      "specimen": {
        "key": "specimen",
        "display": "Specimen",
        "description": "The specimen imaged, e.g., for whole slide imaging of a biopsy.",
        "type": "Reference",
        "targetProfile": [
          "Specimen"
        ],
        "array": true
      },
      "started": {
        "key": "started",
        "display": "Started",
        "description": "The date and time the series was started.",
        "type": "dateTime"
      },
      "performer": {
        "key": "performer",
        "display": "Performer",
        "description": "Indicates who or what performed the series and how they were involved.",
        "type": "ImagingStudy_Series_Performer",
        "array": true
      },
      "instance": {
        "key": "instance",
        "display": "Instance",
        "description": "A single SOP instance within the series, e.g. an image, or presentation state.",
        "type": "ImagingStudy_Series_Instance",
        "array": true
      }
    },
    "backboneElement": true
  },
  "ImagingStudy_Series_Performer": {
    "display": "Imaging Study Series_ Performer",
    "description": "Who performed the series",
    "properties": {
      "function": {
        "key": "function",
        "display": "Function",
        "description": "Distinguishes the type of involvement of the performer in the series.",
        "type": "CodeableConcept"
      },
      "actor": {
        "key": "actor",
        "display": "Actor",
        "description": "Indicates who or what performed the series.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization",
          "CareTeam",
          "Patient",
          "Device",
          "RelatedPerson"
        ]
      }
    },
    "backboneElement": true
  },
  "ImagingStudy_Series_Instance": {
    "display": "Imaging Study Series_ Instance",
    "description": "A single SOP instance from the series",
    "properties": {
      "uid": {
        "key": "uid",
        "display": "Uid",
        "description": "The DICOM SOP Instance UID for this image or other DICOM content.",
        "type": "id"
      },
      "sopClass": {
        "key": "sopClass",
        "display": "Sop Class",
        "description": "DICOM instance  type.",
        "type": "Coding"
      },
      "number": {
        "key": "number",
        "display": "Number",
        "description": "The number of instance in the series.",
        "type": "unsignedInt"
      },
      "title": {
        "key": "title",
        "display": "Title",
        "description": "The description of the instance.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "Immunization": {
    "display": "Immunization",
    "description": "Describes the event of a patient being administered a vaccine or a record of an immunization as reported by a patient, a clinician or another party.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "A unique identifier assigned to this immunization record.",
        "type": "Identifier",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "Indicates the current status of the immunization event.",
        "type": "enum",
        "enumValues": [
          "completed",
          "entered-in-error",
          "not-done"
        ]
      },
      "statusReason": {
        "key": "statusReason",
        "display": "Status Reason",
        "description": "Indicates the reason the immunization event was not performed.",
        "type": "CodeableConcept"
      },
      "vaccineCode": {
        "key": "vaccineCode",
        "display": "Vaccine Code",
        "description": "Vaccine that was administered or was to be administered.",
        "type": "CodeableConcept"
      },
      "patient": {
        "key": "patient",
        "display": "Patient",
        "description": "The patient who either received or did not receive the immunization.",
        "type": "Reference",
        "targetProfile": [
          "Patient"
        ]
      },
      "encounter": {
        "key": "encounter",
        "display": "Encounter",
        "description": "The visit or admission or other contact between patient and health care provider the immunization was performed as part of.",
        "type": "Reference",
        "targetProfile": [
          "Encounter"
        ]
      },
      "occurrence[x]": {
        "key": "occurrence[x]",
        "display": "Occurrence[x]",
        "description": "Date vaccine administered or was to be administered.",
        "type": "dateTime"
      },
      "recorded": {
        "key": "recorded",
        "display": "Recorded",
        "description": "The date the occurrence of the immunization was first captured in the record - potentially significantly after the occurrence of the event.",
        "type": "dateTime"
      },
      "primarySource": {
        "key": "primarySource",
        "display": "Primary Source",
        "description": "An indication that the content of the record is based on information from the person who administered the vaccine. This reflects the context under which the data was originally recorded.",
        "type": "boolean"
      },
      "reportOrigin": {
        "key": "reportOrigin",
        "display": "Report Origin",
        "description": "The source of the data when the report of the immunization event is not based on information from the person who administered the vaccine.",
        "type": "CodeableConcept"
      },
      "location": {
        "key": "location",
        "display": "Location",
        "description": "The service delivery location where the vaccine administration occurred.",
        "type": "Reference",
        "targetProfile": [
          "Location"
        ]
      },
      "manufacturer": {
        "key": "manufacturer",
        "display": "Manufacturer",
        "description": "Name of vaccine manufacturer.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "lotNumber": {
        "key": "lotNumber",
        "display": "Lot Number",
        "description": "Lot number of the  vaccine product.",
        "type": "string"
      },
      "expirationDate": {
        "key": "expirationDate",
        "display": "Expiration Date",
        "description": "Date vaccine batch expires.",
        "type": "date"
      },
      "site": {
        "key": "site",
        "display": "Site",
        "description": "Body site where vaccine was administered.",
        "type": "CodeableConcept"
      },
      "route": {
        "key": "route",
        "display": "Route",
        "description": "The path by which the vaccine product is taken into the body.",
        "type": "CodeableConcept"
      },
      "doseQuantity": {
        "key": "doseQuantity",
        "display": "Dose Quantity",
        "description": "The quantity of vaccine product that was administered.",
        "type": "Quantity"
      },
      "performer": {
        "key": "performer",
        "display": "Performer",
        "description": "Indicates who performed the immunization event.",
        "type": "Immunization_Performer",
        "array": true
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "Extra information about the immunization that is not conveyed by the other attributes.",
        "type": "Annotation",
        "array": true
      },
      "reasonCode": {
        "key": "reasonCode",
        "display": "Reason Code",
        "description": "Reasons why the vaccine was administered.",
        "type": "CodeableConcept",
        "array": true
      },
      "reasonReference": {
        "key": "reasonReference",
        "display": "Reason Reference",
        "description": "Condition, Observation or DiagnosticReport that supports why the immunization was administered.",
        "type": "Reference",
        "targetProfile": [
          "Condition",
          "Observation",
          "DiagnosticReport"
        ],
        "array": true
      },
      "isSubpotent": {
        "key": "isSubpotent",
        "display": "Is Subpotent",
        "description": "Indication if a dose is considered to be subpotent. By default, a dose should be considered to be potent.",
        "type": "boolean"
      },
      "subpotentReason": {
        "key": "subpotentReason",
        "display": "Subpotent Reason",
        "description": "Reason why a dose is considered to be subpotent.",
        "type": "CodeableConcept",
        "array": true
      },
      "education": {
        "key": "education",
        "display": "Education",
        "description": "Educational material presented to the patient (or guardian) at the time of vaccine administration.",
        "type": "Immunization_Education",
        "array": true
      },
      "programEligibility": {
        "key": "programEligibility",
        "display": "Program Eligibility",
        "description": "Indicates a patient's eligibility for a funding program.",
        "type": "CodeableConcept",
        "array": true
      },
      "fundingSource": {
        "key": "fundingSource",
        "display": "Funding Source",
        "description": "Indicates the source of the vaccine actually administered. This may be different than the patient eligibility (e.g. the patient may be eligible for a publically purchased vaccine but due to inventory issues, vaccine purchased with private funds was actually administered).",
        "type": "CodeableConcept"
      },
      "reaction": {
        "key": "reaction",
        "display": "Reaction",
        "description": "Categorical data indicating that an adverse event is associated in time to an immunization.",
        "type": "Immunization_Reaction",
        "array": true
      },
      "protocolApplied": {
        "key": "protocolApplied",
        "display": "Protocol Applied",
        "description": "The protocol (set of recommendations) being followed by the provider who administered the dose.",
        "type": "Immunization_ProtocolApplied",
        "array": true
      }
    }
  },
  "Immunization_Performer": {
    "display": "Immunization Performer",
    "description": "Who performed event",
    "properties": {
      "function": {
        "key": "function",
        "display": "Function",
        "description": "Describes the type of performance (e.g. ordering provider, administering provider, etc.).",
        "type": "CodeableConcept"
      },
      "actor": {
        "key": "actor",
        "display": "Actor",
        "description": "The practitioner or organization who performed the action.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization"
        ]
      }
    },
    "backboneElement": true
  },
  "Immunization_Education": {
    "display": "Immunization Education",
    "description": "Educational material presented to patient",
    "properties": {
      "documentType": {
        "key": "documentType",
        "display": "Document Type",
        "description": "Identifier of the material presented to the patient.",
        "type": "string"
      },
      "reference": {
        "key": "reference",
        "display": "Reference",
        "description": "Reference pointer to the educational material given to the patient if the information was on line.",
        "type": "uri"
      },
      "publicationDate": {
        "key": "publicationDate",
        "display": "Publication Date",
        "description": "Date the educational material was published.",
        "type": "dateTime"
      },
      "presentationDate": {
        "key": "presentationDate",
        "display": "Presentation Date",
        "description": "Date the educational material was given to the patient.",
        "type": "dateTime"
      }
    },
    "backboneElement": true
  },
  "Immunization_Reaction": {
    "display": "Immunization Reaction",
    "description": "Details of a reaction that follows immunization",
    "properties": {
      "date": {
        "key": "date",
        "display": "Date",
        "description": "Date of reaction to the immunization.",
        "type": "dateTime"
      },
      "detail": {
        "key": "detail",
        "display": "Detail",
        "description": "Details of the reaction.",
        "type": "Reference",
        "targetProfile": [
          "Observation"
        ]
      },
      "reported": {
        "key": "reported",
        "display": "Reported",
        "description": "Self-reported indicator.",
        "type": "boolean"
      }
    },
    "backboneElement": true
  },
  "Immunization_ProtocolApplied": {
    "display": "Immunization Protocol Applied",
    "description": "Protocol followed by the provider",
    "properties": {
      "series": {
        "key": "series",
        "display": "Series",
        "description": "One possible path to achieve presumed immunity against a disease - within the context of an authority.",
        "type": "string"
      },
      "authority": {
        "key": "authority",
        "display": "Authority",
        "description": "Indicates the authority who published the protocol (e.g. ACIP) that is being followed.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "targetDisease": {
        "key": "targetDisease",
        "display": "Target Disease",
        "description": "The vaccine preventable disease the dose is being administered against.",
        "type": "CodeableConcept",
        "array": true
      },
      "doseNumber[x]": {
        "key": "doseNumber[x]",
        "display": "Dose Number[x]",
        "description": "Nominal position in a series.",
        "type": "positiveInt"
      },
      "seriesDoses[x]": {
        "key": "seriesDoses[x]",
        "display": "Series Doses[x]",
        "description": "The recommended number of doses to achieve immunity.",
        "type": "positiveInt"
      }
    },
    "backboneElement": true
  },
  "ImmunizationEvaluation": {
    "display": "ImmunizationEvaluation",
    "description": "Describes a comparison of an immunization event against published recommendations to determine if the administration is \"valid\" in relation to those  recommendations.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "A unique identifier assigned to this immunization evaluation record.",
        "type": "Identifier",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "Indicates the current status of the evaluation of the vaccination administration event.",
        "type": "enum",
        "enumValues": [
          "completed",
          "entered-in-error"
        ]
      },
      "patient": {
        "key": "patient",
        "display": "Patient",
        "description": "The individual for whom the evaluation is being done.",
        "type": "Reference",
        "targetProfile": [
          "Patient"
        ]
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "The date the evaluation of the vaccine administration event was performed.",
        "type": "dateTime"
      },
      "authority": {
        "key": "authority",
        "display": "Authority",
        "description": "Indicates the authority who published the protocol (e.g. ACIP).",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "targetDisease": {
        "key": "targetDisease",
        "display": "Target Disease",
        "description": "The vaccine preventable disease the dose is being evaluated against.",
        "type": "CodeableConcept"
      },
      "immunizationEvent": {
        "key": "immunizationEvent",
        "display": "Immunization Event",
        "description": "The vaccine administration event being evaluated.",
        "type": "Reference",
        "targetProfile": [
          "Immunization"
        ]
      },
      "doseStatus": {
        "key": "doseStatus",
        "display": "Dose Status",
        "description": "Indicates if the dose is valid or not valid with respect to the published recommendations.",
        "type": "CodeableConcept"
      },
      "doseStatusReason": {
        "key": "doseStatusReason",
        "display": "Dose Status Reason",
        "description": "Provides an explanation as to why the vaccine administration event is valid or not relative to the published recommendations.",
        "type": "CodeableConcept",
        "array": true
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "Additional information about the evaluation.",
        "type": "string"
      },
      "series": {
        "key": "series",
        "display": "Series",
        "description": "One possible path to achieve presumed immunity against a disease - within the context of an authority.",
        "type": "string"
      },
      "doseNumber[x]": {
        "key": "doseNumber[x]",
        "display": "Dose Number[x]",
        "description": "Nominal position in a series.",
        "type": "positiveInt"
      },
      "seriesDoses[x]": {
        "key": "seriesDoses[x]",
        "display": "Series Doses[x]",
        "description": "The recommended number of doses to achieve immunity.",
        "type": "positiveInt"
      }
    }
  },
  "ImmunizationRecommendation": {
    "display": "ImmunizationRecommendation",
    "description": "A patient's point-in-time set of recommendations (i.e. forecasting) according to a published schedule with optional supporting justification.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "A unique identifier assigned to this particular recommendation record.",
        "type": "Identifier",
        "array": true
      },
      "patient": {
        "key": "patient",
        "display": "Patient",
        "description": "The patient the recommendation(s) are for.",
        "type": "Reference",
        "targetProfile": [
          "Patient"
        ]
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "The date the immunization recommendation(s) were created.",
        "type": "dateTime"
      },
      "authority": {
        "key": "authority",
        "display": "Authority",
        "description": "Indicates the authority who published the protocol (e.g. ACIP).",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "recommendation": {
        "key": "recommendation",
        "display": "Recommendation",
        "description": "Vaccine administration recommendations.",
        "type": "ImmunizationRecommendation_Recommendation",
        "array": true
      }
    }
  },
  "ImmunizationRecommendation_Recommendation": {
    "display": "Immunization Recommendation Recommendation",
    "description": "Vaccine administration recommendations",
    "properties": {
      "vaccineCode": {
        "key": "vaccineCode",
        "display": "Vaccine Code",
        "description": "Vaccine(s) or vaccine group that pertain to the recommendation.",
        "type": "CodeableConcept",
        "array": true
      },
      "targetDisease": {
        "key": "targetDisease",
        "display": "Target Disease",
        "description": "The targeted disease for the recommendation.",
        "type": "CodeableConcept"
      },
      "contraindicatedVaccineCode": {
        "key": "contraindicatedVaccineCode",
        "display": "Contraindicated Vaccine Code",
        "description": "Vaccine(s) which should not be used to fulfill the recommendation.",
        "type": "CodeableConcept",
        "array": true
      },
      "forecastStatus": {
        "key": "forecastStatus",
        "display": "Forecast Status",
        "description": "Indicates the patient status with respect to the path to immunity for the target disease.",
        "type": "CodeableConcept"
      },
      "forecastReason": {
        "key": "forecastReason",
        "display": "Forecast Reason",
        "description": "The reason for the assigned forecast status.",
        "type": "CodeableConcept",
        "array": true
      },
      "dateCriterion": {
        "key": "dateCriterion",
        "display": "Date Criterion",
        "description": "Vaccine date recommendations.  For example, earliest date to administer, latest date to administer, etc.",
        "type": "ImmunizationRecommendation_Recommendation_DateCriterion",
        "array": true
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "Contains the description about the protocol under which the vaccine was administered.",
        "type": "string"
      },
      "series": {
        "key": "series",
        "display": "Series",
        "description": "One possible path to achieve presumed immunity against a disease - within the context of an authority.",
        "type": "string"
      },
      "doseNumber[x]": {
        "key": "doseNumber[x]",
        "display": "Dose Number[x]",
        "description": "Nominal position of the recommended dose in a series (e.g. dose 2 is the next recommended dose).",
        "type": "positiveInt"
      },
      "seriesDoses[x]": {
        "key": "seriesDoses[x]",
        "display": "Series Doses[x]",
        "description": "The recommended number of doses to achieve immunity.",
        "type": "positiveInt"
      },
      "supportingImmunization": {
        "key": "supportingImmunization",
        "display": "Supporting Immunization",
        "description": "Immunization event history and/or evaluation that supports the status and recommendation.",
        "type": "Reference",
        "targetProfile": [
          "Immunization",
          "ImmunizationEvaluation"
        ],
        "array": true
      },
      "supportingPatientInformation": {
        "key": "supportingPatientInformation",
        "display": "Supporting Patient Information",
        "description": "Patient Information that supports the status and recommendation.  This includes patient observations, adverse reactions and allergy/intolerance information.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ],
        "array": true
      }
    },
    "backboneElement": true
  },
  "ImmunizationRecommendation_Recommendation_DateCriterion": {
    "display": "Immunization Recommendation Recommendation_ Date Criterion",
    "description": "Dates governing proposed immunization",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "Date classification of recommendation.  For example, earliest date to give, latest date to give, etc.",
        "type": "CodeableConcept"
      },
      "value": {
        "key": "value",
        "display": "Value",
        "description": "The date whose meaning is specified by dateCriterion.code.",
        "type": "dateTime"
      }
    },
    "backboneElement": true
  },
  "ImplementationGuide": {
    "display": "ImplementationGuide",
    "description": "A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.",
    "properties": {
      "url": {
        "key": "url",
        "display": "Url",
        "description": "An absolute URI that is used to identify this implementation guide when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this implementation guide is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the implementation guide is stored on different servers.",
        "type": "uri"
      },
      "version": {
        "key": "version",
        "display": "Version",
        "description": "The identifier that is used to identify this version of the implementation guide when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the implementation guide author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
        "type": "string"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A natural language name identifying the implementation guide. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
        "type": "string"
      },
      "title": {
        "key": "title",
        "display": "Title",
        "description": "A short, descriptive, user-friendly title for the implementation guide.",
        "type": "string"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of this implementation guide. Enables tracking the life-cycle of the content.",
        "type": "enum",
        "enumValues": [
          "draft",
          "active",
          "retired",
          "unknown"
        ]
      },
      "experimental": {
        "key": "experimental",
        "display": "Experimental",
        "description": "A Boolean value to indicate that this implementation guide is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
        "type": "boolean"
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "The date  (and optionally time) when the implementation guide was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the implementation guide changes.",
        "type": "dateTime"
      },
      "publisher": {
        "key": "publisher",
        "display": "Publisher",
        "description": "The name of the organization or individual that published the implementation guide.",
        "type": "string"
      },
      "contact": {
        "key": "contact",
        "display": "Contact",
        "description": "Contact details to assist a user in finding and communicating with the publisher.",
        "type": "ContactDetail",
        "array": true
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A free text natural language description of the implementation guide from a consumer's perspective.",
        "type": "markdown"
      },
      "useContext": {
        "key": "useContext",
        "display": "Use Context",
        "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate implementation guide instances.",
        "type": "UsageContext",
        "array": true
      },
      "jurisdiction": {
        "key": "jurisdiction",
        "display": "Jurisdiction",
        "description": "A legal or geographic region in which the implementation guide is intended to be used.",
        "type": "CodeableConcept",
        "array": true
      },
      "copyright": {
        "key": "copyright",
        "display": "Copyright",
        "description": "A copyright statement relating to the implementation guide and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the implementation guide.",
        "type": "markdown"
      },
      "packageId": {
        "key": "packageId",
        "display": "Package Id",
        "description": "The NPM package name for this Implementation Guide, used in the NPM package distribution, which is the primary mechanism by which FHIR based tooling manages IG dependencies. This value must be globally unique, and should be assigned with care.",
        "type": "id"
      },
      "license": {
        "key": "license",
        "display": "License",
        "description": "The license that applies to this Implementation Guide, using an SPDX license code, or 'not-open-source'.",
        "type": "enum",
        "enumValues": [
          "SPDX license code for this IG (or not-open-source)"
        ]
      },
      "fhirVersion": {
        "key": "fhirVersion",
        "display": "Fhir Version",
        "description": "The version(s) of the FHIR specification that this ImplementationGuide targets - e.g. describes how to use. The value of this element is the formal version of the specification, without the revision number, e.g. [publication].[major].[minor], which is 4.0.1. for this version.",
        "type": "enum",
        "enumValues": [
          "FHIR Version(s) this Implementation Guide targets"
        ],
        "array": true
      },
      "dependsOn": {
        "key": "dependsOn",
        "display": "Depends On",
        "description": "Another implementation guide that this implementation depends on. Typically, an implementation guide uses value sets, profiles etc.defined in other implementation guides.",
        "type": "ImplementationGuide_DependsOn",
        "array": true
      },
      "global": {
        "key": "global",
        "display": "Global",
        "description": "A set of profiles that all resources covered by this implementation guide must conform to.",
        "type": "ImplementationGuide_Global",
        "array": true
      },
      "definition": {
        "key": "definition",
        "display": "Definition",
        "description": "The information needed by an IG publisher tool to publish the whole implementation guide.",
        "type": "ImplementationGuide_Definition"
      },
      "manifest": {
        "key": "manifest",
        "display": "Manifest",
        "description": "Information about an assembled implementation guide, created by the publication tooling.",
        "type": "ImplementationGuide_Manifest"
      }
    }
  },
  "ImplementationGuide_DependsOn": {
    "display": "Implementation Guide Depends On",
    "description": "Another Implementation guide this depends on",
    "properties": {
      "uri": {
        "key": "uri",
        "display": "Uri",
        "description": "A canonical reference to the Implementation guide for the dependency.",
        "type": "canonical"
      },
      "packageId": {
        "key": "packageId",
        "display": "Package Id",
        "description": "The NPM package name for the Implementation Guide that this IG depends on.",
        "type": "id"
      },
      "version": {
        "key": "version",
        "display": "Version",
        "description": "The version of the IG that is depended on, when the correct version is required to understand the IG correctly.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "ImplementationGuide_Global": {
    "display": "Implementation Guide Global",
    "description": "Profiles that apply globally",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The type of resource that all instances must conform to.",
        "type": "enum",
        "enumValues": [
          "Type this profile applies to"
        ]
      },
      "profile": {
        "key": "profile",
        "display": "Profile",
        "description": "A reference to the profile that all instances must conform to.",
        "type": "canonical"
      }
    },
    "backboneElement": true
  },
  "ImplementationGuide_Definition": {
    "display": "Implementation Guide Definition",
    "description": "Information needed to build the IG",
    "properties": {
      "grouping": {
        "key": "grouping",
        "display": "Grouping",
        "description": "A logical group of resources. Logical groups can be used when building pages.",
        "type": "ImplementationGuide_Definition_Grouping",
        "array": true
      },
      "resource": {
        "key": "resource",
        "display": "Resource",
        "description": "A resource that is part of the implementation guide. Conformance resources (value set, structure definition, capability statements etc.) are obvious candidates for inclusion, but any kind of resource can be included as an example resource.",
        "type": "ImplementationGuide_Definition_Resource",
        "array": true
      },
      "page": {
        "key": "page",
        "display": "Page",
        "description": "A page / section in the implementation guide. The root page is the implementation guide home page.",
        "type": "ImplementationGuide_Definition_Page"
      },
      "parameter": {
        "key": "parameter",
        "display": "Parameter",
        "description": "Defines how IG is built by tools.",
        "type": "ImplementationGuide_Definition_Parameter",
        "array": true
      },
      "template": {
        "key": "template",
        "display": "Template",
        "description": "A template for building resources.",
        "type": "ImplementationGuide_Definition_Template",
        "array": true
      }
    },
    "backboneElement": true
  },
  "ImplementationGuide_Definition_Grouping": {
    "display": "Implementation Guide Definition_ Grouping",
    "description": "Grouping used to present related resources in the IG",
    "properties": {
      "name": {
        "key": "name",
        "display": "Name",
        "description": "The human-readable title to display for the package of resources when rendering the implementation guide.",
        "type": "string"
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "Human readable text describing the package.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "ImplementationGuide_Definition_Resource": {
    "display": "Implementation Guide Definition_ Resource",
    "description": "Resource in the implementation guide",
    "properties": {
      "reference": {
        "key": "reference",
        "display": "Reference",
        "description": "Where this resource is found.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ]
      },
      "fhirVersion": {
        "key": "fhirVersion",
        "display": "Fhir Version",
        "description": "Indicates the FHIR Version(s) this artifact is intended to apply to. If no versions are specified, the resource is assumed to apply to all the versions stated in ImplementationGuide.fhirVersion.",
        "type": "enum",
        "enumValues": [
          "Versions this applies to (if different to IG)"
        ],
        "array": true
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A human assigned name for the resource. All resources SHOULD have a name, but the name may be extracted from the resource (e.g. ValueSet.name).",
        "type": "string"
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A description of the reason that a resource has been included in the implementation guide.",
        "type": "string"
      },
      "example[x]": {
        "key": "example[x]",
        "display": "Example[x]",
        "description": "If true or a reference, indicates the resource is an example instance.  If a reference is present, indicates that the example is an example of the specified profile.",
        "type": "boolean"
      },
      "groupingId": {
        "key": "groupingId",
        "display": "Grouping Id",
        "description": "Reference to the id of the grouping this resource appears in.",
        "type": "id"
      }
    },
    "backboneElement": true
  },
  "ImplementationGuide_Definition_Page": {
    "display": "Implementation Guide Definition_ Page",
    "description": "Page/Section in the Guide",
    "properties": {
      "name[x]": {
        "key": "name[x]",
        "display": "Name[x]",
        "description": "The source address for the page.",
        "type": "url"
      },
      "title": {
        "key": "title",
        "display": "Title",
        "description": "A short title used to represent this page in navigational structures such as table of contents, bread crumbs, etc.",
        "type": "string"
      },
      "generation": {
        "key": "generation",
        "display": "Generation",
        "description": "A code that indicates how the page is generated.",
        "type": "enum",
        "enumValues": [
          "html",
          "markdown",
          "xml",
          "generated"
        ]
      },
      "page": {
        "key": "page",
        "display": "Page",
        "description": "Nested Pages/Sections under this page.",
        "type": "UNKNOWN"
      }
    },
    "backboneElement": true
  },
  "ImplementationGuide_Definition_Parameter": {
    "display": "Implementation Guide Definition_ Parameter",
    "description": "Defines how IG is built by tools",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "apply | path-resource | path-pages | path-tx-cache | expansion-parameter | rule-broken-links | generate-xml | generate-json | generate-turtle | html-template.",
        "type": "enum",
        "enumValues": [
          "apply",
          "path-resource",
          "path-pages",
          "path-tx-cache",
          "expansion-parameter",
          "rule-broken-links",
          "generate-xml",
          "generate-json",
          "generate-turtle",
          "html-template"
        ]
      },
      "value": {
        "key": "value",
        "display": "Value",
        "description": "Value for named type.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "ImplementationGuide_Definition_Template": {
    "display": "Implementation Guide Definition_ Template",
    "description": "A template for building resources",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "Type of template specified.",
        "type": "enum",
        "enumValues": [
          "Type of template specified"
        ]
      },
      "source": {
        "key": "source",
        "display": "Source",
        "description": "The source location for the template.",
        "type": "string"
      },
      "scope": {
        "key": "scope",
        "display": "Scope",
        "description": "The scope in which the template applies.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "ImplementationGuide_Manifest": {
    "display": "Implementation Guide Manifest",
    "description": "Information about an assembled IG",
    "properties": {
      "rendering": {
        "key": "rendering",
        "display": "Rendering",
        "description": "A pointer to official web page, PDF or other rendering of the implementation guide.",
        "type": "url"
      },
      "resource": {
        "key": "resource",
        "display": "Resource",
        "description": "A resource that is part of the implementation guide. Conformance resources (value set, structure definition, capability statements etc.) are obvious candidates for inclusion, but any kind of resource can be included as an example resource.",
        "type": "ImplementationGuide_Manifest_Resource",
        "array": true
      },
      "page": {
        "key": "page",
        "display": "Page",
        "description": "Information about a page within the IG.",
        "type": "ImplementationGuide_Manifest_Page",
        "array": true
      },
      "image": {
        "key": "image",
        "display": "Image",
        "description": "Indicates a relative path to an image that exists within the IG.",
        "type": "string",
        "array": true
      },
      "other": {
        "key": "other",
        "display": "Other",
        "description": "Indicates the relative path of an additional non-page, non-image file that is part of the IG - e.g. zip, jar and similar files that could be the target of a hyperlink in a derived IG.",
        "type": "string",
        "array": true
      }
    },
    "backboneElement": true
  },
  "ImplementationGuide_Manifest_Resource": {
    "display": "Implementation Guide Manifest_ Resource",
    "description": "Resource in the implementation guide",
    "properties": {
      "reference": {
        "key": "reference",
        "display": "Reference",
        "description": "Where this resource is found.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ]
      },
      "example[x]": {
        "key": "example[x]",
        "display": "Example[x]",
        "description": "If true or a reference, indicates the resource is an example instance.  If a reference is present, indicates that the example is an example of the specified profile.",
        "type": "boolean"
      },
      "relativePath": {
        "key": "relativePath",
        "display": "Relative Path",
        "description": "The relative path for primary page for this resource within the IG.",
        "type": "url"
      }
    },
    "backboneElement": true
  },
  "ImplementationGuide_Manifest_Page": {
    "display": "Implementation Guide Manifest_ Page",
    "description": "HTML page within the parent IG",
    "properties": {
      "name": {
        "key": "name",
        "display": "Name",
        "description": "Relative path to the page.",
        "type": "string"
      },
      "title": {
        "key": "title",
        "display": "Title",
        "description": "Label for the page intended for human display.",
        "type": "string"
      },
      "anchor": {
        "key": "anchor",
        "display": "Anchor",
        "description": "The name of an anchor available on the page.",
        "type": "string",
        "array": true
      }
    },
    "backboneElement": true
  },
  "InsurancePlan": {
    "display": "InsurancePlan",
    "description": "Details of a Health Insurance product/plan provided by an organization.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Business identifiers assigned to this health insurance product which remain constant as the resource is updated and propagates from server to server.",
        "type": "Identifier",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The current state of the health insurance product.",
        "type": "enum",
        "enumValues": [
          "draft",
          "active",
          "retired",
          "unknown"
        ]
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The kind of health insurance product.",
        "type": "CodeableConcept",
        "array": true
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "Official name of the health insurance product as designated by the owner.",
        "type": "string"
      },
      "alias": {
        "key": "alias",
        "display": "Alias",
        "description": "A list of alternate names that the product is known as, or was known as in the past.",
        "type": "string",
        "array": true
      },
      "period": {
        "key": "period",
        "display": "Period",
        "description": "The period of time that the health insurance product is available.",
        "type": "Period"
      },
      "ownedBy": {
        "key": "ownedBy",
        "display": "Owned By",
        "description": "The entity that is providing  the health insurance product and underwriting the risk.  This is typically an insurance carriers, other third-party payers, or health plan sponsors comonly referred to as 'payers'.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "administeredBy": {
        "key": "administeredBy",
        "display": "Administered By",
        "description": "An organization which administer other services such as underwriting, customer service and/or claims processing on behalf of the health insurance product owner.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "coverageArea": {
        "key": "coverageArea",
        "display": "Coverage Area",
        "description": "The geographic region in which a health insurance product's benefits apply.",
        "type": "Reference",
        "targetProfile": [
          "Location"
        ],
        "array": true
      },
      "contact": {
        "key": "contact",
        "display": "Contact",
        "description": "The contact for the health insurance product for a certain purpose.",
        "type": "InsurancePlan_Contact",
        "array": true
      },
      "endpoint": {
        "key": "endpoint",
        "display": "Endpoint",
        "description": "The technical endpoints providing access to services operated for the health insurance product.",
        "type": "Reference",
        "targetProfile": [
          "Endpoint"
        ],
        "array": true
      },
      "network": {
        "key": "network",
        "display": "Network",
        "description": "Reference to the network included in the health insurance product.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ],
        "array": true
      },
      "coverage": {
        "key": "coverage",
        "display": "Coverage",
        "description": "Details about the coverage offered by the insurance product.",
        "type": "InsurancePlan_Coverage",
        "array": true
      },
      "plan": {
        "key": "plan",
        "display": "Plan",
        "description": "Details about an insurance plan.",
        "type": "InsurancePlan_Plan",
        "array": true
      }
    }
  },
  "InsurancePlan_Contact": {
    "display": "Insurance Plan Contact",
    "description": "Contact for the product",
    "properties": {
      "purpose": {
        "key": "purpose",
        "display": "Purpose",
        "description": "Indicates a purpose for which the contact can be reached.",
        "type": "CodeableConcept"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A name associated with the contact.",
        "type": "HumanName"
      },
      "telecom": {
        "key": "telecom",
        "display": "Telecom",
        "description": "A contact detail (e.g. a telephone number or an email address) by which the party may be contacted.",
        "type": "ContactPoint",
        "array": true
      },
      "address": {
        "key": "address",
        "display": "Address",
        "description": "Visiting or postal addresses for the contact.",
        "type": "Address"
      }
    },
    "backboneElement": true
  },
  "InsurancePlan_Coverage": {
    "display": "Insurance Plan Coverage",
    "description": "Coverage details",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Type of coverage  (Medical; Dental; Mental Health; Substance Abuse; Vision; Drug; Short Term; Long Term Care; Hospice; Home Health).",
        "type": "CodeableConcept"
      },
      "network": {
        "key": "network",
        "display": "Network",
        "description": "Reference to the network that providing the type of coverage.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ],
        "array": true
      },
      "benefit": {
        "key": "benefit",
        "display": "Benefit",
        "description": "Specific benefits under this type of coverage.",
        "type": "InsurancePlan_Coverage_Benefit",
        "array": true
      }
    },
    "backboneElement": true
  },
  "InsurancePlan_Coverage_Benefit": {
    "display": "Insurance Plan Coverage_ Benefit",
    "description": "List of benefits",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Type of benefit (primary care; speciality care; inpatient; outpatient).",
        "type": "CodeableConcept"
      },
      "requirement": {
        "key": "requirement",
        "display": "Requirement",
        "description": "The referral requirements to have access/coverage for this benefit.",
        "type": "string"
      },
      "limit": {
        "key": "limit",
        "display": "Limit",
        "description": "The specific limits on the benefit.",
        "type": "InsurancePlan_Coverage_Benefit_Limit",
        "array": true
      }
    },
    "backboneElement": true
  },
  "InsurancePlan_Coverage_Benefit_Limit": {
    "display": "Insurance Plan Coverage_ Benefit_ Limit",
    "description": "Benefit limits",
    "properties": {
      "value": {
        "key": "value",
        "display": "Value",
        "description": "The maximum amount of a service item a plan will pay for a covered benefit.  For examples. wellness visits, or eyeglasses.",
        "type": "Quantity"
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "The specific limit on the benefit.",
        "type": "CodeableConcept"
      }
    },
    "backboneElement": true
  },
  "InsurancePlan_Plan": {
    "display": "Insurance Plan Plan",
    "description": "Plan details",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Business identifiers assigned to this health insurance plan which remain constant as the resource is updated and propagates from server to server.",
        "type": "Identifier",
        "array": true
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Type of plan. For example, \"Platinum\" or \"High Deductable\".",
        "type": "CodeableConcept"
      },
      "coverageArea": {
        "key": "coverageArea",
        "display": "Coverage Area",
        "description": "The geographic region in which a health insurance plan's benefits apply.",
        "type": "Reference",
        "targetProfile": [
          "Location"
        ],
        "array": true
      },
      "network": {
        "key": "network",
        "display": "Network",
        "description": "Reference to the network that providing the type of coverage.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ],
        "array": true
      },
      "generalCost": {
        "key": "generalCost",
        "display": "General Cost",
        "description": "Overall costs associated with the plan.",
        "type": "InsurancePlan_Plan_GeneralCost",
        "array": true
      },
      "specificCost": {
        "key": "specificCost",
        "display": "Specific Cost",
        "description": "Costs associated with the coverage provided by the product.",
        "type": "InsurancePlan_Plan_SpecificCost",
        "array": true
      }
    },
    "backboneElement": true
  },
  "InsurancePlan_Plan_GeneralCost": {
    "display": "Insurance Plan Plan_ General Cost",
    "description": "Overall costs",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Type of cost.",
        "type": "CodeableConcept"
      },
      "groupSize": {
        "key": "groupSize",
        "display": "Group Size",
        "description": "Number of participants enrolled in the plan.",
        "type": "positiveInt"
      },
      "cost": {
        "key": "cost",
        "display": "Cost",
        "description": "Value of the cost.",
        "type": "Money"
      },
      "comment": {
        "key": "comment",
        "display": "Comment",
        "description": "Additional information about the general costs associated with this plan.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "InsurancePlan_Plan_SpecificCost": {
    "display": "Insurance Plan Plan_ Specific Cost",
    "description": "Specific costs",
    "properties": {
      "category": {
        "key": "category",
        "display": "Category",
        "description": "General category of benefit (Medical; Dental; Vision; Drug; Mental Health; Substance Abuse; Hospice, Home Health).",
        "type": "CodeableConcept"
      },
      "benefit": {
        "key": "benefit",
        "display": "Benefit",
        "description": "List of the specific benefits under this category of benefit.",
        "type": "InsurancePlan_Plan_SpecificCost_Benefit",
        "array": true
      }
    },
    "backboneElement": true
  },
  "InsurancePlan_Plan_SpecificCost_Benefit": {
    "display": "Insurance Plan Plan_ Specific Cost_ Benefit",
    "description": "Benefits list",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Type of specific benefit (preventative; primary care office visit; speciality office visit; hospitalization; emergency room; urgent care).",
        "type": "CodeableConcept"
      },
      "cost": {
        "key": "cost",
        "display": "Cost",
        "description": "List of the costs associated with a specific benefit.",
        "type": "InsurancePlan_Plan_SpecificCost_Benefit_Cost",
        "array": true
      }
    },
    "backboneElement": true
  },
  "InsurancePlan_Plan_SpecificCost_Benefit_Cost": {
    "display": "Insurance Plan Plan_ Specific Cost_ Benefit_ Cost",
    "description": "List of the costs",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Type of cost (copay; individual cap; family cap; coinsurance; deductible).",
        "type": "CodeableConcept"
      },
      "applicability": {
        "key": "applicability",
        "display": "Applicability",
        "description": "Whether the cost applies to in-network or out-of-network providers (in-network; out-of-network; other).",
        "type": "CodeableConcept"
      },
      "qualifiers": {
        "key": "qualifiers",
        "display": "Qualifiers",
        "description": "Additional information about the cost, such as information about funding sources (e.g. HSA, HRA, FSA, RRA).",
        "type": "CodeableConcept",
        "array": true
      },
      "value": {
        "key": "value",
        "display": "Value",
        "description": "The actual cost value. (some of the costs may be represented as percentages rather than currency, e.g. 10% coinsurance).",
        "type": "Quantity"
      }
    },
    "backboneElement": true
  },
  "Invoice": {
    "display": "Invoice",
    "description": "Invoice containing collected ChargeItems from an Account with calculated individual and total price for Billing purpose.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Identifier of this Invoice, often used for reference in correspondence about this invoice or for tracking of payments.",
        "type": "Identifier",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The current state of the Invoice.",
        "type": "enum",
        "enumValues": [
          "draft",
          "issued",
          "balanced",
          "cancelled",
          "entered-in-error"
        ]
      },
      "cancelledReason": {
        "key": "cancelledReason",
        "display": "Cancelled Reason",
        "description": "In case of Invoice cancellation a reason must be given (entered in error, superseded by corrected invoice etc.).",
        "type": "string"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Type of Invoice depending on domain, realm an usage (e.g. internal/external, dental, preliminary).",
        "type": "CodeableConcept"
      },
      "subject": {
        "key": "subject",
        "display": "Subject",
        "description": "The individual or set of individuals receiving the goods and services billed in this invoice.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Group"
        ]
      },
      "recipient": {
        "key": "recipient",
        "display": "Recipient",
        "description": "The individual or Organization responsible for balancing of this invoice.",
        "type": "Reference",
        "targetProfile": [
          "Organization",
          "Patient",
          "RelatedPerson"
        ]
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "Date/time(s) of when this Invoice was posted.",
        "type": "dateTime"
      },
      "participant": {
        "key": "participant",
        "display": "Participant",
        "description": "Indicates who or what performed or participated in the charged service.",
        "type": "Invoice_Participant",
        "array": true
      },
      "issuer": {
        "key": "issuer",
        "display": "Issuer",
        "description": "The organizationissuing the Invoice.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "account": {
        "key": "account",
        "display": "Account",
        "description": "Account which is supposed to be balanced with this Invoice.",
        "type": "Reference",
        "targetProfile": [
          "Account"
        ]
      },
      "lineItem": {
        "key": "lineItem",
        "display": "Line Item",
        "description": "Each line item represents one charge for goods and services rendered. Details such as date, code and amount are found in the referenced ChargeItem resource.",
        "type": "Invoice_LineItem",
        "array": true
      },
      "totalPriceComponent": {
        "key": "totalPriceComponent",
        "display": "Total Price Component",
        "description": "The total amount for the Invoice may be calculated as the sum of the line items with surcharges/deductions that apply in certain conditions.  The priceComponent element can be used to offer transparency to the recipient of the Invoice of how the total price was calculated.",
        "type": "UNKNOWN"
      },
      "totalNet": {
        "key": "totalNet",
        "display": "Total Net",
        "description": "Invoice total , taxes excluded.",
        "type": "Money"
      },
      "totalGross": {
        "key": "totalGross",
        "display": "Total Gross",
        "description": "Invoice total, tax included.",
        "type": "Money"
      },
      "paymentTerms": {
        "key": "paymentTerms",
        "display": "Payment Terms",
        "description": "Payment details such as banking details, period of payment, deductibles, methods of payment.",
        "type": "markdown"
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "Comments made about the invoice by the issuer, subject, or other participants.",
        "type": "Annotation",
        "array": true
      }
    }
  },
  "Invoice_Participant": {
    "display": "Invoice Participant",
    "description": "Participant in creation of this Invoice",
    "properties": {
      "role": {
        "key": "role",
        "display": "Role",
        "description": "Describes the type of involvement (e.g. transcriptionist, creator etc.). If the invoice has been created automatically, the Participant may be a billing engine or another kind of device.",
        "type": "CodeableConcept"
      },
      "actor": {
        "key": "actor",
        "display": "Actor",
        "description": "The device, practitioner, etc. who performed or participated in the service.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "Organization",
          "Patient",
          "PractitionerRole",
          "Device",
          "RelatedPerson"
        ]
      }
    },
    "backboneElement": true
  },
  "Invoice_LineItem": {
    "display": "Invoice Line Item",
    "description": "Line items of this Invoice",
    "properties": {
      "sequence": {
        "key": "sequence",
        "display": "Sequence",
        "description": "Sequence in which the items appear on the invoice.",
        "type": "positiveInt"
      },
      "chargeItem[x]": {
        "key": "chargeItem[x]",
        "display": "Charge Item[x]",
        "description": "The ChargeItem contains information such as the billing code, date, amount etc. If no further details are required for the lineItem, inline billing codes can be added using the CodeableConcept data type instead of the Reference.",
        "type": "Reference",
        "targetProfile": [
          "ChargeItem"
        ]
      },
      "priceComponent": {
        "key": "priceComponent",
        "display": "Price Component",
        "description": "The price for a ChargeItem may be calculated as a base price with surcharges/deductions that apply in certain conditions. A ChargeItemDefinition resource that defines the prices, factors and conditions that apply to a billing code is currently under development. The priceComponent element can be used to offer transparency to the recipient of the Invoice as to how the prices have been calculated.",
        "type": "Invoice_LineItem_PriceComponent",
        "array": true
      }
    },
    "backboneElement": true
  },
  "Invoice_LineItem_PriceComponent": {
    "display": "Invoice Line Item_ Price Component",
    "description": "Components of total line item price",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "This code identifies the type of the component.",
        "type": "enum",
        "enumValues": [
          "base",
          "surcharge",
          "deduction",
          "discount",
          "tax",
          "informational"
        ]
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "A code that identifies the component. Codes may be used to differentiate between kinds of taxes, surcharges, discounts etc.",
        "type": "CodeableConcept"
      },
      "factor": {
        "key": "factor",
        "display": "Factor",
        "description": "The factor that has been applied on the base price for calculating this component.",
        "type": "decimal"
      },
      "amount": {
        "key": "amount",
        "display": "Amount",
        "description": "The amount calculated for this component.",
        "type": "Money"
      }
    },
    "backboneElement": true
  },
  "Library": {
    "display": "Library",
    "description": "The Library resource is a general-purpose container for knowledge asset definitions. It can be used to describe and expose existing knowledge assets such as logic libraries and information model descriptions, as well as to describe a collection of knowledge assets.",
    "properties": {
      "url": {
        "key": "url",
        "display": "Url",
        "description": "An absolute URI that is used to identify this library when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this library is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the library is stored on different servers.",
        "type": "uri"
      },
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "A formal identifier that is used to identify this library when it is represented in other formats, or referenced in a specification, model, design or an instance. e.g. CMS or NQF identifiers for a measure artifact. Note that at least one identifier is required for non-experimental active artifacts.",
        "type": "Identifier",
        "array": true
      },
      "version": {
        "key": "version",
        "display": "Version",
        "description": "The identifier that is used to identify this version of the library when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the library author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence. To provide a version consistent with the Decision Support Service specification, use the format Major.Minor.Revision (e.g. 1.0.0). For more information on versioning knowledge assets, refer to the Decision Support Service specification. Note that a version is required for non-experimental active artifacts.",
        "type": "string"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A natural language name identifying the library. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
        "type": "string"
      },
      "title": {
        "key": "title",
        "display": "Title",
        "description": "A short, descriptive, user-friendly title for the library.",
        "type": "string"
      },
      "subtitle": {
        "key": "subtitle",
        "display": "Subtitle",
        "description": "An explanatory or alternate title for the library giving additional information about its content.",
        "type": "string"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of this library. Enables tracking the life-cycle of the content.",
        "type": "enum",
        "enumValues": [
          "draft",
          "active",
          "retired",
          "unknown"
        ]
      },
      "experimental": {
        "key": "experimental",
        "display": "Experimental",
        "description": "A Boolean value to indicate that this library is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
        "type": "boolean"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Identifies the type of library such as a Logic Library, Model Definition, Asset Collection, or Module Definition.",
        "type": "CodeableConcept"
      },
      "subject[x]": {
        "key": "subject[x]",
        "display": "Subject[x]",
        "description": "A code or group definition that describes the intended subject of the contents of the library.",
        "type": "CodeableConcept"
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "The date  (and optionally time) when the library was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the library changes.",
        "type": "dateTime"
      },
      "publisher": {
        "key": "publisher",
        "display": "Publisher",
        "description": "The name of the organization or individual that published the library.",
        "type": "string"
      },
      "contact": {
        "key": "contact",
        "display": "Contact",
        "description": "Contact details to assist a user in finding and communicating with the publisher.",
        "type": "ContactDetail",
        "array": true
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A free text natural language description of the library from a consumer's perspective.",
        "type": "markdown"
      },
      "useContext": {
        "key": "useContext",
        "display": "Use Context",
        "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate library instances.",
        "type": "UsageContext",
        "array": true
      },
      "jurisdiction": {
        "key": "jurisdiction",
        "display": "Jurisdiction",
        "description": "A legal or geographic region in which the library is intended to be used.",
        "type": "CodeableConcept",
        "array": true
      },
      "purpose": {
        "key": "purpose",
        "display": "Purpose",
        "description": "Explanation of why this library is needed and why it has been designed as it has.",
        "type": "markdown"
      },
      "usage": {
        "key": "usage",
        "display": "Usage",
        "description": "A detailed description of how the library is used from a clinical perspective.",
        "type": "string"
      },
      "copyright": {
        "key": "copyright",
        "display": "Copyright",
        "description": "A copyright statement relating to the library and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the library.",
        "type": "markdown"
      },
      "approvalDate": {
        "key": "approvalDate",
        "display": "Approval Date",
        "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
        "type": "date"
      },
      "lastReviewDate": {
        "key": "lastReviewDate",
        "display": "Last Review Date",
        "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
        "type": "date"
      },
      "effectivePeriod": {
        "key": "effectivePeriod",
        "display": "Effective Period",
        "description": "The period during which the library content was or is planned to be in active use.",
        "type": "Period"
      },
      "topic": {
        "key": "topic",
        "display": "Topic",
        "description": "Descriptive topics related to the content of the library. Topics provide a high-level categorization of the library that can be useful for filtering and searching.",
        "type": "CodeableConcept",
        "array": true
      },
      "author": {
        "key": "author",
        "display": "Author",
        "description": "An individiual or organization primarily involved in the creation and maintenance of the content.",
        "type": "ContactDetail",
        "array": true
      },
      "editor": {
        "key": "editor",
        "display": "Editor",
        "description": "An individual or organization primarily responsible for internal coherence of the content.",
        "type": "ContactDetail",
        "array": true
      },
      "reviewer": {
        "key": "reviewer",
        "display": "Reviewer",
        "description": "An individual or organization primarily responsible for review of some aspect of the content.",
        "type": "ContactDetail",
        "array": true
      },
      "endorser": {
        "key": "endorser",
        "display": "Endorser",
        "description": "An individual or organization responsible for officially endorsing the content for use in some setting.",
        "type": "ContactDetail",
        "array": true
      },
      "relatedArtifact": {
        "key": "relatedArtifact",
        "display": "Related Artifact",
        "description": "Related artifacts such as additional documentation, justification, or bibliographic references.",
        "type": "RelatedArtifact",
        "array": true
      },
      "parameter": {
        "key": "parameter",
        "display": "Parameter",
        "description": "The parameter element defines parameters used by the library.",
        "type": "ParameterDefinition",
        "array": true
      },
      "dataRequirement": {
        "key": "dataRequirement",
        "display": "Data Requirement",
        "description": "Describes a set of data that must be provided in order to be able to successfully perform the computations defined by the library.",
        "type": "DataRequirement",
        "array": true
      },
      "content": {
        "key": "content",
        "display": "Content",
        "description": "The content of the library as an Attachment. The content may be a reference to a url, or may be directly embedded as a base-64 string. Either way, the contentType of the attachment determines how to interpret the content.",
        "type": "Attachment",
        "array": true
      }
    }
  },
  "Linkage": {
    "display": "Linkage",
    "description": "Identifies two or more records (resource instances) that refer to the same real-world \"occurrence\".",
    "properties": {
      "active": {
        "key": "active",
        "display": "Active",
        "description": "Indicates whether the asserted set of linkages are considered to be \"in effect\".",
        "type": "boolean"
      },
      "author": {
        "key": "author",
        "display": "Author",
        "description": "Identifies the user or organization responsible for asserting the linkages as well as the user or organization who establishes the context in which the nature of each linkage is evaluated.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization"
        ]
      },
      "item": {
        "key": "item",
        "display": "Item",
        "description": "Identifies which record considered as the reference to the same real-world occurrence as well as how the items should be evaluated within the collection of linked items.",
        "type": "Linkage_Item",
        "array": true
      }
    }
  },
  "Linkage_Item": {
    "display": "Linkage Item",
    "description": "Item to be linked",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Distinguishes which item is \"source of truth\" (if any) and which items are no longer considered to be current representations.",
        "type": "enum",
        "enumValues": [
          "source",
          "alternate",
          "historical"
        ]
      },
      "resource": {
        "key": "resource",
        "display": "Resource",
        "description": "The resource instance being linked as part of the group.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ]
      }
    },
    "backboneElement": true
  },
  "List": {
    "display": "List",
    "description": "A list is a curated collection of resources.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Identifier for the List assigned for business purposes outside the context of FHIR.",
        "type": "Identifier",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "Indicates the current state of this list.",
        "type": "enum",
        "enumValues": [
          "current",
          "retired",
          "entered-in-error"
        ]
      },
      "mode": {
        "key": "mode",
        "display": "Mode",
        "description": "How this list was prepared - whether it is a working list that is suitable for being maintained on an ongoing basis, or if it represents a snapshot of a list of items from another source, or whether it is a prepared list where items may be marked as added, modified or deleted.",
        "type": "enum",
        "enumValues": [
          "working",
          "snapshot",
          "changes"
        ]
      },
      "title": {
        "key": "title",
        "display": "Title",
        "description": "A label for the list assigned by the author.",
        "type": "string"
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "This code defines the purpose of the list - why it was created.",
        "type": "CodeableConcept"
      },
      "subject": {
        "key": "subject",
        "display": "Subject",
        "description": "The common subject (or patient) of the resources that are in the list if there is one.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Group",
          "Device",
          "Location"
        ]
      },
      "encounter": {
        "key": "encounter",
        "display": "Encounter",
        "description": "The encounter that is the context in which this list was created.",
        "type": "Reference",
        "targetProfile": [
          "Encounter"
        ]
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "The date that the list was prepared.",
        "type": "dateTime"
      },
      "source": {
        "key": "source",
        "display": "Source",
        "description": "The entity responsible for deciding what the contents of the list were. Where the list was created by a human, this is the same as the author of the list.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Patient",
          "Device"
        ]
      },
      "orderedBy": {
        "key": "orderedBy",
        "display": "Ordered By",
        "description": "What order applies to the items in the list.",
        "type": "CodeableConcept"
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "Comments that apply to the overall list.",
        "type": "Annotation",
        "array": true
      },
      "entry": {
        "key": "entry",
        "display": "Entry",
        "description": "Entries in this list.",
        "type": "List_Entry",
        "array": true
      },
      "emptyReason": {
        "key": "emptyReason",
        "display": "Empty Reason",
        "description": "If the list is empty, why the list is empty.",
        "type": "CodeableConcept"
      }
    }
  },
  "List_Entry": {
    "display": "List Entry",
    "description": "Entries in the list",
    "properties": {
      "flag": {
        "key": "flag",
        "display": "Flag",
        "description": "The flag allows the system constructing the list to indicate the role and significance of the item in the list.",
        "type": "CodeableConcept"
      },
      "deleted": {
        "key": "deleted",
        "display": "Deleted",
        "description": "True if this item is marked as deleted in the list.",
        "type": "boolean"
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "When this item was added to the list.",
        "type": "dateTime"
      },
      "item": {
        "key": "item",
        "display": "Item",
        "description": "A reference to the actual resource from which data was derived.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ]
      }
    },
    "backboneElement": true
  },
  "Location": {
    "display": "Location",
    "description": "Details and position information for a physical place where services are provided and resources and participants may be stored, found, contained, or accommodated.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Unique code or number identifying the location to its users.",
        "type": "Identifier",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status property covers the general availability of the resource, not the current value which may be covered by the operationStatus, or by a schedule/slots if they are configured for the location.",
        "type": "enum",
        "enumValues": [
          "active",
          "suspended",
          "inactive"
        ]
      },
      "operationalStatus": {
        "key": "operationalStatus",
        "display": "Operational Status",
        "description": "The operational status covers operation values most relevant to beds (but can also apply to rooms/units/chairs/etc. such as an isolation unit/dialysis chair). This typically covers concepts such as contamination, housekeeping, and other activities like maintenance.",
        "type": "Coding"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "Name of the location as used by humans. Does not need to be unique.",
        "type": "string"
      },
      "alias": {
        "key": "alias",
        "display": "Alias",
        "description": "A list of alternate names that the location is known as, or was known as, in the past.",
        "type": "string",
        "array": true
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "Description of the Location, which helps in finding or referencing the place.",
        "type": "string"
      },
      "mode": {
        "key": "mode",
        "display": "Mode",
        "description": "Indicates whether a resource instance represents a specific location or a class of locations.",
        "type": "enum",
        "enumValues": [
          "instance",
          "kind"
        ]
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Indicates the type of function performed at the location.",
        "type": "CodeableConcept",
        "array": true
      },
      "telecom": {
        "key": "telecom",
        "display": "Telecom",
        "description": "The contact details of communication devices available at the location. This can include phone numbers, fax numbers, mobile numbers, email addresses and web sites.",
        "type": "ContactPoint",
        "array": true
      },
      "address": {
        "key": "address",
        "display": "Address",
        "description": "Physical location.",
        "type": "Address"
      },
      "physicalType": {
        "key": "physicalType",
        "display": "Physical Type",
        "description": "Physical form of the location, e.g. building, room, vehicle, road.",
        "type": "CodeableConcept"
      },
      "position": {
        "key": "position",
        "display": "Position",
        "description": "The absolute geographic location of the Location, expressed using the WGS84 datum (This is the same co-ordinate system used in KML).",
        "type": "Location_Position"
      },
      "managingOrganization": {
        "key": "managingOrganization",
        "display": "Managing Organization",
        "description": "The organization responsible for the provisioning and upkeep of the location.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "partOf": {
        "key": "partOf",
        "display": "Part Of",
        "description": "Another Location of which this Location is physically a part of.",
        "type": "Reference",
        "targetProfile": [
          "Location"
        ]
      },
      "hoursOfOperation": {
        "key": "hoursOfOperation",
        "display": "Hours Of Operation",
        "description": "What days/times during a week is this location usually open.",
        "type": "Location_HoursOfOperation",
        "array": true
      },
      "availabilityExceptions": {
        "key": "availabilityExceptions",
        "display": "Availability Exceptions",
        "description": "A description of when the locations opening ours are different to normal, e.g. public holiday availability. Succinctly describing all possible exceptions to normal site availability as detailed in the opening hours Times.",
        "type": "string"
      },
      "endpoint": {
        "key": "endpoint",
        "display": "Endpoint",
        "description": "Technical endpoints providing access to services operated for the location.",
        "type": "Reference",
        "targetProfile": [
          "Endpoint"
        ],
        "array": true
      }
    }
  },
  "Location_Position": {
    "display": "Location Position",
    "description": "The absolute geographic location",
    "properties": {
      "longitude": {
        "key": "longitude",
        "display": "Longitude",
        "description": "Longitude. The value domain and the interpretation are the same as for the text of the longitude element in KML (see notes below).",
        "type": "decimal"
      },
      "latitude": {
        "key": "latitude",
        "display": "Latitude",
        "description": "Latitude. The value domain and the interpretation are the same as for the text of the latitude element in KML (see notes below).",
        "type": "decimal"
      },
      "altitude": {
        "key": "altitude",
        "display": "Altitude",
        "description": "Altitude. The value domain and the interpretation are the same as for the text of the altitude element in KML (see notes below).",
        "type": "decimal"
      }
    },
    "backboneElement": true
  },
  "Location_HoursOfOperation": {
    "display": "Location Hours Of Operation",
    "description": "What days/times during a week is this location usually open",
    "properties": {
      "daysOfWeek": {
        "key": "daysOfWeek",
        "display": "Days Of Week",
        "description": "Indicates which days of the week are available between the start and end Times.",
        "type": "enum",
        "enumValues": [
          "mon",
          "tue",
          "wed",
          "thu",
          "fri",
          "sat",
          "sun"
        ],
        "array": true
      },
      "allDay": {
        "key": "allDay",
        "display": "All Day",
        "description": "The Location is open all day.",
        "type": "boolean"
      },
      "openingTime": {
        "key": "openingTime",
        "display": "Opening Time",
        "description": "Time that the Location opens.",
        "type": "time"
      },
      "closingTime": {
        "key": "closingTime",
        "display": "Closing Time",
        "description": "Time that the Location closes.",
        "type": "time"
      }
    },
    "backboneElement": true
  },
  "Measure": {
    "display": "Measure",
    "description": "The Measure resource provides the definition of a quality measure.",
    "properties": {
      "url": {
        "key": "url",
        "display": "Url",
        "description": "An absolute URI that is used to identify this measure when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this measure is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the measure is stored on different servers.",
        "type": "uri"
      },
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "A formal identifier that is used to identify this measure when it is represented in other formats, or referenced in a specification, model, design or an instance.",
        "type": "Identifier",
        "array": true
      },
      "version": {
        "key": "version",
        "display": "Version",
        "description": "The identifier that is used to identify this version of the measure when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the measure author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence. To provide a version consistent with the Decision Support Service specification, use the format Major.Minor.Revision (e.g. 1.0.0). For more information on versioning knowledge assets, refer to the Decision Support Service specification. Note that a version is required for non-experimental active artifacts.",
        "type": "string"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A natural language name identifying the measure. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
        "type": "string"
      },
      "title": {
        "key": "title",
        "display": "Title",
        "description": "A short, descriptive, user-friendly title for the measure.",
        "type": "string"
      },
      "subtitle": {
        "key": "subtitle",
        "display": "Subtitle",
        "description": "An explanatory or alternate title for the measure giving additional information about its content.",
        "type": "string"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of this measure. Enables tracking the life-cycle of the content.",
        "type": "enum",
        "enumValues": [
          "draft",
          "active",
          "retired",
          "unknown"
        ]
      },
      "experimental": {
        "key": "experimental",
        "display": "Experimental",
        "description": "A Boolean value to indicate that this measure is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
        "type": "boolean"
      },
      "subject[x]": {
        "key": "subject[x]",
        "display": "Subject[x]",
        "description": "The intended subjects for the measure. If this element is not provided, a Patient subject is assumed, but the subject of the measure can be anything.",
        "type": "CodeableConcept"
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "The date  (and optionally time) when the measure was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the measure changes.",
        "type": "dateTime"
      },
      "publisher": {
        "key": "publisher",
        "display": "Publisher",
        "description": "The name of the organization or individual that published the measure.",
        "type": "string"
      },
      "contact": {
        "key": "contact",
        "display": "Contact",
        "description": "Contact details to assist a user in finding and communicating with the publisher.",
        "type": "ContactDetail",
        "array": true
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A free text natural language description of the measure from a consumer's perspective.",
        "type": "markdown"
      },
      "useContext": {
        "key": "useContext",
        "display": "Use Context",
        "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate measure instances.",
        "type": "UsageContext",
        "array": true
      },
      "jurisdiction": {
        "key": "jurisdiction",
        "display": "Jurisdiction",
        "description": "A legal or geographic region in which the measure is intended to be used.",
        "type": "CodeableConcept",
        "array": true
      },
      "purpose": {
        "key": "purpose",
        "display": "Purpose",
        "description": "Explanation of why this measure is needed and why it has been designed as it has.",
        "type": "markdown"
      },
      "usage": {
        "key": "usage",
        "display": "Usage",
        "description": "A detailed description, from a clinical perspective, of how the measure is used.",
        "type": "string"
      },
      "copyright": {
        "key": "copyright",
        "display": "Copyright",
        "description": "A copyright statement relating to the measure and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the measure.",
        "type": "markdown"
      },
      "approvalDate": {
        "key": "approvalDate",
        "display": "Approval Date",
        "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
        "type": "date"
      },
      "lastReviewDate": {
        "key": "lastReviewDate",
        "display": "Last Review Date",
        "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
        "type": "date"
      },
      "effectivePeriod": {
        "key": "effectivePeriod",
        "display": "Effective Period",
        "description": "The period during which the measure content was or is planned to be in active use.",
        "type": "Period"
      },
      "topic": {
        "key": "topic",
        "display": "Topic",
        "description": "Descriptive topics related to the content of the measure. Topics provide a high-level categorization grouping types of measures that can be useful for filtering and searching.",
        "type": "CodeableConcept",
        "array": true
      },
      "author": {
        "key": "author",
        "display": "Author",
        "description": "An individiual or organization primarily involved in the creation and maintenance of the content.",
        "type": "ContactDetail",
        "array": true
      },
      "editor": {
        "key": "editor",
        "display": "Editor",
        "description": "An individual or organization primarily responsible for internal coherence of the content.",
        "type": "ContactDetail",
        "array": true
      },
      "reviewer": {
        "key": "reviewer",
        "display": "Reviewer",
        "description": "An individual or organization primarily responsible for review of some aspect of the content.",
        "type": "ContactDetail",
        "array": true
      },
      "endorser": {
        "key": "endorser",
        "display": "Endorser",
        "description": "An individual or organization responsible for officially endorsing the content for use in some setting.",
        "type": "ContactDetail",
        "array": true
      },
      "relatedArtifact": {
        "key": "relatedArtifact",
        "display": "Related Artifact",
        "description": "Related artifacts such as additional documentation, justification, or bibliographic references.",
        "type": "RelatedArtifact",
        "array": true
      },
      "library": {
        "key": "library",
        "display": "Library",
        "description": "A reference to a Library resource containing the formal logic used by the measure.",
        "type": "canonical",
        "array": true
      },
      "disclaimer": {
        "key": "disclaimer",
        "display": "Disclaimer",
        "description": "Notices and disclaimers regarding the use of the measure or related to intellectual property (such as code systems) referenced by the measure.",
        "type": "markdown"
      },
      "scoring": {
        "key": "scoring",
        "display": "Scoring",
        "description": "Indicates how the calculation is performed for the measure, including proportion, ratio, continuous-variable, and cohort. The value set is extensible, allowing additional measure scoring types to be represented.",
        "type": "CodeableConcept"
      },
      "compositeScoring": {
        "key": "compositeScoring",
        "display": "Composite Scoring",
        "description": "If this is a composite measure, the scoring method used to combine the component measures to determine the composite score.",
        "type": "CodeableConcept"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Indicates whether the measure is used to examine a process, an outcome over time, a patient-reported outcome, or a structure measure such as utilization.",
        "type": "CodeableConcept",
        "array": true
      },
      "riskAdjustment": {
        "key": "riskAdjustment",
        "display": "Risk Adjustment",
        "description": "A description of the risk adjustment factors that may impact the resulting score for the measure and how they may be accounted for when computing and reporting measure results.",
        "type": "string"
      },
      "rateAggregation": {
        "key": "rateAggregation",
        "display": "Rate Aggregation",
        "description": "Describes how to combine the information calculated, based on logic in each of several populations, into one summarized result.",
        "type": "string"
      },
      "rationale": {
        "key": "rationale",
        "display": "Rationale",
        "description": "Provides a succinct statement of the need for the measure. Usually includes statements pertaining to importance criterion: impact, gap in care, and evidence.",
        "type": "markdown"
      },
      "clinicalRecommendationStatement": {
        "key": "clinicalRecommendationStatement",
        "display": "Clinical Recommendation Statement",
        "description": "Provides a summary of relevant clinical guidelines or other clinical recommendations supporting the measure.",
        "type": "markdown"
      },
      "improvementNotation": {
        "key": "improvementNotation",
        "display": "Improvement Notation",
        "description": "Information on whether an increase or decrease in score is the preferred result (e.g., a higher score indicates better quality OR a lower score indicates better quality OR quality is within a range).",
        "type": "CodeableConcept"
      },
      "definition": {
        "key": "definition",
        "display": "Definition",
        "description": "Provides a description of an individual term used within the measure.",
        "type": "markdown",
        "array": true
      },
      "guidance": {
        "key": "guidance",
        "display": "Guidance",
        "description": "Additional guidance for the measure including how it can be used in a clinical context, and the intent of the measure.",
        "type": "markdown"
      },
      "group": {
        "key": "group",
        "display": "Group",
        "description": "A group of population criteria for the measure.",
        "type": "Measure_Group",
        "array": true
      },
      "supplementalData": {
        "key": "supplementalData",
        "display": "Supplemental Data",
        "description": "The supplemental data criteria for the measure report, specified as either the name of a valid CQL expression within a referenced library, or a valid FHIR Resource Path.",
        "type": "Measure_SupplementalData",
        "array": true
      }
    }
  },
  "Measure_Group": {
    "display": "Measure Group",
    "description": "Population criteria group",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "Indicates a meaning for the group. This can be as simple as a unique identifier, or it can establish meaning in a broader context by drawing from a terminology, allowing groups to be correlated across measures.",
        "type": "CodeableConcept"
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "The human readable description of this population group.",
        "type": "string"
      },
      "population": {
        "key": "population",
        "display": "Population",
        "description": "A population criteria for the measure.",
        "type": "Measure_Group_Population",
        "array": true
      },
      "stratifier": {
        "key": "stratifier",
        "display": "Stratifier",
        "description": "The stratifier criteria for the measure report, specified as either the name of a valid CQL expression defined within a referenced library or a valid FHIR Resource Path.",
        "type": "Measure_Group_Stratifier",
        "array": true
      }
    },
    "backboneElement": true
  },
  "Measure_Group_Population": {
    "display": "Measure Group_ Population",
    "description": "Population criteria",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "The type of population criteria.",
        "type": "CodeableConcept"
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "The human readable description of this population criteria.",
        "type": "string"
      },
      "criteria": {
        "key": "criteria",
        "display": "Criteria",
        "description": "An expression that specifies the criteria for the population, typically the name of an expression in a library.",
        "type": "Expression"
      }
    },
    "backboneElement": true
  },
  "Measure_Group_Stratifier": {
    "display": "Measure Group_ Stratifier",
    "description": "Stratifier criteria for the measure",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "Indicates a meaning for the stratifier. This can be as simple as a unique identifier, or it can establish meaning in a broader context by drawing from a terminology, allowing stratifiers to be correlated across measures.",
        "type": "CodeableConcept"
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "The human readable description of this stratifier criteria.",
        "type": "string"
      },
      "criteria": {
        "key": "criteria",
        "display": "Criteria",
        "description": "An expression that specifies the criteria for the stratifier. This is typically the name of an expression defined within a referenced library, but it may also be a path to a stratifier element.",
        "type": "Expression"
      },
      "component": {
        "key": "component",
        "display": "Component",
        "description": "A component of the stratifier criteria for the measure report, specified as either the name of a valid CQL expression defined within a referenced library or a valid FHIR Resource Path.",
        "type": "Measure_Group_Stratifier_Component",
        "array": true
      }
    },
    "backboneElement": true
  },
  "Measure_Group_Stratifier_Component": {
    "display": "Measure Group_ Stratifier_ Component",
    "description": "Stratifier criteria component for the measure",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "Indicates a meaning for the stratifier component. This can be as simple as a unique identifier, or it can establish meaning in a broader context by drawing from a terminology, allowing stratifiers to be correlated across measures.",
        "type": "CodeableConcept"
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "The human readable description of this stratifier criteria component.",
        "type": "string"
      },
      "criteria": {
        "key": "criteria",
        "display": "Criteria",
        "description": "An expression that specifies the criteria for this component of the stratifier. This is typically the name of an expression defined within a referenced library, but it may also be a path to a stratifier element.",
        "type": "Expression"
      }
    },
    "backboneElement": true
  },
  "Measure_SupplementalData": {
    "display": "Measure Supplemental Data",
    "description": "What other data should be reported with the measure",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "Indicates a meaning for the supplemental data. This can be as simple as a unique identifier, or it can establish meaning in a broader context by drawing from a terminology, allowing supplemental data to be correlated across measures.",
        "type": "CodeableConcept"
      },
      "usage": {
        "key": "usage",
        "display": "Usage",
        "description": "An indicator of the intended usage for the supplemental data element. Supplemental data indicates the data is additional information requested to augment the measure information. Risk adjustment factor indicates the data is additional information used to calculate risk adjustment factors when applying a risk model to the measure calculation.",
        "type": "CodeableConcept",
        "array": true
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "The human readable description of this supplemental data.",
        "type": "string"
      },
      "criteria": {
        "key": "criteria",
        "display": "Criteria",
        "description": "The criteria for the supplemental data. This is typically the name of a valid expression defined within a referenced library, but it may also be a path to a specific data element. The criteria defines the data to be returned for this element.",
        "type": "Expression"
      }
    },
    "backboneElement": true
  },
  "MeasureReport": {
    "display": "MeasureReport",
    "description": "The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "A formal identifier that is used to identify this MeasureReport when it is represented in other formats or referenced in a specification, model, design or an instance.",
        "type": "Identifier",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The MeasureReport status. No data will be available until the MeasureReport status is complete.",
        "type": "enum",
        "enumValues": [
          "complete",
          "pending",
          "error"
        ]
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The type of measure report. This may be an individual report, which provides the score for the measure for an individual member of the population; a subject-listing, which returns the list of members that meet the various criteria in the measure; a summary report, which returns a population count for each of the criteria in the measure; or a data-collection, which enables the MeasureReport to be used to exchange the data-of-interest for a quality measure.",
        "type": "enum",
        "enumValues": [
          "individual",
          "subject-list",
          "summary",
          "data-collection"
        ]
      },
      "measure": {
        "key": "measure",
        "display": "Measure",
        "description": "A reference to the Measure that was calculated to produce this report.",
        "type": "canonical"
      },
      "subject": {
        "key": "subject",
        "display": "Subject",
        "description": "Optional subject identifying the individual or individuals the report is for.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Practitioner",
          "PractitionerRole",
          "Location",
          "Device",
          "RelatedPerson",
          "Group"
        ]
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "The date this measure report was generated.",
        "type": "dateTime"
      },
      "reporter": {
        "key": "reporter",
        "display": "Reporter",
        "description": "The individual, location, or organization that is reporting the data.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Location",
          "Organization"
        ]
      },
      "period": {
        "key": "period",
        "display": "Period",
        "description": "The reporting period for which the report was calculated.",
        "type": "Period"
      },
      "improvementNotation": {
        "key": "improvementNotation",
        "display": "Improvement Notation",
        "description": "Whether improvement in the measure is noted by an increase or decrease in the measure score.",
        "type": "CodeableConcept"
      },
      "group": {
        "key": "group",
        "display": "Group",
        "description": "The results of the calculation, one for each population group in the measure.",
        "type": "MeasureReport_Group",
        "array": true
      },
      "evaluatedResource": {
        "key": "evaluatedResource",
        "display": "Evaluated Resource",
        "description": "A reference to a Bundle containing the Resources that were used in the calculation of this measure.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ],
        "array": true
      }
    }
  },
  "MeasureReport_Group": {
    "display": "Measure Report Group",
    "description": "Measure results for each group",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "The meaning of the population group as defined in the measure definition.",
        "type": "CodeableConcept"
      },
      "population": {
        "key": "population",
        "display": "Population",
        "description": "The populations that make up the population group, one for each type of population appropriate for the measure.",
        "type": "MeasureReport_Group_Population",
        "array": true
      },
      "measureScore": {
        "key": "measureScore",
        "display": "Measure Score",
        "description": "The measure score for this population group, calculated as appropriate for the measure type and scoring method, and based on the contents of the populations defined in the group.",
        "type": "Quantity"
      },
      "stratifier": {
        "key": "stratifier",
        "display": "Stratifier",
        "description": "When a measure includes multiple stratifiers, there will be a stratifier group for each stratifier defined by the measure.",
        "type": "MeasureReport_Group_Stratifier",
        "array": true
      }
    },
    "backboneElement": true
  },
  "MeasureReport_Group_Population": {
    "display": "Measure Report Group_ Population",
    "description": "The populations in the group",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "The type of the population.",
        "type": "CodeableConcept"
      },
      "count": {
        "key": "count",
        "display": "Count",
        "description": "The number of members of the population.",
        "type": "integer"
      },
      "subjectResults": {
        "key": "subjectResults",
        "display": "Subject Results",
        "description": "This element refers to a List of subject level MeasureReport resources, one for each subject in this population.",
        "type": "Reference",
        "targetProfile": [
          "List"
        ]
      }
    },
    "backboneElement": true
  },
  "MeasureReport_Group_Stratifier": {
    "display": "Measure Report Group_ Stratifier",
    "description": "Stratification results",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "The meaning of this stratifier, as defined in the measure definition.",
        "type": "CodeableConcept",
        "array": true
      },
      "stratum": {
        "key": "stratum",
        "display": "Stratum",
        "description": "This element contains the results for a single stratum within the stratifier. For example, when stratifying on administrative gender, there will be four strata, one for each possible gender value.",
        "type": "MeasureReport_Group_Stratifier_Stratum",
        "array": true
      }
    },
    "backboneElement": true
  },
  "MeasureReport_Group_Stratifier_Stratum": {
    "display": "Measure Report Group_ Stratifier_ Stratum",
    "description": "Stratum results, one for each unique value, or set of values, in the stratifier, or stratifier components",
    "properties": {
      "value": {
        "key": "value",
        "display": "Value",
        "description": "The value for this stratum, expressed as a CodeableConcept. When defining stratifiers on complex values, the value must be rendered such that the value for each stratum within the stratifier is unique.",
        "type": "CodeableConcept"
      },
      "component": {
        "key": "component",
        "display": "Component",
        "description": "A stratifier component value.",
        "type": "MeasureReport_Group_Stratifier_Stratum_Component",
        "array": true
      },
      "population": {
        "key": "population",
        "display": "Population",
        "description": "The populations that make up the stratum, one for each type of population appropriate to the measure.",
        "type": "MeasureReport_Group_Stratifier_Stratum_Population",
        "array": true
      },
      "measureScore": {
        "key": "measureScore",
        "display": "Measure Score",
        "description": "The measure score for this stratum, calculated as appropriate for the measure type and scoring method, and based on only the members of this stratum.",
        "type": "Quantity"
      }
    },
    "backboneElement": true
  },
  "MeasureReport_Group_Stratifier_Stratum_Component": {
    "display": "Measure Report Group_ Stratifier_ Stratum_ Component",
    "description": "Stratifier component values",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "The code for the stratum component value.",
        "type": "CodeableConcept"
      },
      "value": {
        "key": "value",
        "display": "Value",
        "description": "The stratum component value.",
        "type": "CodeableConcept"
      }
    },
    "backboneElement": true
  },
  "MeasureReport_Group_Stratifier_Stratum_Population": {
    "display": "Measure Report Group_ Stratifier_ Stratum_ Population",
    "description": "Population results in this stratum",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "The type of the population.",
        "type": "CodeableConcept"
      },
      "count": {
        "key": "count",
        "display": "Count",
        "description": "The number of members of the population in this stratum.",
        "type": "integer"
      },
      "subjectResults": {
        "key": "subjectResults",
        "display": "Subject Results",
        "description": "This element refers to a List of subject level MeasureReport resources, one for each subject in this population in this stratum.",
        "type": "Reference",
        "targetProfile": [
          "List"
        ]
      }
    },
    "backboneElement": true
  },
  "Media": {
    "display": "Media",
    "description": "A photo, video, or audio recording acquired or used in healthcare. The actual content may be inline or provided by direct reference.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Identifiers associated with the image - these may include identifiers for the image itself, identifiers for the context of its collection (e.g. series ids) and context ids such as accession numbers or other workflow identifiers.",
        "type": "Identifier",
        "array": true
      },
      "basedOn": {
        "key": "basedOn",
        "display": "Based On",
        "description": "A procedure that is fulfilled in whole or in part by the creation of this media.",
        "type": "Reference",
        "targetProfile": [
          "ServiceRequest",
          "CarePlan"
        ],
        "array": true
      },
      "partOf": {
        "key": "partOf",
        "display": "Part Of",
        "description": "A larger event of which this particular event is a component or step.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ],
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The current state of the {{title}}.",
        "type": "enum",
        "enumValues": [
          "preparation",
          "in-progress",
          "not-done",
          "on-hold",
          "stopped",
          "completed",
          "entered-in-error",
          "unknown"
        ]
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "A code that classifies whether the media is an image, video or audio recording or some other media category.",
        "type": "CodeableConcept"
      },
      "modality": {
        "key": "modality",
        "display": "Modality",
        "description": "Details of the type of the media - usually, how it was acquired (what type of device). If images sourced from a DICOM system, are wrapped in a Media resource, then this is the modality.",
        "type": "CodeableConcept"
      },
      "view": {
        "key": "view",
        "display": "View",
        "description": "The name of the imaging view e.g. Lateral or Antero-posterior (AP).",
        "type": "CodeableConcept"
      },
      "subject": {
        "key": "subject",
        "display": "Subject",
        "description": "Who/What this Media is a record of.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Practitioner",
          "PractitionerRole",
          "Group",
          "Device",
          "Specimen",
          "Location"
        ]
      },
      "encounter": {
        "key": "encounter",
        "display": "Encounter",
        "description": "The encounter that establishes the context for this media.",
        "type": "Reference",
        "targetProfile": [
          "Encounter"
        ]
      },
      "created[x]": {
        "key": "created[x]",
        "display": "Created[x]",
        "description": "The date and time(s) at which the media was collected.",
        "type": "dateTime"
      },
      "issued": {
        "key": "issued",
        "display": "Issued",
        "description": "The date and time this version of the media was made available to providers, typically after having been reviewed.",
        "type": "instant"
      },
      "operator": {
        "key": "operator",
        "display": "Operator",
        "description": "The person who administered the collection of the image.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization",
          "CareTeam",
          "Patient",
          "Device",
          "RelatedPerson"
        ]
      },
      "reasonCode": {
        "key": "reasonCode",
        "display": "Reason Code",
        "description": "Describes why the event occurred in coded or textual form.",
        "type": "CodeableConcept",
        "array": true
      },
      "bodySite": {
        "key": "bodySite",
        "display": "Body Site",
        "description": "Indicates the site on the subject's body where the observation was made (i.e. the target site).",
        "type": "CodeableConcept"
      },
      "deviceName": {
        "key": "deviceName",
        "display": "Device Name",
        "description": "The name of the device / manufacturer of the device  that was used to make the recording.",
        "type": "string"
      },
      "device": {
        "key": "device",
        "display": "Device",
        "description": "The device used to collect the media.",
        "type": "Reference",
        "targetProfile": [
          "Device",
          "DeviceMetric",
          "Device"
        ]
      },
      "height": {
        "key": "height",
        "display": "Height",
        "description": "Height of the image in pixels (photo/video).",
        "type": "positiveInt"
      },
      "width": {
        "key": "width",
        "display": "Width",
        "description": "Width of the image in pixels (photo/video).",
        "type": "positiveInt"
      },
      "frames": {
        "key": "frames",
        "display": "Frames",
        "description": "The number of frames in a photo. This is used with a multi-page fax, or an imaging acquisition context that takes multiple slices in a single image, or an animated gif. If there is more than one frame, this SHALL have a value in order to alert interface software that a multi-frame capable rendering widget is required.",
        "type": "positiveInt"
      },
      "duration": {
        "key": "duration",
        "display": "Duration",
        "description": "The duration of the recording in seconds - for audio and video.",
        "type": "decimal"
      },
      "content": {
        "key": "content",
        "display": "Content",
        "description": "The actual content of the media - inline or by direct reference to the media source file.",
        "type": "Attachment"
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "Comments made about the media by the performer, subject or other participants.",
        "type": "Annotation",
        "array": true
      }
    }
  },
  "Medication": {
    "display": "Medication",
    "description": "This resource is primarily used for the identification and definition of a medication for the purposes of prescribing, dispensing, and administering a medication as well as for making statements about medication use.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Business identifier for this medication.",
        "type": "Identifier",
        "array": true
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "A code (or set of codes) that specify this medication, or a textual description if no code is available. Usage note: This could be a standard medication code such as a code from RxNorm, SNOMED CT, IDMP etc. It could also be a national or local formulary code, optionally with translations to other code systems.",
        "type": "CodeableConcept"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "A code to indicate if the medication is in active use.",
        "type": "enum",
        "enumValues": [
          "active",
          "inactive",
          "entered-in-error"
        ]
      },
      "manufacturer": {
        "key": "manufacturer",
        "display": "Manufacturer",
        "description": "Describes the details of the manufacturer of the medication product.  This is not intended to represent the distributor of a medication product.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "form": {
        "key": "form",
        "display": "Form",
        "description": "Describes the form of the item.  Powder; tablets; capsule.",
        "type": "CodeableConcept"
      },
      "amount": {
        "key": "amount",
        "display": "Amount",
        "description": "Specific amount of the drug in the packaged product.  For example, when specifying a product that has the same strength (For example, Insulin glargine 100 unit per mL solution for injection), this attribute provides additional clarification of the package amount (For example, 3 mL, 10mL, etc.).",
        "type": "Ratio"
      },
      "ingredient": {
        "key": "ingredient",
        "display": "Ingredient",
        "description": "Identifies a particular constituent of interest in the product.",
        "type": "Medication_Ingredient",
        "array": true
      },
      "batch": {
        "key": "batch",
        "display": "Batch",
        "description": "Information that only applies to packages (not products).",
        "type": "Medication_Batch"
      }
    }
  },
  "Medication_Ingredient": {
    "display": "Medication Ingredient",
    "description": "Active or inactive ingredient",
    "properties": {
      "item[x]": {
        "key": "item[x]",
        "display": "Item[x]",
        "description": "The actual ingredient - either a substance (simple ingredient) or another medication of a medication.",
        "type": "CodeableConcept"
      },
      "isActive": {
        "key": "isActive",
        "display": "Is Active",
        "description": "Indication of whether this ingredient affects the therapeutic action of the drug.",
        "type": "boolean"
      },
      "strength": {
        "key": "strength",
        "display": "Strength",
        "description": "Specifies how many (or how much) of the items there are in this Medication.  For example, 250 mg per tablet.  This is expressed as a ratio where the numerator is 250mg and the denominator is 1 tablet.",
        "type": "Ratio"
      }
    },
    "backboneElement": true
  },
  "Medication_Batch": {
    "display": "Medication Batch",
    "description": "Details about packaged medications",
    "properties": {
      "lotNumber": {
        "key": "lotNumber",
        "display": "Lot Number",
        "description": "The assigned lot number of a batch of the specified product.",
        "type": "string"
      },
      "expirationDate": {
        "key": "expirationDate",
        "display": "Expiration Date",
        "description": "When this specific batch of product will expire.",
        "type": "dateTime"
      }
    },
    "backboneElement": true
  },
  "MedicationAdministration": {
    "display": "MedicationAdministration",
    "description": "Describes the event of a patient consuming or otherwise being administered a medication.  This may be as simple as swallowing a tablet or it may be a long running infusion.  Related resources tie this event to the authorizing prescription, and the specific encounter between patient and health care practitioner.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Identifiers associated with this Medication Administration that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate. They are business identifiers assigned to this resource by the performer or other systems and remain constant as the resource is updated and propagates from server to server.",
        "type": "Identifier",
        "array": true
      },
      "instantiates": {
        "key": "instantiates",
        "display": "Instantiates",
        "description": "A protocol, guideline, orderset, or other definition that was adhered to in whole or in part by this event.",
        "type": "uri",
        "array": true
      },
      "partOf": {
        "key": "partOf",
        "display": "Part Of",
        "description": "A larger event of which this particular event is a component or step.",
        "type": "Reference",
        "targetProfile": [
          "MedicationAdministration",
          "Procedure"
        ],
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "Will generally be set to show that the administration has been completed.  For some long running administrations such as infusions, it is possible for an administration to be started but not completed or it may be paused while some other process is under way.",
        "type": "enum",
        "enumValues": [
          "in-progress",
          "not-done",
          "on-hold",
          "completed",
          "entered-in-error",
          "stopped",
          "unknown"
        ]
      },
      "statusReason": {
        "key": "statusReason",
        "display": "Status Reason",
        "description": "A code indicating why the administration was not performed.",
        "type": "CodeableConcept",
        "array": true
      },
      "category": {
        "key": "category",
        "display": "Category",
        "description": "Indicates where the medication is expected to be consumed or administered.",
        "type": "CodeableConcept"
      },
      "medication[x]": {
        "key": "medication[x]",
        "display": "Medication[x]",
        "description": "Identifies the medication that was administered. This is either a link to a resource representing the details of the medication or a simple attribute carrying a code that identifies the medication from a known list of medications.",
        "type": "CodeableConcept"
      },
      "subject": {
        "key": "subject",
        "display": "Subject",
        "description": "The person or animal or group receiving the medication.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Group"
        ]
      },
      "context": {
        "key": "context",
        "display": "Context",
        "description": "The visit, admission, or other contact between patient and health care provider during which the medication administration was performed.",
        "type": "Reference",
        "targetProfile": [
          "Encounter",
          "EpisodeOfCare"
        ]
      },
      "supportingInformation": {
        "key": "supportingInformation",
        "display": "Supporting Information",
        "description": "Additional information (for example, patient height and weight) that supports the administration of the medication.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ],
        "array": true
      },
      "effective[x]": {
        "key": "effective[x]",
        "display": "Effective[x]",
        "description": "A specific date/time or interval of time during which the administration took place (or did not take place, when the 'notGiven' attribute is true). For many administrations, such as swallowing a tablet the use of dateTime is more appropriate.",
        "type": "dateTime"
      },
      "performer": {
        "key": "performer",
        "display": "Performer",
        "description": "Indicates who or what performed the medication administration and how they were involved.",
        "type": "MedicationAdministration_Performer",
        "array": true
      },
      "reasonCode": {
        "key": "reasonCode",
        "display": "Reason Code",
        "description": "A code indicating why the medication was given.",
        "type": "CodeableConcept",
        "array": true
      },
      "reasonReference": {
        "key": "reasonReference",
        "display": "Reason Reference",
        "description": "Condition or observation that supports why the medication was administered.",
        "type": "Reference",
        "targetProfile": [
          "Condition",
          "Observation",
          "DiagnosticReport"
        ],
        "array": true
      },
      "request": {
        "key": "request",
        "display": "Request",
        "description": "The original request, instruction or authority to perform the administration.",
        "type": "Reference",
        "targetProfile": [
          "MedicationRequest"
        ]
      },
      "device": {
        "key": "device",
        "display": "Device",
        "description": "The device used in administering the medication to the patient.  For example, a particular infusion pump.",
        "type": "Reference",
        "targetProfile": [
          "Device"
        ],
        "array": true
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "Extra information about the medication administration that is not conveyed by the other attributes.",
        "type": "Annotation",
        "array": true
      },
      "dosage": {
        "key": "dosage",
        "display": "Dosage",
        "description": "Describes the medication dosage information details e.g. dose, rate, site, route, etc.",
        "type": "MedicationAdministration_Dosage"
      },
      "eventHistory": {
        "key": "eventHistory",
        "display": "Event History",
        "description": "A summary of the events of interest that have occurred, such as when the administration was verified.",
        "type": "Reference",
        "targetProfile": [
          "Provenance"
        ],
        "array": true
      }
    }
  },
  "MedicationAdministration_Performer": {
    "display": "Medication Administration Performer",
    "description": "Who performed the medication administration and what they did",
    "properties": {
      "function": {
        "key": "function",
        "display": "Function",
        "description": "Distinguishes the type of involvement of the performer in the medication administration.",
        "type": "CodeableConcept"
      },
      "actor": {
        "key": "actor",
        "display": "Actor",
        "description": "Indicates who or what performed the medication administration.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Patient",
          "RelatedPerson",
          "Device"
        ]
      }
    },
    "backboneElement": true
  },
  "MedicationAdministration_Dosage": {
    "display": "Medication Administration Dosage",
    "description": "Details of how medication was taken",
    "properties": {
      "site": {
        "key": "site",
        "display": "Site",
        "description": "A coded specification of the anatomic site where the medication first entered the body.  For example, \"left arm\".",
        "type": "CodeableConcept"
      },
      "route": {
        "key": "route",
        "display": "Route",
        "description": "A code specifying the route or physiological path of administration of a therapeutic agent into or onto the patient.  For example, topical, intravenous, etc.",
        "type": "CodeableConcept"
      },
      "method": {
        "key": "method",
        "display": "Method",
        "description": "A coded value indicating the method by which the medication is intended to be or was introduced into or on the body.  This attribute will most often NOT be populated.  It is most commonly used for injections.  For example, Slow Push, Deep IV.",
        "type": "CodeableConcept"
      },
      "dose": {
        "key": "dose",
        "display": "Dose",
        "description": "The amount of the medication given at one administration event.   Use this value when the administration is essentially an instantaneous event such as a swallowing a tablet or giving an injection.",
        "type": "Quantity"
      },
      "rate[x]": {
        "key": "rate[x]",
        "display": "Rate[x]",
        "description": "Identifies the speed with which the medication was or will be introduced into the patient.  Typically, the rate for an infusion e.g. 100 ml per 1 hour or 100 ml/hr.  May also be expressed as a rate per unit of time, e.g. 500 ml per 2 hours.  Other examples:  200 mcg/min or 200 mcg/1 minute; 1 liter/8 hours.",
        "type": "Ratio"
      }
    },
    "backboneElement": true
  },
  "MedicationDispense": {
    "display": "MedicationDispense",
    "description": "Indicates that a medication product is to be or has been dispensed for a named person/patient.  This includes a description of the medication product (supply) provided and the instructions for administering the medication.  The medication dispense is the result of a pharmacy system responding to a medication order.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Identifiers associated with this Medication Dispense that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate. They are business identifiers assigned to this resource by the performer or other systems and remain constant as the resource is updated and propagates from server to server.",
        "type": "Identifier",
        "array": true
      },
      "partOf": {
        "key": "partOf",
        "display": "Part Of",
        "description": "The procedure that trigger the dispense.",
        "type": "Reference",
        "targetProfile": [
          "Procedure"
        ],
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "A code specifying the state of the set of dispense events.",
        "type": "enum",
        "enumValues": [
          "preparation",
          "in-progress",
          "cancelled",
          "on-hold",
          "completed",
          "entered-in-error",
          "stopped",
          "declined",
          "unknown"
        ]
      },
      "statusReason[x]": {
        "key": "statusReason[x]",
        "display": "Status Reason[x]",
        "description": "Indicates the reason why a dispense was not performed.",
        "type": "CodeableConcept"
      },
      "category": {
        "key": "category",
        "display": "Category",
        "description": "Indicates the type of medication dispense (for example, where the medication is expected to be consumed or administered (i.e. inpatient or outpatient)).",
        "type": "CodeableConcept"
      },
      "medication[x]": {
        "key": "medication[x]",
        "display": "Medication[x]",
        "description": "Identifies the medication being administered. This is either a link to a resource representing the details of the medication or a simple attribute carrying a code that identifies the medication from a known list of medications.",
        "type": "CodeableConcept"
      },
      "subject": {
        "key": "subject",
        "display": "Subject",
        "description": "A link to a resource representing the person or the group to whom the medication will be given.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Group"
        ]
      },
      "context": {
        "key": "context",
        "display": "Context",
        "description": "The encounter or episode of care that establishes the context for this event.",
        "type": "Reference",
        "targetProfile": [
          "Encounter",
          "EpisodeOfCare"
        ]
      },
      "supportingInformation": {
        "key": "supportingInformation",
        "display": "Supporting Information",
        "description": "Additional information that supports the medication being dispensed.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ],
        "array": true
      },
      "performer": {
        "key": "performer",
        "display": "Performer",
        "description": "Indicates who or what performed the event.",
        "type": "MedicationDispense_Performer",
        "array": true
      },
      "location": {
        "key": "location",
        "display": "Location",
        "description": "The principal physical location where the dispense was performed.",
        "type": "Reference",
        "targetProfile": [
          "Location"
        ]
      },
      "authorizingPrescription": {
        "key": "authorizingPrescription",
        "display": "Authorizing Prescription",
        "description": "Indicates the medication order that is being dispensed against.",
        "type": "Reference",
        "targetProfile": [
          "MedicationRequest"
        ],
        "array": true
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Indicates the type of dispensing event that is performed. For example, Trial Fill, Completion of Trial, Partial Fill, Emergency Fill, Samples, etc.",
        "type": "CodeableConcept"
      },
      "quantity": {
        "key": "quantity",
        "display": "Quantity",
        "description": "The amount of medication that has been dispensed. Includes unit of measure.",
        "type": "Quantity"
      },
      "daysSupply": {
        "key": "daysSupply",
        "display": "Days Supply",
        "description": "The amount of medication expressed as a timing amount.",
        "type": "Quantity"
      },
      "whenPrepared": {
        "key": "whenPrepared",
        "display": "When Prepared",
        "description": "The time when the dispensed product was packaged and reviewed.",
        "type": "dateTime"
      },
      "whenHandedOver": {
        "key": "whenHandedOver",
        "display": "When Handed Over",
        "description": "The time the dispensed product was provided to the patient or their representative.",
        "type": "dateTime"
      },
      "destination": {
        "key": "destination",
        "display": "Destination",
        "description": "Identification of the facility/location where the medication was shipped to, as part of the dispense event.",
        "type": "Reference",
        "targetProfile": [
          "Location"
        ]
      },
      "receiver": {
        "key": "receiver",
        "display": "Receiver",
        "description": "Identifies the person who picked up the medication.  This will usually be a patient or their caregiver, but some cases exist where it can be a healthcare professional.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Practitioner"
        ],
        "array": true
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "Extra information about the dispense that could not be conveyed in the other attributes.",
        "type": "Annotation",
        "array": true
      },
      "dosageInstruction": {
        "key": "dosageInstruction",
        "display": "Dosage Instruction",
        "description": "Indicates how the medication is to be used by the patient.",
        "type": "Dosage",
        "array": true
      },
      "substitution": {
        "key": "substitution",
        "display": "Substitution",
        "description": "Indicates whether or not substitution was made as part of the dispense.  In some cases, substitution will be expected but does not happen, in other cases substitution is not expected but does happen.  This block explains what substitution did or did not happen and why.  If nothing is specified, substitution was not done.",
        "type": "MedicationDispense_Substitution"
      },
      "detectedIssue": {
        "key": "detectedIssue",
        "display": "Detected Issue",
        "description": "Indicates an actual or potential clinical issue with or between one or more active or proposed clinical actions for a patient; e.g. drug-drug interaction, duplicate therapy, dosage alert etc.",
        "type": "Reference",
        "targetProfile": [
          "DetectedIssue"
        ],
        "array": true
      },
      "eventHistory": {
        "key": "eventHistory",
        "display": "Event History",
        "description": "A summary of the events of interest that have occurred, such as when the dispense was verified.",
        "type": "Reference",
        "targetProfile": [
          "Provenance"
        ],
        "array": true
      }
    }
  },
  "MedicationDispense_Performer": {
    "display": "Medication Dispense Performer",
    "description": "Who performed event",
    "properties": {
      "function": {
        "key": "function",
        "display": "Function",
        "description": "Distinguishes the type of performer in the dispense.  For example, date enterer, packager, final checker.",
        "type": "CodeableConcept"
      },
      "actor": {
        "key": "actor",
        "display": "Actor",
        "description": "The device, practitioner, etc. who performed the action.  It should be assumed that the actor is the dispenser of the medication.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization",
          "Patient",
          "Device",
          "RelatedPerson"
        ]
      }
    },
    "backboneElement": true
  },
  "MedicationDispense_Substitution": {
    "display": "Medication Dispense Substitution",
    "description": "Whether a substitution was performed on the dispense",
    "properties": {
      "wasSubstituted": {
        "key": "wasSubstituted",
        "display": "Was Substituted",
        "description": "True if the dispenser dispensed a different drug or product from what was prescribed.",
        "type": "boolean"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "A code signifying whether a different drug was dispensed from what was prescribed.",
        "type": "CodeableConcept"
      },
      "reason": {
        "key": "reason",
        "display": "Reason",
        "description": "Indicates the reason for the substitution (or lack of substitution) from what was prescribed.",
        "type": "CodeableConcept",
        "array": true
      },
      "responsibleParty": {
        "key": "responsibleParty",
        "display": "Responsible Party",
        "description": "The person or organization that has primary responsibility for the substitution.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole"
        ],
        "array": true
      }
    },
    "backboneElement": true
  },
  "MedicationKnowledge": {
    "display": "MedicationKnowledge",
    "description": "Information about a medication that is used to support knowledge.",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "A code that specifies this medication, or a textual description if no code is available. Usage note: This could be a standard medication code such as a code from RxNorm, SNOMED CT, IDMP etc. It could also be a national or local formulary code, optionally with translations to other code systems.",
        "type": "CodeableConcept"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "A code to indicate if the medication is in active use.  The status refers to the validity about the information of the medication and not to its medicinal properties.",
        "type": "enum",
        "enumValues": [
          "active",
          "inactive",
          "entered-in-error"
        ]
      },
      "manufacturer": {
        "key": "manufacturer",
        "display": "Manufacturer",
        "description": "Describes the details of the manufacturer of the medication product.  This is not intended to represent the distributor of a medication product.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "doseForm": {
        "key": "doseForm",
        "display": "Dose Form",
        "description": "Describes the form of the item.  Powder; tablets; capsule.",
        "type": "CodeableConcept"
      },
      "amount": {
        "key": "amount",
        "display": "Amount",
        "description": "Specific amount of the drug in the packaged product.  For example, when specifying a product that has the same strength (For example, Insulin glargine 100 unit per mL solution for injection), this attribute provides additional clarification of the package amount (For example, 3 mL, 10mL, etc.).",
        "type": "Quantity"
      },
      "synonym": {
        "key": "synonym",
        "display": "Synonym",
        "description": "Additional names for a medication, for example, the name(s) given to a medication in different countries.  For example, acetaminophen and paracetamol or salbutamol and albuterol.",
        "type": "string",
        "array": true
      },
      "relatedMedicationKnowledge": {
        "key": "relatedMedicationKnowledge",
        "display": "Related Medication Knowledge",
        "description": "Associated or related knowledge about a medication.",
        "type": "MedicationKnowledge_RelatedMedicationKnowledge",
        "array": true
      },
      "associatedMedication": {
        "key": "associatedMedication",
        "display": "Associated Medication",
        "description": "Associated or related medications.  For example, if the medication is a branded product (e.g. Crestor), this is the Therapeutic Moeity (e.g. Rosuvastatin) or if this is a generic medication (e.g. Rosuvastatin), this would link to a branded product (e.g. Crestor).",
        "type": "Reference",
        "targetProfile": [
          "Medication"
        ],
        "array": true
      },
      "productType": {
        "key": "productType",
        "display": "Product Type",
        "description": "Category of the medication or product (e.g. branded product, therapeutic moeity, generic product, innovator product, etc.).",
        "type": "CodeableConcept",
        "array": true
      },
      "monograph": {
        "key": "monograph",
        "display": "Monograph",
        "description": "Associated documentation about the medication.",
        "type": "MedicationKnowledge_Monograph",
        "array": true
      },
      "ingredient": {
        "key": "ingredient",
        "display": "Ingredient",
        "description": "Identifies a particular constituent of interest in the product.",
        "type": "MedicationKnowledge_Ingredient",
        "array": true
      },
      "preparationInstruction": {
        "key": "preparationInstruction",
        "display": "Preparation Instruction",
        "description": "The instructions for preparing the medication.",
        "type": "markdown"
      },
      "intendedRoute": {
        "key": "intendedRoute",
        "display": "Intended Route",
        "description": "The intended or approved route of administration.",
        "type": "CodeableConcept",
        "array": true
      },
      "cost": {
        "key": "cost",
        "display": "Cost",
        "description": "The price of the medication.",
        "type": "MedicationKnowledge_Cost",
        "array": true
      },
      "monitoringProgram": {
        "key": "monitoringProgram",
        "display": "Monitoring Program",
        "description": "The program under which the medication is reviewed.",
        "type": "MedicationKnowledge_MonitoringProgram",
        "array": true
      },
      "administrationGuidelines": {
        "key": "administrationGuidelines",
        "display": "Administration Guidelines",
        "description": "Guidelines for the administration of the medication.",
        "type": "MedicationKnowledge_AdministrationGuidelines",
        "array": true
      },
      "medicineClassification": {
        "key": "medicineClassification",
        "display": "Medicine Classification",
        "description": "Categorization of the medication within a formulary or classification system.",
        "type": "MedicationKnowledge_MedicineClassification",
        "array": true
      },
      "packaging": {
        "key": "packaging",
        "display": "Packaging",
        "description": "Information that only applies to packages (not products).",
        "type": "MedicationKnowledge_Packaging"
      },
      "drugCharacteristic": {
        "key": "drugCharacteristic",
        "display": "Drug Characteristic",
        "description": "Specifies descriptive properties of the medicine, such as color, shape, imprints, etc.",
        "type": "MedicationKnowledge_DrugCharacteristic",
        "array": true
      },
      "contraindication": {
        "key": "contraindication",
        "display": "Contraindication",
        "description": "Potential clinical issue with or between medication(s) (for example, drug-drug interaction, drug-disease contraindication, drug-allergy interaction, etc.).",
        "type": "Reference",
        "targetProfile": [
          "DetectedIssue"
        ],
        "array": true
      },
      "regulatory": {
        "key": "regulatory",
        "display": "Regulatory",
        "description": "Regulatory information about a medication.",
        "type": "MedicationKnowledge_Regulatory",
        "array": true
      },
      "kinetics": {
        "key": "kinetics",
        "display": "Kinetics",
        "description": "The time course of drug absorption, distribution, metabolism and excretion of a medication from the body.",
        "type": "MedicationKnowledge_Kinetics",
        "array": true
      }
    }
  },
  "MedicationKnowledge_RelatedMedicationKnowledge": {
    "display": "Medication Knowledge Related Medication Knowledge",
    "description": "Associated or related medication information",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The category of the associated medication knowledge reference.",
        "type": "CodeableConcept"
      },
      "reference": {
        "key": "reference",
        "display": "Reference",
        "description": "Associated documentation about the associated medication knowledge.",
        "type": "Reference",
        "targetProfile": [
          "MedicationKnowledge"
        ],
        "array": true
      }
    },
    "backboneElement": true
  },
  "MedicationKnowledge_Monograph": {
    "display": "Medication Knowledge Monograph",
    "description": "Associated documentation about the medication",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The category of documentation about the medication. (e.g. professional monograph, patient education monograph).",
        "type": "CodeableConcept"
      },
      "source": {
        "key": "source",
        "display": "Source",
        "description": "Associated documentation about the medication.",
        "type": "Reference",
        "targetProfile": [
          "DocumentReference",
          "Media"
        ]
      }
    },
    "backboneElement": true
  },
  "MedicationKnowledge_Ingredient": {
    "display": "Medication Knowledge Ingredient",
    "description": "Active or inactive ingredient",
    "properties": {
      "item[x]": {
        "key": "item[x]",
        "display": "Item[x]",
        "description": "The actual ingredient - either a substance (simple ingredient) or another medication.",
        "type": "CodeableConcept"
      },
      "isActive": {
        "key": "isActive",
        "display": "Is Active",
        "description": "Indication of whether this ingredient affects the therapeutic action of the drug.",
        "type": "boolean"
      },
      "strength": {
        "key": "strength",
        "display": "Strength",
        "description": "Specifies how many (or how much) of the items there are in this Medication.  For example, 250 mg per tablet.  This is expressed as a ratio where the numerator is 250mg and the denominator is 1 tablet.",
        "type": "Ratio"
      }
    },
    "backboneElement": true
  },
  "MedicationKnowledge_Cost": {
    "display": "Medication Knowledge Cost",
    "description": "The pricing of the medication",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The category of the cost information.  For example, manufacturers' cost, patient cost, claim reimbursement cost, actual acquisition cost.",
        "type": "CodeableConcept"
      },
      "source": {
        "key": "source",
        "display": "Source",
        "description": "The source or owner that assigns the price to the medication.",
        "type": "string"
      },
      "cost": {
        "key": "cost",
        "display": "Cost",
        "description": "The price of the medication.",
        "type": "Money"
      }
    },
    "backboneElement": true
  },
  "MedicationKnowledge_MonitoringProgram": {
    "display": "Medication Knowledge Monitoring Program",
    "description": "Program under which a medication is reviewed",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Type of program under which the medication is monitored.",
        "type": "CodeableConcept"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "Name of the reviewing program.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "MedicationKnowledge_AdministrationGuidelines": {
    "display": "Medication Knowledge Administration Guidelines",
    "description": "Guidelines for administration of the medication",
    "properties": {
      "dosage": {
        "key": "dosage",
        "display": "Dosage",
        "description": "Dosage for the medication for the specific guidelines.",
        "type": "MedicationKnowledge_AdministrationGuidelines_Dosage",
        "array": true
      },
      "indication[x]": {
        "key": "indication[x]",
        "display": "Indication[x]",
        "description": "Indication for use that apply to the specific administration guidelines.",
        "type": "CodeableConcept"
      },
      "patientCharacteristics": {
        "key": "patientCharacteristics",
        "display": "Patient Characteristics",
        "description": "Characteristics of the patient that are relevant to the administration guidelines (for example, height, weight, gender, etc.).",
        "type": "MedicationKnowledge_AdministrationGuidelines_PatientCharacteristics",
        "array": true
      }
    },
    "backboneElement": true
  },
  "MedicationKnowledge_AdministrationGuidelines_Dosage": {
    "display": "Medication Knowledge Administration Guidelines_ Dosage",
    "description": "Dosage for the medication for the specific guidelines",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The type of dosage (for example, prophylaxis, maintenance, therapeutic, etc.).",
        "type": "CodeableConcept"
      },
      "dosage": {
        "key": "dosage",
        "display": "Dosage",
        "description": "Dosage for the medication for the specific guidelines.",
        "type": "Dosage",
        "array": true
      }
    },
    "backboneElement": true
  },
  "MedicationKnowledge_AdministrationGuidelines_PatientCharacteristics": {
    "display": "Medication Knowledge Administration Guidelines_ Patient Characteristics",
    "description": "Characteristics of the patient that are relevant to the administration guidelines",
    "properties": {
      "characteristic[x]": {
        "key": "characteristic[x]",
        "display": "Characteristic[x]",
        "description": "Specific characteristic that is relevant to the administration guideline (e.g. height, weight, gender).",
        "type": "CodeableConcept"
      },
      "value": {
        "key": "value",
        "display": "Value",
        "description": "The specific characteristic (e.g. height, weight, gender, etc.).",
        "type": "string",
        "array": true
      }
    },
    "backboneElement": true
  },
  "MedicationKnowledge_MedicineClassification": {
    "display": "Medication Knowledge Medicine Classification",
    "description": "Categorization of the medication within a formulary or classification system",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The type of category for the medication (for example, therapeutic classification, therapeutic sub-classification).",
        "type": "CodeableConcept"
      },
      "classification": {
        "key": "classification",
        "display": "Classification",
        "description": "Specific category assigned to the medication (e.g. anti-infective, anti-hypertensive, antibiotic, etc.).",
        "type": "CodeableConcept",
        "array": true
      }
    },
    "backboneElement": true
  },
  "MedicationKnowledge_Packaging": {
    "display": "Medication Knowledge Packaging",
    "description": "Details about packaged medications",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "A code that defines the specific type of packaging that the medication can be found in (e.g. blister sleeve, tube, bottle).",
        "type": "CodeableConcept"
      },
      "quantity": {
        "key": "quantity",
        "display": "Quantity",
        "description": "The number of product units the package would contain if fully loaded.",
        "type": "Quantity"
      }
    },
    "backboneElement": true
  },
  "MedicationKnowledge_DrugCharacteristic": {
    "display": "Medication Knowledge Drug Characteristic",
    "description": "Specifies descriptive properties of the medicine",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "A code specifying which characteristic of the medicine is being described (for example, colour, shape, imprint).",
        "type": "CodeableConcept"
      },
      "value[x]": {
        "key": "value[x]",
        "display": "Value[x]",
        "description": "Description of the characteristic.",
        "type": "CodeableConcept"
      }
    },
    "backboneElement": true
  },
  "MedicationKnowledge_Regulatory": {
    "display": "Medication Knowledge Regulatory",
    "description": "Regulatory information about a medication",
    "properties": {
      "regulatoryAuthority": {
        "key": "regulatoryAuthority",
        "display": "Regulatory Authority",
        "description": "The authority that is specifying the regulations.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "substitution": {
        "key": "substitution",
        "display": "Substitution",
        "description": "Specifies if changes are allowed when dispensing a medication from a regulatory perspective.",
        "type": "MedicationKnowledge_Regulatory_Substitution",
        "array": true
      },
      "schedule": {
        "key": "schedule",
        "display": "Schedule",
        "description": "Specifies the schedule of a medication in jurisdiction.",
        "type": "MedicationKnowledge_Regulatory_Schedule",
        "array": true
      },
      "maxDispense": {
        "key": "maxDispense",
        "display": "Max Dispense",
        "description": "The maximum number of units of the medication that can be dispensed in a period.",
        "type": "MedicationKnowledge_Regulatory_MaxDispense"
      }
    },
    "backboneElement": true
  },
  "MedicationKnowledge_Regulatory_Substitution": {
    "display": "Medication Knowledge Regulatory_ Substitution",
    "description": "Specifies if changes are allowed when dispensing a medication from a regulatory perspective",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Specifies the type of substitution allowed.",
        "type": "CodeableConcept"
      },
      "allowed": {
        "key": "allowed",
        "display": "Allowed",
        "description": "Specifies if regulation allows for changes in the medication when dispensing.",
        "type": "boolean"
      }
    },
    "backboneElement": true
  },
  "MedicationKnowledge_Regulatory_Schedule": {
    "display": "Medication Knowledge Regulatory_ Schedule",
    "description": "Specifies the schedule of a medication in jurisdiction",
    "properties": {
      "schedule": {
        "key": "schedule",
        "display": "Schedule",
        "description": "Specifies the specific drug schedule.",
        "type": "CodeableConcept"
      }
    },
    "backboneElement": true
  },
  "MedicationKnowledge_Regulatory_MaxDispense": {
    "display": "Medication Knowledge Regulatory_ Max Dispense",
    "description": "The maximum number of units of the medication that can be dispensed in a period",
    "properties": {
      "quantity": {
        "key": "quantity",
        "display": "Quantity",
        "description": "The maximum number of units of the medication that can be dispensed.",
        "type": "Quantity"
      },
      "period": {
        "key": "period",
        "display": "Period",
        "description": "The period that applies to the maximum number of units.",
        "type": "Duration"
      }
    },
    "backboneElement": true
  },
  "MedicationKnowledge_Kinetics": {
    "display": "Medication Knowledge Kinetics",
    "description": "The time course of drug absorption, distribution, metabolism and excretion of a medication from the body",
    "properties": {
      "areaUnderCurve": {
        "key": "areaUnderCurve",
        "display": "Area Under Curve",
        "description": "The drug concentration measured at certain discrete points in time.",
        "type": "Quantity",
        "array": true
      },
      "lethalDose50": {
        "key": "lethalDose50",
        "display": "Lethal Dose50",
        "description": "The median lethal dose of a drug.",
        "type": "Quantity",
        "array": true
      },
      "halfLifePeriod": {
        "key": "halfLifePeriod",
        "display": "Half Life Period",
        "description": "The time required for any specified property (e.g., the concentration of a substance in the body) to decrease by half.",
        "type": "Duration"
      }
    },
    "backboneElement": true
  },
  "MedicationRequest": {
    "display": "MedicationRequest",
    "description": "An order or request for both supply of the medication and the instructions for administration of the medication to a patient. The resource is called \"MedicationRequest\" rather than \"MedicationPrescription\" or \"MedicationOrder\" to generalize the use across inpatient and outpatient settings, including care plans, etc., and to harmonize with workflow patterns.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Identifiers associated with this medication request that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate. They are business identifiers assigned to this resource by the performer or other systems and remain constant as the resource is updated and propagates from server to server.",
        "type": "Identifier",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "A code specifying the current state of the order.  Generally, this will be active or completed state.",
        "type": "enum",
        "enumValues": [
          "active",
          "on-hold",
          "cancelled",
          "completed",
          "entered-in-error",
          "stopped",
          "draft",
          "unknown"
        ]
      },
      "statusReason": {
        "key": "statusReason",
        "display": "Status Reason",
        "description": "Captures the reason for the current state of the MedicationRequest.",
        "type": "CodeableConcept"
      },
      "intent": {
        "key": "intent",
        "display": "Intent",
        "description": "Whether the request is a proposal, plan, or an original order.",
        "type": "enum",
        "enumValues": [
          "proposal",
          "plan",
          "order",
          "original-order",
          "reflex-order",
          "filler-order",
          "instance-order",
          "option"
        ]
      },
      "category": {
        "key": "category",
        "display": "Category",
        "description": "Indicates the type of medication request (for example, where the medication is expected to be consumed or administered (i.e. inpatient or outpatient)).",
        "type": "CodeableConcept",
        "array": true
      },
      "priority": {
        "key": "priority",
        "display": "Priority",
        "description": "Indicates how quickly the Medication Request should be addressed with respect to other requests.",
        "type": "enum",
        "enumValues": [
          "routine",
          "urgent",
          "asap",
          "stat"
        ]
      },
      "doNotPerform": {
        "key": "doNotPerform",
        "display": "Do Not Perform",
        "description": "If true indicates that the provider is asking for the medication request not to occur.",
        "type": "boolean"
      },
      "reported[x]": {
        "key": "reported[x]",
        "display": "Reported[x]",
        "description": "Indicates if this record was captured as a secondary 'reported' record rather than as an original primary source-of-truth record.  It may also indicate the source of the report.",
        "type": "boolean"
      },
      "medication[x]": {
        "key": "medication[x]",
        "display": "Medication[x]",
        "description": "Identifies the medication being requested. This is a link to a resource that represents the medication which may be the details of the medication or simply an attribute carrying a code that identifies the medication from a known list of medications.",
        "type": "CodeableConcept"
      },
      "subject": {
        "key": "subject",
        "display": "Subject",
        "description": "A link to a resource representing the person or set of individuals to whom the medication will be given.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Group"
        ]
      },
      "encounter": {
        "key": "encounter",
        "display": "Encounter",
        "description": "The Encounter during which this [x] was created or to which the creation of this record is tightly associated.",
        "type": "Reference",
        "targetProfile": [
          "Encounter"
        ]
      },
      "supportingInformation": {
        "key": "supportingInformation",
        "display": "Supporting Information",
        "description": "Include additional information (for example, patient height and weight) that supports the ordering of the medication.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ],
        "array": true
      },
      "authoredOn": {
        "key": "authoredOn",
        "display": "Authored On",
        "description": "The date (and perhaps time) when the prescription was initially written or authored on.",
        "type": "dateTime"
      },
      "requester": {
        "key": "requester",
        "display": "Requester",
        "description": "The individual, organization, or device that initiated the request and has responsibility for its activation.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization",
          "Patient",
          "RelatedPerson",
          "Device"
        ]
      },
      "performer": {
        "key": "performer",
        "display": "Performer",
        "description": "The specified desired performer of the medication treatment (e.g. the performer of the medication administration).",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization",
          "Patient",
          "Device",
          "RelatedPerson",
          "CareTeam"
        ]
      },
      "performerType": {
        "key": "performerType",
        "display": "Performer Type",
        "description": "Indicates the type of performer of the administration of the medication.",
        "type": "CodeableConcept"
      },
      "recorder": {
        "key": "recorder",
        "display": "Recorder",
        "description": "The person who entered the order on behalf of another individual for example in the case of a verbal or a telephone order.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole"
        ]
      },
      "reasonCode": {
        "key": "reasonCode",
        "display": "Reason Code",
        "description": "The reason or the indication for ordering or not ordering the medication.",
        "type": "CodeableConcept",
        "array": true
      },
      "reasonReference": {
        "key": "reasonReference",
        "display": "Reason Reference",
        "description": "Condition or observation that supports why the medication was ordered.",
        "type": "Reference",
        "targetProfile": [
          "Condition",
          "Observation"
        ],
        "array": true
      },
      "instantiatesCanonical": {
        "key": "instantiatesCanonical",
        "display": "Instantiates Canonical",
        "description": "The URL pointing to a protocol, guideline, orderset, or other definition that is adhered to in whole or in part by this MedicationRequest.",
        "type": "canonical",
        "array": true
      },
      "instantiatesUri": {
        "key": "instantiatesUri",
        "display": "Instantiates Uri",
        "description": "The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this MedicationRequest.",
        "type": "uri",
        "array": true
      },
      "basedOn": {
        "key": "basedOn",
        "display": "Based On",
        "description": "A plan or request that is fulfilled in whole or in part by this medication request.",
        "type": "Reference",
        "targetProfile": [
          "CarePlan",
          "MedicationRequest",
          "ServiceRequest",
          "ImmunizationRecommendation"
        ],
        "array": true
      },
      "groupIdentifier": {
        "key": "groupIdentifier",
        "display": "Group Identifier",
        "description": "A shared identifier common to all requests that were authorized more or less simultaneously by a single author, representing the identifier of the requisition or prescription.",
        "type": "Identifier"
      },
      "courseOfTherapyType": {
        "key": "courseOfTherapyType",
        "display": "Course Of Therapy Type",
        "description": "The description of the overall patte3rn of the administration of the medication to the patient.",
        "type": "CodeableConcept"
      },
      "insurance": {
        "key": "insurance",
        "display": "Insurance",
        "description": "Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be required for delivering the requested service.",
        "type": "Reference",
        "targetProfile": [
          "Coverage",
          "ClaimResponse"
        ],
        "array": true
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "Extra information about the prescription that could not be conveyed by the other attributes.",
        "type": "Annotation",
        "array": true
      },
      "dosageInstruction": {
        "key": "dosageInstruction",
        "display": "Dosage Instruction",
        "description": "Indicates how the medication is to be used by the patient.",
        "type": "Dosage",
        "array": true
      },
      "dispenseRequest": {
        "key": "dispenseRequest",
        "display": "Dispense Request",
        "description": "Indicates the specific details for the dispense or medication supply part of a medication request (also known as a Medication Prescription or Medication Order).  Note that this information is not always sent with the order.  There may be in some settings (e.g. hospitals) institutional or system support for completing the dispense details in the pharmacy department.",
        "type": "MedicationRequest_DispenseRequest"
      },
      "substitution": {
        "key": "substitution",
        "display": "Substitution",
        "description": "Indicates whether or not substitution can or should be part of the dispense. In some cases, substitution must happen, in other cases substitution must not happen. This block explains the prescriber's intent. If nothing is specified substitution may be done.",
        "type": "MedicationRequest_Substitution"
      },
      "priorPrescription": {
        "key": "priorPrescription",
        "display": "Prior Prescription",
        "description": "A link to a resource representing an earlier order related order or prescription.",
        "type": "Reference",
        "targetProfile": [
          "MedicationRequest"
        ]
      },
      "detectedIssue": {
        "key": "detectedIssue",
        "display": "Detected Issue",
        "description": "Indicates an actual or potential clinical issue with or between one or more active or proposed clinical actions for a patient; e.g. Drug-drug interaction, duplicate therapy, dosage alert etc.",
        "type": "Reference",
        "targetProfile": [
          "DetectedIssue"
        ],
        "array": true
      },
      "eventHistory": {
        "key": "eventHistory",
        "display": "Event History",
        "description": "Links to Provenance records for past versions of this resource or fulfilling request or event resources that identify key state transitions or updates that are likely to be relevant to a user looking at the current version of the resource.",
        "type": "Reference",
        "targetProfile": [
          "Provenance"
        ],
        "array": true
      }
    }
  },
  "MedicationRequest_DispenseRequest": {
    "display": "Medication Request Dispense Request",
    "description": "Medication supply authorization",
    "properties": {
      "initialFill": {
        "key": "initialFill",
        "display": "Initial Fill",
        "description": "Indicates the quantity or duration for the first dispense of the medication.",
        "type": "MedicationRequest_DispenseRequest_InitialFill"
      },
      "dispenseInterval": {
        "key": "dispenseInterval",
        "display": "Dispense Interval",
        "description": "The minimum period of time that must occur between dispenses of the medication.",
        "type": "Duration"
      },
      "validityPeriod": {
        "key": "validityPeriod",
        "display": "Validity Period",
        "description": "This indicates the validity period of a prescription (stale dating the Prescription).",
        "type": "Period"
      },
      "numberOfRepeatsAllowed": {
        "key": "numberOfRepeatsAllowed",
        "display": "Number Of Repeats Allowed",
        "description": "An integer indicating the number of times, in addition to the original dispense, (aka refills or repeats) that the patient can receive the prescribed medication. Usage Notes: This integer does not include the original order dispense. This means that if an order indicates dispense 30 tablets plus \"3 repeats\", then the order can be dispensed a total of 4 times and the patient can receive a total of 120 tablets.  A prescriber may explicitly say that zero refills are permitted after the initial dispense.",
        "type": "unsignedInt"
      },
      "quantity": {
        "key": "quantity",
        "display": "Quantity",
        "description": "The amount that is to be dispensed for one fill.",
        "type": "Quantity"
      },
      "expectedSupplyDuration": {
        "key": "expectedSupplyDuration",
        "display": "Expected Supply Duration",
        "description": "Identifies the period time over which the supplied product is expected to be used, or the length of time the dispense is expected to last.",
        "type": "Duration"
      },
      "performer": {
        "key": "performer",
        "display": "Performer",
        "description": "Indicates the intended dispensing Organization specified by the prescriber.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      }
    },
    "backboneElement": true
  },
  "MedicationRequest_DispenseRequest_InitialFill": {
    "display": "Medication Request Dispense Request_ Initial Fill",
    "description": "First fill details",
    "properties": {
      "quantity": {
        "key": "quantity",
        "display": "Quantity",
        "description": "The amount or quantity to provide as part of the first dispense.",
        "type": "Quantity"
      },
      "duration": {
        "key": "duration",
        "display": "Duration",
        "description": "The length of time that the first dispense is expected to last.",
        "type": "Duration"
      }
    },
    "backboneElement": true
  },
  "MedicationRequest_Substitution": {
    "display": "Medication Request Substitution",
    "description": "Any restrictions on medication substitution",
    "properties": {
      "allowed[x]": {
        "key": "allowed[x]",
        "display": "Allowed[x]",
        "description": "True if the prescriber allows a different drug to be dispensed from what was prescribed.",
        "type": "boolean"
      },
      "reason": {
        "key": "reason",
        "display": "Reason",
        "description": "Indicates the reason for the substitution, or why substitution must or must not be performed.",
        "type": "CodeableConcept"
      }
    },
    "backboneElement": true
  },
  "MedicationStatement": {
    "display": "MedicationStatement",
    "description": "A record of a medication that is being consumed by a patient.   A MedicationStatement may indicate that the patient may be taking the medication now or has taken the medication in the past or will be taking the medication in the future.  The source of this information can be the patient, significant other (such as a family member or spouse), or a clinician.  A common scenario where this information is captured is during the history taking process during a patient visit or stay.   The medication information may come from sources such as the patient's memory, from a prescription bottle,  or from a list of medications the patient, clinician or other party maintains. \n\nThe primary difference between a medication statement and a medication administration is that the medication administration has complete administration information and is based on actual administration information from the person who administered the medication.  A medication statement is often, if not always, less specific.  There is no required date/time when the medication was administered, in fact we only know that a source has reported the patient is taking this medication, where details such as time, quantity, or rate or even medication product may be incomplete or missing or less precise.  As stated earlier, the medication statement information may come from the patient's memory, from a prescription bottle or from a list of medications the patient, clinician or other party maintains.  Medication administration is more formal and is not missing detailed information.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Identifiers associated with this Medication Statement that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate. They are business identifiers assigned to this resource by the performer or other systems and remain constant as the resource is updated and propagates from server to server.",
        "type": "Identifier",
        "array": true
      },
      "basedOn": {
        "key": "basedOn",
        "display": "Based On",
        "description": "A plan, proposal or order that is fulfilled in whole or in part by this event.",
        "type": "Reference",
        "targetProfile": [
          "MedicationRequest",
          "CarePlan",
          "ServiceRequest"
        ],
        "array": true
      },
      "partOf": {
        "key": "partOf",
        "display": "Part Of",
        "description": "A larger event of which this particular event is a component or step.",
        "type": "Reference",
        "targetProfile": [
          "MedicationAdministration",
          "MedicationDispense",
          "MedicationStatement",
          "Procedure",
          "Observation"
        ],
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "A code representing the patient or other source's judgment about the state of the medication used that this statement is about.  Generally, this will be active or completed.",
        "type": "enum",
        "enumValues": [
          "active",
          "completed",
          "entered-in-error",
          "intended",
          "stopped",
          "on-hold",
          "unknown",
          "not-taken"
        ]
      },
      "statusReason": {
        "key": "statusReason",
        "display": "Status Reason",
        "description": "Captures the reason for the current state of the MedicationStatement.",
        "type": "CodeableConcept",
        "array": true
      },
      "category": {
        "key": "category",
        "display": "Category",
        "description": "Indicates where the medication is expected to be consumed or administered.",
        "type": "CodeableConcept"
      },
      "medication[x]": {
        "key": "medication[x]",
        "display": "Medication[x]",
        "description": "Identifies the medication being administered. This is either a link to a resource representing the details of the medication or a simple attribute carrying a code that identifies the medication from a known list of medications.",
        "type": "CodeableConcept"
      },
      "subject": {
        "key": "subject",
        "display": "Subject",
        "description": "The person, animal or group who is/was taking the medication.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Group"
        ]
      },
      "context": {
        "key": "context",
        "display": "Context",
        "description": "The encounter or episode of care that establishes the context for this MedicationStatement.",
        "type": "Reference",
        "targetProfile": [
          "Encounter",
          "EpisodeOfCare"
        ]
      },
      "effective[x]": {
        "key": "effective[x]",
        "display": "Effective[x]",
        "description": "The interval of time during which it is being asserted that the patient is/was/will be taking the medication (or was not taking, when the MedicationStatement.taken element is No).",
        "type": "dateTime"
      },
      "dateAsserted": {
        "key": "dateAsserted",
        "display": "Date Asserted",
        "description": "The date when the medication statement was asserted by the information source.",
        "type": "dateTime"
      },
      "informationSource": {
        "key": "informationSource",
        "display": "Information Source",
        "description": "The person or organization that provided the information about the taking of this medication. Note: Use derivedFrom when a MedicationStatement is derived from other resources, e.g. Claim or MedicationRequest.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Practitioner",
          "PractitionerRole",
          "RelatedPerson",
          "Organization"
        ]
      },
      "derivedFrom": {
        "key": "derivedFrom",
        "display": "Derived From",
        "description": "Allows linking the MedicationStatement to the underlying MedicationRequest, or to other information that supports or is used to derive the MedicationStatement.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ],
        "array": true
      },
      "reasonCode": {
        "key": "reasonCode",
        "display": "Reason Code",
        "description": "A reason for why the medication is being/was taken.",
        "type": "CodeableConcept",
        "array": true
      },
      "reasonReference": {
        "key": "reasonReference",
        "display": "Reason Reference",
        "description": "Condition or observation that supports why the medication is being/was taken.",
        "type": "Reference",
        "targetProfile": [
          "Condition",
          "Observation",
          "DiagnosticReport"
        ],
        "array": true
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "Provides extra information about the medication statement that is not conveyed by the other attributes.",
        "type": "Annotation",
        "array": true
      },
      "dosage": {
        "key": "dosage",
        "display": "Dosage",
        "description": "Indicates how the medication is/was or should be taken by the patient.",
        "type": "Dosage",
        "array": true
      }
    }
  },
  "MedicinalProduct": {
    "display": "MedicinalProduct",
    "description": "Detailed definition of a medicinal product, typically for uses other than direct patient care (e.g. regulatory use).",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Business identifier for this product. Could be an MPID.",
        "type": "Identifier",
        "array": true
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Regulatory type, e.g. Investigational or Authorized.",
        "type": "CodeableConcept"
      },
      "domain": {
        "key": "domain",
        "display": "Domain",
        "description": "If this medicine applies to human or veterinary uses.",
        "type": "Coding"
      },
      "combinedPharmaceuticalDoseForm": {
        "key": "combinedPharmaceuticalDoseForm",
        "display": "Combined Pharmaceutical Dose Form",
        "description": "The dose form for a single part product, or combined form of a multiple part product.",
        "type": "CodeableConcept"
      },
      "legalStatusOfSupply": {
        "key": "legalStatusOfSupply",
        "display": "Legal Status Of Supply",
        "description": "The legal status of supply of the medicinal product as classified by the regulator.",
        "type": "CodeableConcept"
      },
      "additionalMonitoringIndicator": {
        "key": "additionalMonitoringIndicator",
        "display": "Additional Monitoring Indicator",
        "description": "Whether the Medicinal Product is subject to additional monitoring for regulatory reasons.",
        "type": "CodeableConcept"
      },
      "specialMeasures": {
        "key": "specialMeasures",
        "display": "Special Measures",
        "description": "Whether the Medicinal Product is subject to special measures for regulatory reasons.",
        "type": "string",
        "array": true
      },
      "paediatricUseIndicator": {
        "key": "paediatricUseIndicator",
        "display": "Paediatric Use Indicator",
        "description": "If authorised for use in children.",
        "type": "CodeableConcept"
      },
      "productClassification": {
        "key": "productClassification",
        "display": "Product Classification",
        "description": "Allows the product to be classified by various systems.",
        "type": "CodeableConcept",
        "array": true
      },
      "marketingStatus": {
        "key": "marketingStatus",
        "display": "Marketing Status",
        "description": "Marketing status of the medicinal product, in contrast to marketing authorizaton.",
        "type": "MarketingStatus",
        "array": true
      },
      "pharmaceuticalProduct": {
        "key": "pharmaceuticalProduct",
        "display": "Pharmaceutical Product",
        "description": "Pharmaceutical aspects of product.",
        "type": "Reference",
        "targetProfile": [
          "MedicinalProductPharmaceutical"
        ],
        "array": true
      },
      "packagedMedicinalProduct": {
        "key": "packagedMedicinalProduct",
        "display": "Packaged Medicinal Product",
        "description": "Package representation for the product.",
        "type": "Reference",
        "targetProfile": [
          "MedicinalProductPackaged"
        ],
        "array": true
      },
      "attachedDocument": {
        "key": "attachedDocument",
        "display": "Attached Document",
        "description": "Supporting documentation, typically for regulatory submission.",
        "type": "Reference",
        "targetProfile": [
          "DocumentReference"
        ],
        "array": true
      },
      "masterFile": {
        "key": "masterFile",
        "display": "Master File",
        "description": "A master file for to the medicinal product (e.g. Pharmacovigilance System Master File).",
        "type": "Reference",
        "targetProfile": [
          "DocumentReference"
        ],
        "array": true
      },
      "contact": {
        "key": "contact",
        "display": "Contact",
        "description": "A product specific contact, person (in a role), or an organization.",
        "type": "Reference",
        "targetProfile": [
          "Organization",
          "PractitionerRole"
        ],
        "array": true
      },
      "clinicalTrial": {
        "key": "clinicalTrial",
        "display": "Clinical Trial",
        "description": "Clinical trials or studies that this product is involved in.",
        "type": "Reference",
        "targetProfile": [
          "ResearchStudy"
        ],
        "array": true
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "The product's name, including full name and possibly coded parts.",
        "type": "MedicinalProduct_Name",
        "array": true
      },
      "crossReference": {
        "key": "crossReference",
        "display": "Cross Reference",
        "description": "Reference to another product, e.g. for linking authorised to investigational product.",
        "type": "Identifier",
        "array": true
      },
      "manufacturingBusinessOperation": {
        "key": "manufacturingBusinessOperation",
        "display": "Manufacturing Business Operation",
        "description": "An operation applied to the product, for manufacturing or adminsitrative purpose.",
        "type": "MedicinalProduct_ManufacturingBusinessOperation",
        "array": true
      },
      "specialDesignation": {
        "key": "specialDesignation",
        "display": "Special Designation",
        "description": "Indicates if the medicinal product has an orphan designation for the treatment of a rare disease.",
        "type": "MedicinalProduct_SpecialDesignation",
        "array": true
      }
    }
  },
  "MedicinalProduct_Name": {
    "display": "Medicinal Product Name",
    "description": "The product's name, including full name and possibly coded parts",
    "properties": {
      "productName": {
        "key": "productName",
        "display": "Product Name",
        "description": "The full product name.",
        "type": "string"
      },
      "namePart": {
        "key": "namePart",
        "display": "Name Part",
        "description": "Coding words or phrases of the name.",
        "type": "MedicinalProduct_Name_NamePart",
        "array": true
      },
      "countryLanguage": {
        "key": "countryLanguage",
        "display": "Country Language",
        "description": "Country where the name applies.",
        "type": "MedicinalProduct_Name_CountryLanguage",
        "array": true
      }
    },
    "backboneElement": true
  },
  "MedicinalProduct_Name_NamePart": {
    "display": "Medicinal Product Name_ Name Part",
    "description": "Coding words or phrases of the name",
    "properties": {
      "part": {
        "key": "part",
        "display": "Part",
        "description": "A fragment of a product name.",
        "type": "string"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Idenifying type for this part of the name (e.g. strength part).",
        "type": "Coding"
      }
    },
    "backboneElement": true
  },
  "MedicinalProduct_Name_CountryLanguage": {
    "display": "Medicinal Product Name_ Country Language",
    "description": "Country where the name applies",
    "properties": {
      "country": {
        "key": "country",
        "display": "Country",
        "description": "Country code for where this name applies.",
        "type": "CodeableConcept"
      },
      "jurisdiction": {
        "key": "jurisdiction",
        "display": "Jurisdiction",
        "description": "Jurisdiction code for where this name applies.",
        "type": "CodeableConcept"
      },
      "language": {
        "key": "language",
        "display": "Language",
        "description": "Language code for this name.",
        "type": "CodeableConcept"
      }
    },
    "backboneElement": true
  },
  "MedicinalProduct_ManufacturingBusinessOperation": {
    "display": "Medicinal Product Manufacturing Business Operation",
    "description": "An operation applied to the product, for manufacturing or adminsitrative purpose",
    "properties": {
      "operationType": {
        "key": "operationType",
        "display": "Operation Type",
        "description": "The type of manufacturing operation.",
        "type": "CodeableConcept"
      },
      "authorisationReferenceNumber": {
        "key": "authorisationReferenceNumber",
        "display": "Authorisation Reference Number",
        "description": "Regulatory authorization reference number.",
        "type": "Identifier"
      },
      "effectiveDate": {
        "key": "effectiveDate",
        "display": "Effective Date",
        "description": "Regulatory authorization date.",
        "type": "dateTime"
      },
      "confidentialityIndicator": {
        "key": "confidentialityIndicator",
        "display": "Confidentiality Indicator",
        "description": "To indicate if this proces is commercially confidential.",
        "type": "CodeableConcept"
      },
      "manufacturer": {
        "key": "manufacturer",
        "display": "Manufacturer",
        "description": "The manufacturer or establishment associated with the process.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ],
        "array": true
      },
      "regulator": {
        "key": "regulator",
        "display": "Regulator",
        "description": "A regulator which oversees the operation.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      }
    },
    "backboneElement": true
  },
  "MedicinalProduct_SpecialDesignation": {
    "display": "Medicinal Product Special Designation",
    "description": "Indicates if the medicinal product has an orphan designation for the treatment of a rare disease",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Identifier for the designation, or procedure number.",
        "type": "Identifier",
        "array": true
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The type of special designation, e.g. orphan drug, minor use.",
        "type": "CodeableConcept"
      },
      "intendedUse": {
        "key": "intendedUse",
        "display": "Intended Use",
        "description": "The intended use of the product, e.g. prevention, treatment.",
        "type": "CodeableConcept"
      },
      "indication[x]": {
        "key": "indication[x]",
        "display": "Indication[x]",
        "description": "Condition for which the medicinal use applies.",
        "type": "CodeableConcept"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "For example granted, pending, expired or withdrawn.",
        "type": "CodeableConcept"
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "Date when the designation was granted.",
        "type": "dateTime"
      },
      "species": {
        "key": "species",
        "display": "Species",
        "description": "Animal species for which this applies.",
        "type": "CodeableConcept"
      }
    },
    "backboneElement": true
  },
  "MedicinalProductAuthorization": {
    "display": "MedicinalProductAuthorization",
    "description": "The regulatory authorization of a medicinal product.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Business identifier for the marketing authorization, as assigned by a regulator.",
        "type": "Identifier",
        "array": true
      },
      "subject": {
        "key": "subject",
        "display": "Subject",
        "description": "The medicinal product that is being authorized.",
        "type": "Reference",
        "targetProfile": [
          "MedicinalProduct",
          "MedicinalProductPackaged"
        ]
      },
      "country": {
        "key": "country",
        "display": "Country",
        "description": "The country in which the marketing authorization has been granted.",
        "type": "CodeableConcept",
        "array": true
      },
      "jurisdiction": {
        "key": "jurisdiction",
        "display": "Jurisdiction",
        "description": "Jurisdiction within a country.",
        "type": "CodeableConcept",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of the marketing authorization.",
        "type": "CodeableConcept"
      },
      "statusDate": {
        "key": "statusDate",
        "display": "Status Date",
        "description": "The date at which the given status has become applicable.",
        "type": "dateTime"
      },
      "restoreDate": {
        "key": "restoreDate",
        "display": "Restore Date",
        "description": "The date when a suspended the marketing or the marketing authorization of the product is anticipated to be restored.",
        "type": "dateTime"
      },
      "validityPeriod": {
        "key": "validityPeriod",
        "display": "Validity Period",
        "description": "The beginning of the time period in which the marketing authorization is in the specific status shall be specified A complete date consisting of day, month and year shall be specified using the ISO 8601 date format.",
        "type": "Period"
      },
      "dataExclusivityPeriod": {
        "key": "dataExclusivityPeriod",
        "display": "Data Exclusivity Period",
        "description": "A period of time after authorization before generic product applicatiosn can be submitted.",
        "type": "Period"
      },
      "dateOfFirstAuthorization": {
        "key": "dateOfFirstAuthorization",
        "display": "Date Of First Authorization",
        "description": "The date when the first authorization was granted by a Medicines Regulatory Agency.",
        "type": "dateTime"
      },
      "internationalBirthDate": {
        "key": "internationalBirthDate",
        "display": "International Birth Date",
        "description": "Date of first marketing authorization for a company's new medicinal product in any country in the World.",
        "type": "dateTime"
      },
      "legalBasis": {
        "key": "legalBasis",
        "display": "Legal Basis",
        "description": "The legal framework against which this authorization is granted.",
        "type": "CodeableConcept"
      },
      "jurisdictionalAuthorization": {
        "key": "jurisdictionalAuthorization",
        "display": "Jurisdictional Authorization",
        "description": "Authorization in areas within a country.",
        "type": "MedicinalProductAuthorization_JurisdictionalAuthorization",
        "array": true
      },
      "holder": {
        "key": "holder",
        "display": "Holder",
        "description": "Marketing Authorization Holder.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "regulator": {
        "key": "regulator",
        "display": "Regulator",
        "description": "Medicines Regulatory Agency.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "procedure": {
        "key": "procedure",
        "display": "Procedure",
        "description": "The regulatory procedure for granting or amending a marketing authorization.",
        "type": "MedicinalProductAuthorization_Procedure"
      }
    }
  },
  "MedicinalProductAuthorization_JurisdictionalAuthorization": {
    "display": "Medicinal Product Authorization Jurisdictional Authorization",
    "description": "Authorization in areas within a country",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "The assigned number for the marketing authorization.",
        "type": "Identifier",
        "array": true
      },
      "country": {
        "key": "country",
        "display": "Country",
        "description": "Country of authorization.",
        "type": "CodeableConcept"
      },
      "jurisdiction": {
        "key": "jurisdiction",
        "display": "Jurisdiction",
        "description": "Jurisdiction within a country.",
        "type": "CodeableConcept",
        "array": true
      },
      "legalStatusOfSupply": {
        "key": "legalStatusOfSupply",
        "display": "Legal Status Of Supply",
        "description": "The legal status of supply in a jurisdiction or region.",
        "type": "CodeableConcept"
      },
      "validityPeriod": {
        "key": "validityPeriod",
        "display": "Validity Period",
        "description": "The start and expected end date of the authorization.",
        "type": "Period"
      }
    },
    "backboneElement": true
  },
  "MedicinalProductAuthorization_Procedure": {
    "display": "Medicinal Product Authorization Procedure",
    "description": "The regulatory procedure for granting or amending a marketing authorization",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Identifier for this procedure.",
        "type": "Identifier"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Type of procedure.",
        "type": "CodeableConcept"
      },
      "date[x]": {
        "key": "date[x]",
        "display": "Date[x]",
        "description": "Date of procedure.",
        "type": "Period"
      },
      "application": {
        "key": "application",
        "display": "Application",
        "description": "Applcations submitted to obtain a marketing authorization.",
        "type": "UNKNOWN"
      }
    },
    "backboneElement": true
  },
  "MedicinalProductContraindication": {
    "display": "MedicinalProductContraindication",
    "description": "The clinical particulars - indications, contraindications etc. of a medicinal product, including for regulatory purposes.",
    "properties": {
      "subject": {
        "key": "subject",
        "display": "Subject",
        "description": "The medication for which this is an indication.",
        "type": "Reference",
        "targetProfile": [
          "MedicinalProduct",
          "Medication"
        ],
        "array": true
      },
      "disease": {
        "key": "disease",
        "display": "Disease",
        "description": "The disease, symptom or procedure for the contraindication.",
        "type": "CodeableConcept"
      },
      "diseaseStatus": {
        "key": "diseaseStatus",
        "display": "Disease Status",
        "description": "The status of the disease or symptom for the contraindication.",
        "type": "CodeableConcept"
      },
      "comorbidity": {
        "key": "comorbidity",
        "display": "Comorbidity",
        "description": "A comorbidity (concurrent condition) or coinfection.",
        "type": "CodeableConcept",
        "array": true
      },
      "therapeuticIndication": {
        "key": "therapeuticIndication",
        "display": "Therapeutic Indication",
        "description": "Information about the use of the medicinal product in relation to other therapies as part of the indication.",
        "type": "Reference",
        "targetProfile": [
          "MedicinalProductIndication"
        ],
        "array": true
      },
      "otherTherapy": {
        "key": "otherTherapy",
        "display": "Other Therapy",
        "description": "Information about the use of the medicinal product in relation to other therapies described as part of the indication.",
        "type": "MedicinalProductContraindication_OtherTherapy",
        "array": true
      },
      "population": {
        "key": "population",
        "display": "Population",
        "description": "The population group to which this applies.",
        "type": "Population",
        "array": true
      }
    }
  },
  "MedicinalProductContraindication_OtherTherapy": {
    "display": "Medicinal Product Contraindication Other Therapy",
    "description": "Information about the use of the medicinal product in relation to other therapies described as part of the indication",
    "properties": {
      "therapyRelationshipType": {
        "key": "therapyRelationshipType",
        "display": "Therapy Relationship Type",
        "description": "The type of relationship between the medicinal product indication or contraindication and another therapy.",
        "type": "CodeableConcept"
      },
      "medication[x]": {
        "key": "medication[x]",
        "display": "Medication[x]",
        "description": "Reference to a specific medication (active substance, medicinal product or class of products) as part of an indication or contraindication.",
        "type": "CodeableConcept"
      }
    },
    "backboneElement": true
  },
  "MedicinalProductIndication": {
    "display": "MedicinalProductIndication",
    "description": "Indication for the Medicinal Product.",
    "properties": {
      "subject": {
        "key": "subject",
        "display": "Subject",
        "description": "The medication for which this is an indication.",
        "type": "Reference",
        "targetProfile": [
          "MedicinalProduct",
          "Medication"
        ],
        "array": true
      },
      "diseaseSymptomProcedure": {
        "key": "diseaseSymptomProcedure",
        "display": "Disease Symptom Procedure",
        "description": "The disease, symptom or procedure that is the indication for treatment.",
        "type": "CodeableConcept"
      },
      "diseaseStatus": {
        "key": "diseaseStatus",
        "display": "Disease Status",
        "description": "The status of the disease or symptom for which the indication applies.",
        "type": "CodeableConcept"
      },
      "comorbidity": {
        "key": "comorbidity",
        "display": "Comorbidity",
        "description": "Comorbidity (concurrent condition) or co-infection as part of the indication.",
        "type": "CodeableConcept",
        "array": true
      },
      "intendedEffect": {
        "key": "intendedEffect",
        "display": "Intended Effect",
        "description": "The intended effect, aim or strategy to be achieved by the indication.",
        "type": "CodeableConcept"
      },
      "duration": {
        "key": "duration",
        "display": "Duration",
        "description": "Timing or duration information as part of the indication.",
        "type": "Quantity"
      },
      "otherTherapy": {
        "key": "otherTherapy",
        "display": "Other Therapy",
        "description": "Information about the use of the medicinal product in relation to other therapies described as part of the indication.",
        "type": "MedicinalProductIndication_OtherTherapy",
        "array": true
      },
      "undesirableEffect": {
        "key": "undesirableEffect",
        "display": "Undesirable Effect",
        "description": "Describe the undesirable effects of the medicinal product.",
        "type": "Reference",
        "targetProfile": [
          "MedicinalProductUndesirableEffect"
        ],
        "array": true
      },
      "population": {
        "key": "population",
        "display": "Population",
        "description": "The population group to which this applies.",
        "type": "Population",
        "array": true
      }
    }
  },
  "MedicinalProductIndication_OtherTherapy": {
    "display": "Medicinal Product Indication Other Therapy",
    "description": "Information about the use of the medicinal product in relation to other therapies described as part of the indication",
    "properties": {
      "therapyRelationshipType": {
        "key": "therapyRelationshipType",
        "display": "Therapy Relationship Type",
        "description": "The type of relationship between the medicinal product indication or contraindication and another therapy.",
        "type": "CodeableConcept"
      },
      "medication[x]": {
        "key": "medication[x]",
        "display": "Medication[x]",
        "description": "Reference to a specific medication (active substance, medicinal product or class of products) as part of an indication or contraindication.",
        "type": "CodeableConcept"
      }
    },
    "backboneElement": true
  },
  "MedicinalProductIngredient": {
    "display": "MedicinalProductIngredient",
    "description": "An ingredient of a manufactured item or pharmaceutical product.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "The identifier(s) of this Ingredient that are assigned by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate.",
        "type": "Identifier"
      },
      "role": {
        "key": "role",
        "display": "Role",
        "description": "Ingredient role e.g. Active ingredient, excipient.",
        "type": "CodeableConcept"
      },
      "allergenicIndicator": {
        "key": "allergenicIndicator",
        "display": "Allergenic Indicator",
        "description": "If the ingredient is a known or suspected allergen.",
        "type": "boolean"
      },
      "manufacturer": {
        "key": "manufacturer",
        "display": "Manufacturer",
        "description": "Manufacturer of this Ingredient.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ],
        "array": true
      },
      "specifiedSubstance": {
        "key": "specifiedSubstance",
        "display": "Specified Substance",
        "description": "A specified substance that comprises this ingredient.",
        "type": "MedicinalProductIngredient_SpecifiedSubstance",
        "array": true
      },
      "substance": {
        "key": "substance",
        "display": "Substance",
        "description": "The ingredient substance.",
        "type": "MedicinalProductIngredient_Substance"
      }
    }
  },
  "MedicinalProductIngredient_SpecifiedSubstance": {
    "display": "Medicinal Product Ingredient Specified Substance",
    "description": "A specified substance that comprises this ingredient",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "The specified substance.",
        "type": "CodeableConcept"
      },
      "group": {
        "key": "group",
        "display": "Group",
        "description": "The group of specified substance, e.g. group 1 to 4.",
        "type": "CodeableConcept"
      },
      "confidentiality": {
        "key": "confidentiality",
        "display": "Confidentiality",
        "description": "Confidentiality level of the specified substance as the ingredient.",
        "type": "CodeableConcept"
      },
      "strength": {
        "key": "strength",
        "display": "Strength",
        "description": "Quantity of the substance or specified substance present in the manufactured item or pharmaceutical product.",
        "type": "MedicinalProductIngredient_SpecifiedSubstance_Strength",
        "array": true
      }
    },
    "backboneElement": true
  },
  "MedicinalProductIngredient_SpecifiedSubstance_Strength": {
    "display": "Medicinal Product Ingredient Specified Substance_ Strength",
    "description": "Quantity of the substance or specified substance present in the manufactured item or pharmaceutical product",
    "properties": {
      "presentation": {
        "key": "presentation",
        "display": "Presentation",
        "description": "The quantity of substance in the unit of presentation, or in the volume (or mass) of the single pharmaceutical product or manufactured item.",
        "type": "Ratio"
      },
      "presentationLowLimit": {
        "key": "presentationLowLimit",
        "display": "Presentation Low Limit",
        "description": "A lower limit for the quantity of substance in the unit of presentation. For use when there is a range of strengths, this is the lower limit, with the presentation attribute becoming the upper limit.",
        "type": "Ratio"
      },
      "concentration": {
        "key": "concentration",
        "display": "Concentration",
        "description": "The strength per unitary volume (or mass).",
        "type": "Ratio"
      },
      "concentrationLowLimit": {
        "key": "concentrationLowLimit",
        "display": "Concentration Low Limit",
        "description": "A lower limit for the strength per unitary volume (or mass), for when there is a range. The concentration attribute then becomes the upper limit.",
        "type": "Ratio"
      },
      "measurementPoint": {
        "key": "measurementPoint",
        "display": "Measurement Point",
        "description": "For when strength is measured at a particular point or distance.",
        "type": "string"
      },
      "country": {
        "key": "country",
        "display": "Country",
        "description": "The country or countries for which the strength range applies.",
        "type": "CodeableConcept",
        "array": true
      },
      "referenceStrength": {
        "key": "referenceStrength",
        "display": "Reference Strength",
        "description": "Strength expressed in terms of a reference substance.",
        "type": "MedicinalProductIngredient_SpecifiedSubstance_Strength_ReferenceStrength",
        "array": true
      }
    },
    "backboneElement": true
  },
  "MedicinalProductIngredient_SpecifiedSubstance_Strength_ReferenceStrength": {
    "display": "Medicinal Product Ingredient Specified Substance_ Strength_ Reference Strength",
    "description": "Strength expressed in terms of a reference substance",
    "properties": {
      "substance": {
        "key": "substance",
        "display": "Substance",
        "description": "Relevant reference substance.",
        "type": "CodeableConcept"
      },
      "strength": {
        "key": "strength",
        "display": "Strength",
        "description": "Strength expressed in terms of a reference substance.",
        "type": "Ratio"
      },
      "strengthLowLimit": {
        "key": "strengthLowLimit",
        "display": "Strength Low Limit",
        "description": "Strength expressed in terms of a reference substance.",
        "type": "Ratio"
      },
      "measurementPoint": {
        "key": "measurementPoint",
        "display": "Measurement Point",
        "description": "For when strength is measured at a particular point or distance.",
        "type": "string"
      },
      "country": {
        "key": "country",
        "display": "Country",
        "description": "The country or countries for which the strength range applies.",
        "type": "CodeableConcept",
        "array": true
      }
    },
    "backboneElement": true
  },
  "MedicinalProductIngredient_Substance": {
    "display": "Medicinal Product Ingredient Substance",
    "description": "The ingredient substance",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "The ingredient substance.",
        "type": "CodeableConcept"
      },
      "strength": {
        "key": "strength",
        "display": "Strength",
        "description": "Quantity of the substance or specified substance present in the manufactured item or pharmaceutical product.",
        "type": "UNKNOWN"
      }
    },
    "backboneElement": true
  },
  "MedicinalProductInteraction": {
    "display": "MedicinalProductInteraction",
    "description": "The interactions of the medicinal product with other medicinal products, or other forms of interactions.",
    "properties": {
      "subject": {
        "key": "subject",
        "display": "Subject",
        "description": "The medication for which this is a described interaction.",
        "type": "Reference",
        "targetProfile": [
          "MedicinalProduct",
          "Medication",
          "Substance"
        ],
        "array": true
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "The interaction described.",
        "type": "string"
      },
      "interactant": {
        "key": "interactant",
        "display": "Interactant",
        "description": "The specific medication, food or laboratory test that interacts.",
        "type": "MedicinalProductInteraction_Interactant",
        "array": true
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The type of the interaction e.g. drug-drug interaction, drug-food interaction, drug-lab test interaction.",
        "type": "CodeableConcept"
      },
      "effect": {
        "key": "effect",
        "display": "Effect",
        "description": "The effect of the interaction, for example \"reduced gastric absorption of primary medication\".",
        "type": "CodeableConcept"
      },
      "incidence": {
        "key": "incidence",
        "display": "Incidence",
        "description": "The incidence of the interaction, e.g. theoretical, observed.",
        "type": "CodeableConcept"
      },
      "management": {
        "key": "management",
        "display": "Management",
        "description": "Actions for managing the interaction.",
        "type": "CodeableConcept"
      }
    }
  },
  "MedicinalProductInteraction_Interactant": {
    "display": "Medicinal Product Interaction Interactant",
    "description": "The specific medication, food or laboratory test that interacts",
    "properties": {
      "item[x]": {
        "key": "item[x]",
        "display": "Item[x]",
        "description": "The specific medication, food or laboratory test that interacts.",
        "type": "Reference",
        "targetProfile": [
          "MedicinalProduct",
          "Medication",
          "Substance",
          "ObservationDefinition"
        ]
      }
    },
    "backboneElement": true
  },
  "MedicinalProductManufactured": {
    "display": "MedicinalProductManufactured",
    "description": "The manufactured item as contained in the packaged medicinal product.",
    "properties": {
      "manufacturedDoseForm": {
        "key": "manufacturedDoseForm",
        "display": "Manufactured Dose Form",
        "description": "Dose form as manufactured and before any transformation into the pharmaceutical product.",
        "type": "CodeableConcept"
      },
      "unitOfPresentation": {
        "key": "unitOfPresentation",
        "display": "Unit Of Presentation",
        "description": "The “real world” units in which the quantity of the manufactured item is described.",
        "type": "CodeableConcept"
      },
      "quantity": {
        "key": "quantity",
        "display": "Quantity",
        "description": "The quantity or \"count number\" of the manufactured item.",
        "type": "Quantity"
      },
      "manufacturer": {
        "key": "manufacturer",
        "display": "Manufacturer",
        "description": "Manufacturer of the item (Note that this should be named \"manufacturer\" but it currently causes technical issues).",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ],
        "array": true
      },
      "ingredient": {
        "key": "ingredient",
        "display": "Ingredient",
        "description": "Ingredient.",
        "type": "Reference",
        "targetProfile": [
          "MedicinalProductIngredient"
        ],
        "array": true
      },
      "physicalCharacteristics": {
        "key": "physicalCharacteristics",
        "display": "Physical Characteristics",
        "description": "Dimensions, color etc.",
        "type": "ProdCharacteristic"
      },
      "otherCharacteristics": {
        "key": "otherCharacteristics",
        "display": "Other Characteristics",
        "description": "Other codeable characteristics.",
        "type": "CodeableConcept",
        "array": true
      }
    }
  },
  "MedicinalProductPackaged": {
    "display": "MedicinalProductPackaged",
    "description": "A medicinal product in a container or package.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Unique identifier.",
        "type": "Identifier",
        "array": true
      },
      "subject": {
        "key": "subject",
        "display": "Subject",
        "description": "The product with this is a pack for.",
        "type": "Reference",
        "targetProfile": [
          "MedicinalProduct"
        ],
        "array": true
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "Textual description.",
        "type": "string"
      },
      "legalStatusOfSupply": {
        "key": "legalStatusOfSupply",
        "display": "Legal Status Of Supply",
        "description": "The legal status of supply of the medicinal product as classified by the regulator.",
        "type": "CodeableConcept"
      },
      "marketingStatus": {
        "key": "marketingStatus",
        "display": "Marketing Status",
        "description": "Marketing information.",
        "type": "MarketingStatus",
        "array": true
      },
      "marketingAuthorization": {
        "key": "marketingAuthorization",
        "display": "Marketing Authorization",
        "description": "Manufacturer of this Package Item.",
        "type": "Reference",
        "targetProfile": [
          "MedicinalProductAuthorization"
        ]
      },
      "manufacturer": {
        "key": "manufacturer",
        "display": "Manufacturer",
        "description": "Manufacturer of this Package Item.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ],
        "array": true
      },
      "batchIdentifier": {
        "key": "batchIdentifier",
        "display": "Batch Identifier",
        "description": "Batch numbering.",
        "type": "MedicinalProductPackaged_BatchIdentifier",
        "array": true
      },
      "packageItem": {
        "key": "packageItem",
        "display": "Package Item",
        "description": "A packaging item, as a contained for medicine, possibly with other packaging items within.",
        "type": "MedicinalProductPackaged_PackageItem",
        "array": true
      }
    }
  },
  "MedicinalProductPackaged_BatchIdentifier": {
    "display": "Medicinal Product Packaged Batch Identifier",
    "description": "Batch numbering",
    "properties": {
      "outerPackaging": {
        "key": "outerPackaging",
        "display": "Outer Packaging",
        "description": "A number appearing on the outer packaging of a specific batch.",
        "type": "Identifier"
      },
      "immediatePackaging": {
        "key": "immediatePackaging",
        "display": "Immediate Packaging",
        "description": "A number appearing on the immediate packaging (and not the outer packaging).",
        "type": "Identifier"
      }
    },
    "backboneElement": true
  },
  "MedicinalProductPackaged_PackageItem": {
    "display": "Medicinal Product Packaged Package Item",
    "description": "A packaging item, as a contained for medicine, possibly with other packaging items within",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Including possibly Data Carrier Identifier.",
        "type": "Identifier",
        "array": true
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The physical type of the container of the medicine.",
        "type": "CodeableConcept"
      },
      "quantity": {
        "key": "quantity",
        "display": "Quantity",
        "description": "The quantity of this package in the medicinal product, at the current level of packaging. The outermost is always 1.",
        "type": "Quantity"
      },
      "material": {
        "key": "material",
        "display": "Material",
        "description": "Material type of the package item.",
        "type": "CodeableConcept",
        "array": true
      },
      "alternateMaterial": {
        "key": "alternateMaterial",
        "display": "Alternate Material",
        "description": "A possible alternate material for the packaging.",
        "type": "CodeableConcept",
        "array": true
      },
      "device": {
        "key": "device",
        "display": "Device",
        "description": "A device accompanying a medicinal product.",
        "type": "Reference",
        "targetProfile": [
          "DeviceDefinition"
        ],
        "array": true
      },
      "manufacturedItem": {
        "key": "manufacturedItem",
        "display": "Manufactured Item",
        "description": "The manufactured item as contained in the packaged medicinal product.",
        "type": "Reference",
        "targetProfile": [
          "MedicinalProductManufactured"
        ],
        "array": true
      },
      "packageItem": {
        "key": "packageItem",
        "display": "Package Item",
        "description": "Allows containers within containers.",
        "type": "UNKNOWN"
      },
      "physicalCharacteristics": {
        "key": "physicalCharacteristics",
        "display": "Physical Characteristics",
        "description": "Dimensions, color etc.",
        "type": "ProdCharacteristic"
      },
      "otherCharacteristics": {
        "key": "otherCharacteristics",
        "display": "Other Characteristics",
        "description": "Other codeable characteristics.",
        "type": "CodeableConcept",
        "array": true
      },
      "shelfLifeStorage": {
        "key": "shelfLifeStorage",
        "display": "Shelf Life Storage",
        "description": "Shelf Life and storage information.",
        "type": "ProductShelfLife",
        "array": true
      },
      "manufacturer": {
        "key": "manufacturer",
        "display": "Manufacturer",
        "description": "Manufacturer of this Package Item.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ],
        "array": true
      }
    },
    "backboneElement": true
  },
  "MedicinalProductPharmaceutical": {
    "display": "MedicinalProductPharmaceutical",
    "description": "A pharmaceutical product described in terms of its composition and dose form.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "An identifier for the pharmaceutical medicinal product.",
        "type": "Identifier",
        "array": true
      },
      "administrableDoseForm": {
        "key": "administrableDoseForm",
        "display": "Administrable Dose Form",
        "description": "The administrable dose form, after necessary reconstitution.",
        "type": "CodeableConcept"
      },
      "unitOfPresentation": {
        "key": "unitOfPresentation",
        "display": "Unit Of Presentation",
        "description": "Todo.",
        "type": "CodeableConcept"
      },
      "ingredient": {
        "key": "ingredient",
        "display": "Ingredient",
        "description": "Ingredient.",
        "type": "Reference",
        "targetProfile": [
          "MedicinalProductIngredient"
        ],
        "array": true
      },
      "device": {
        "key": "device",
        "display": "Device",
        "description": "Accompanying device.",
        "type": "Reference",
        "targetProfile": [
          "DeviceDefinition"
        ],
        "array": true
      },
      "characteristics": {
        "key": "characteristics",
        "display": "Characteristics",
        "description": "Characteristics e.g. a products onset of action.",
        "type": "MedicinalProductPharmaceutical_Characteristics",
        "array": true
      },
      "routeOfAdministration": {
        "key": "routeOfAdministration",
        "display": "Route Of Administration",
        "description": "The path by which the pharmaceutical product is taken into or makes contact with the body.",
        "type": "MedicinalProductPharmaceutical_RouteOfAdministration",
        "array": true
      }
    }
  },
  "MedicinalProductPharmaceutical_Characteristics": {
    "display": "Medicinal Product Pharmaceutical Characteristics",
    "description": "Characteristics e.g. a products onset of action",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "A coded characteristic.",
        "type": "CodeableConcept"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of characteristic e.g. assigned or pending.",
        "type": "CodeableConcept"
      }
    },
    "backboneElement": true
  },
  "MedicinalProductPharmaceutical_RouteOfAdministration": {
    "display": "Medicinal Product Pharmaceutical Route Of Administration",
    "description": "The path by which the pharmaceutical product is taken into or makes contact with the body",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "Coded expression for the route.",
        "type": "CodeableConcept"
      },
      "firstDose": {
        "key": "firstDose",
        "display": "First Dose",
        "description": "The first dose (dose quantity) administered in humans can be specified, for a product under investigation, using a numerical value and its unit of measurement.",
        "type": "Quantity"
      },
      "maxSingleDose": {
        "key": "maxSingleDose",
        "display": "Max Single Dose",
        "description": "The maximum single dose that can be administered as per the protocol of a clinical trial can be specified using a numerical value and its unit of measurement.",
        "type": "Quantity"
      },
      "maxDosePerDay": {
        "key": "maxDosePerDay",
        "display": "Max Dose Per Day",
        "description": "The maximum dose per day (maximum dose quantity to be administered in any one 24-h period) that can be administered as per the protocol referenced in the clinical trial authorisation.",
        "type": "Quantity"
      },
      "maxDosePerTreatmentPeriod": {
        "key": "maxDosePerTreatmentPeriod",
        "display": "Max Dose Per Treatment Period",
        "description": "The maximum dose per treatment period that can be administered as per the protocol referenced in the clinical trial authorisation.",
        "type": "Ratio"
      },
      "maxTreatmentPeriod": {
        "key": "maxTreatmentPeriod",
        "display": "Max Treatment Period",
        "description": "The maximum treatment period during which an Investigational Medicinal Product can be administered as per the protocol referenced in the clinical trial authorisation.",
        "type": "Duration"
      },
      "targetSpecies": {
        "key": "targetSpecies",
        "display": "Target Species",
        "description": "A species for which this route applies.",
        "type": "MedicinalProductPharmaceutical_RouteOfAdministration_TargetSpecies",
        "array": true
      }
    },
    "backboneElement": true
  },
  "MedicinalProductPharmaceutical_RouteOfAdministration_TargetSpecies": {
    "display": "Medicinal Product Pharmaceutical Route Of Administration_ Target Species",
    "description": "A species for which this route applies",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "Coded expression for the species.",
        "type": "CodeableConcept"
      },
      "withdrawalPeriod": {
        "key": "withdrawalPeriod",
        "display": "Withdrawal Period",
        "description": "A species specific time during which consumption of animal product is not appropriate.",
        "type": "MedicinalProductPharmaceutical_RouteOfAdministration_TargetSpecies_WithdrawalPeriod",
        "array": true
      }
    },
    "backboneElement": true
  },
  "MedicinalProductPharmaceutical_RouteOfAdministration_TargetSpecies_WithdrawalPeriod": {
    "display": "Medicinal Product Pharmaceutical Route Of Administration_ Target Species_ Withdrawal Period",
    "description": "A species specific time during which consumption of animal product is not appropriate",
    "properties": {
      "tissue": {
        "key": "tissue",
        "display": "Tissue",
        "description": "Coded expression for the type of tissue for which the withdrawal period applues, e.g. meat, milk.",
        "type": "CodeableConcept"
      },
      "value": {
        "key": "value",
        "display": "Value",
        "description": "A value for the time.",
        "type": "Quantity"
      },
      "supportingInformation": {
        "key": "supportingInformation",
        "display": "Supporting Information",
        "description": "Extra information about the withdrawal period.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "MedicinalProductUndesirableEffect": {
    "display": "MedicinalProductUndesirableEffect",
    "description": "Describe the undesirable effects of the medicinal product.",
    "properties": {
      "subject": {
        "key": "subject",
        "display": "Subject",
        "description": "The medication for which this is an indication.",
        "type": "Reference",
        "targetProfile": [
          "MedicinalProduct",
          "Medication"
        ],
        "array": true
      },
      "symptomConditionEffect": {
        "key": "symptomConditionEffect",
        "display": "Symptom Condition Effect",
        "description": "The symptom, condition or undesirable effect.",
        "type": "CodeableConcept"
      },
      "classification": {
        "key": "classification",
        "display": "Classification",
        "description": "Classification of the effect.",
        "type": "CodeableConcept"
      },
      "frequencyOfOccurrence": {
        "key": "frequencyOfOccurrence",
        "display": "Frequency Of Occurrence",
        "description": "The frequency of occurrence of the effect.",
        "type": "CodeableConcept"
      },
      "population": {
        "key": "population",
        "display": "Population",
        "description": "The population group to which this applies.",
        "type": "Population",
        "array": true
      }
    }
  },
  "MessageDefinition": {
    "display": "MessageDefinition",
    "description": "Defines the characteristics of a message that can be shared between systems, including the type of event that initiates the message, the content to be transmitted and what response(s), if any, are permitted.",
    "properties": {
      "url": {
        "key": "url",
        "display": "Url",
        "description": "The business identifier that is used to reference the MessageDefinition and *is* expected to be consistent from server to server.",
        "type": "uri"
      },
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "A formal identifier that is used to identify this message definition when it is represented in other formats, or referenced in a specification, model, design or an instance.",
        "type": "Identifier",
        "array": true
      },
      "version": {
        "key": "version",
        "display": "Version",
        "description": "The identifier that is used to identify this version of the message definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the message definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
        "type": "string"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A natural language name identifying the message definition. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
        "type": "string"
      },
      "title": {
        "key": "title",
        "display": "Title",
        "description": "A short, descriptive, user-friendly title for the message definition.",
        "type": "string"
      },
      "replaces": {
        "key": "replaces",
        "display": "Replaces",
        "description": "A MessageDefinition that is superseded by this definition.",
        "type": "canonical",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of this message definition. Enables tracking the life-cycle of the content.",
        "type": "enum",
        "enumValues": [
          "draft",
          "active",
          "retired",
          "unknown"
        ]
      },
      "experimental": {
        "key": "experimental",
        "display": "Experimental",
        "description": "A Boolean value to indicate that this message definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
        "type": "boolean"
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "The date  (and optionally time) when the message definition was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the message definition changes.",
        "type": "dateTime"
      },
      "publisher": {
        "key": "publisher",
        "display": "Publisher",
        "description": "The name of the organization or individual that published the message definition.",
        "type": "string"
      },
      "contact": {
        "key": "contact",
        "display": "Contact",
        "description": "Contact details to assist a user in finding and communicating with the publisher.",
        "type": "ContactDetail",
        "array": true
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A free text natural language description of the message definition from a consumer's perspective.",
        "type": "markdown"
      },
      "useContext": {
        "key": "useContext",
        "display": "Use Context",
        "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate message definition instances.",
        "type": "UsageContext",
        "array": true
      },
      "jurisdiction": {
        "key": "jurisdiction",
        "display": "Jurisdiction",
        "description": "A legal or geographic region in which the message definition is intended to be used.",
        "type": "CodeableConcept",
        "array": true
      },
      "purpose": {
        "key": "purpose",
        "display": "Purpose",
        "description": "Explanation of why this message definition is needed and why it has been designed as it has.",
        "type": "markdown"
      },
      "copyright": {
        "key": "copyright",
        "display": "Copyright",
        "description": "A copyright statement relating to the message definition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the message definition.",
        "type": "markdown"
      },
      "base": {
        "key": "base",
        "display": "Base",
        "description": "The MessageDefinition that is the basis for the contents of this resource.",
        "type": "canonical"
      },
      "parent": {
        "key": "parent",
        "display": "Parent",
        "description": "Identifies a protocol or workflow that this MessageDefinition represents a step in.",
        "type": "canonical",
        "array": true
      },
      "event[x]": {
        "key": "event[x]",
        "display": "Event[x]",
        "description": "Event code or link to the EventDefinition.",
        "type": "Coding"
      },
      "category": {
        "key": "category",
        "display": "Category",
        "description": "The impact of the content of the message.",
        "type": "enum",
        "enumValues": [
          "consequence",
          "currency",
          "notification"
        ]
      },
      "focus": {
        "key": "focus",
        "display": "Focus",
        "description": "Identifies the resource (or resources) that are being addressed by the event.  For example, the Encounter for an admit message or two Account records for a merge.",
        "type": "MessageDefinition_Focus",
        "array": true
      },
      "responseRequired": {
        "key": "responseRequired",
        "display": "Response Required",
        "description": "Declare at a message definition level whether a response is required or only upon error or success, or never.",
        "type": "enum",
        "enumValues": [
          "always",
          "on-error",
          "never",
          "on-success"
        ]
      },
      "allowedResponse": {
        "key": "allowedResponse",
        "display": "Allowed Response",
        "description": "Indicates what types of messages may be sent as an application-level response to this message.",
        "type": "MessageDefinition_AllowedResponse",
        "array": true
      },
      "graph": {
        "key": "graph",
        "display": "Graph",
        "description": "Canonical reference to a GraphDefinition. If a URL is provided, it is the canonical reference to a [GraphDefinition](graphdefinition.html) that it controls what resources are to be added to the bundle when building the document. The GraphDefinition can also specify profiles that apply to the various resources.",
        "type": "canonical",
        "array": true
      }
    }
  },
  "MessageDefinition_Focus": {
    "display": "Message Definition Focus",
    "description": "Resource(s) that are the subject of the event",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "The kind of resource that must be the focus for this message.",
        "type": "enum",
        "enumValues": [
          "Type of resource"
        ]
      },
      "profile": {
        "key": "profile",
        "display": "Profile",
        "description": "A profile that reflects constraints for the focal resource (and potentially for related resources).",
        "type": "canonical"
      },
      "min": {
        "key": "min",
        "display": "Min",
        "description": "Identifies the minimum number of resources of this type that must be pointed to by a message in order for it to be valid against this MessageDefinition.",
        "type": "unsignedInt"
      },
      "max": {
        "key": "max",
        "display": "Max",
        "description": "Identifies the maximum number of resources of this type that must be pointed to by a message in order for it to be valid against this MessageDefinition.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "MessageDefinition_AllowedResponse": {
    "display": "Message Definition Allowed Response",
    "description": "Responses to this message",
    "properties": {
      "message": {
        "key": "message",
        "display": "Message",
        "description": "A reference to the message definition that must be adhered to by this supported response.",
        "type": "canonical"
      },
      "situation": {
        "key": "situation",
        "display": "Situation",
        "description": "Provides a description of the circumstances in which this response should be used (as opposed to one of the alternative responses).",
        "type": "markdown"
      }
    },
    "backboneElement": true
  },
  "MessageHeader": {
    "display": "MessageHeader",
    "description": "The header for a message exchange that is either requesting or responding to an action.  The reference(s) that are the subject of the action as well as other information related to the action are typically transmitted in a bundle in which the MessageHeader resource instance is the first resource in the bundle.",
    "properties": {
      "event[x]": {
        "key": "event[x]",
        "display": "Event[x]",
        "description": "Code that identifies the event this message represents and connects it with its definition. Events defined as part of the FHIR specification have the system value \"http://terminology.hl7.org/CodeSystem/message-events\".  Alternatively uri to the EventDefinition.",
        "type": "Coding"
      },
      "destination": {
        "key": "destination",
        "display": "Destination",
        "description": "The destination application which the message is intended for.",
        "type": "MessageHeader_Destination",
        "array": true
      },
      "sender": {
        "key": "sender",
        "display": "Sender",
        "description": "Identifies the sending system to allow the use of a trust relationship.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization"
        ]
      },
      "enterer": {
        "key": "enterer",
        "display": "Enterer",
        "description": "The person or device that performed the data entry leading to this message. When there is more than one candidate, pick the most proximal to the message. Can provide other enterers in extensions.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole"
        ]
      },
      "author": {
        "key": "author",
        "display": "Author",
        "description": "The logical author of the message - the person or device that decided the described event should happen. When there is more than one candidate, pick the most proximal to the MessageHeader. Can provide other authors in extensions.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole"
        ]
      },
      "source": {
        "key": "source",
        "display": "Source",
        "description": "The source application from which this message originated.",
        "type": "MessageHeader_Source"
      },
      "responsible": {
        "key": "responsible",
        "display": "Responsible",
        "description": "The person or organization that accepts overall responsibility for the contents of the message. The implication is that the message event happened under the policies of the responsible party.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization"
        ]
      },
      "reason": {
        "key": "reason",
        "display": "Reason",
        "description": "Coded indication of the cause for the event - indicates  a reason for the occurrence of the event that is a focus of this message.",
        "type": "CodeableConcept"
      },
      "response": {
        "key": "response",
        "display": "Response",
        "description": "Information about the message that this message is a response to.  Only present if this message is a response.",
        "type": "MessageHeader_Response"
      },
      "focus": {
        "key": "focus",
        "display": "Focus",
        "description": "The actual data of the message - a reference to the root/focus class of the event.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ],
        "array": true
      },
      "definition": {
        "key": "definition",
        "display": "Definition",
        "description": "Permanent link to the MessageDefinition for this message.",
        "type": "canonical"
      }
    }
  },
  "MessageHeader_Destination": {
    "display": "Message Header Destination",
    "description": "Message destination application(s)",
    "properties": {
      "name": {
        "key": "name",
        "display": "Name",
        "description": "Human-readable name for the target system.",
        "type": "string"
      },
      "target": {
        "key": "target",
        "display": "Target",
        "description": "Identifies the target end system in situations where the initial message transmission is to an intermediary system.",
        "type": "Reference",
        "targetProfile": [
          "Device"
        ]
      },
      "endpoint": {
        "key": "endpoint",
        "display": "Endpoint",
        "description": "Indicates where the message should be routed to.",
        "type": "url"
      },
      "receiver": {
        "key": "receiver",
        "display": "Receiver",
        "description": "Allows data conveyed by a message to be addressed to a particular person or department when routing to a specific application isn't sufficient.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization"
        ]
      }
    },
    "backboneElement": true
  },
  "MessageHeader_Source": {
    "display": "Message Header Source",
    "description": "Message source application",
    "properties": {
      "name": {
        "key": "name",
        "display": "Name",
        "description": "Human-readable name for the source system.",
        "type": "string"
      },
      "software": {
        "key": "software",
        "display": "Software",
        "description": "May include configuration or other information useful in debugging.",
        "type": "string"
      },
      "version": {
        "key": "version",
        "display": "Version",
        "description": "Can convey versions of multiple systems in situations where a message passes through multiple hands.",
        "type": "string"
      },
      "contact": {
        "key": "contact",
        "display": "Contact",
        "description": "An e-mail, phone, website or other contact point to use to resolve issues with message communications.",
        "type": "ContactPoint"
      },
      "endpoint": {
        "key": "endpoint",
        "display": "Endpoint",
        "description": "Identifies the routing target to send acknowledgements to.",
        "type": "url"
      }
    },
    "backboneElement": true
  },
  "MessageHeader_Response": {
    "display": "Message Header Response",
    "description": "If this is a reply to prior message",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "The MessageHeader.id of the message to which this message is a response.",
        "type": "id"
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "Code that identifies the type of response to the message - whether it was successful or not, and whether it should be resent or not.",
        "type": "enum",
        "enumValues": [
          "ok",
          "transient-error",
          "fatal-error"
        ]
      },
      "details": {
        "key": "details",
        "display": "Details",
        "description": "Full details of any issues found in the message.",
        "type": "Reference",
        "targetProfile": [
          "OperationOutcome"
        ]
      }
    },
    "backboneElement": true
  },
  "MolecularSequence": {
    "display": "MolecularSequence",
    "description": "Raw data describing a biological sequence.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "A unique identifier for this particular sequence instance. This is a FHIR-defined id.",
        "type": "Identifier",
        "array": true
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Amino Acid Sequence/ DNA Sequence / RNA Sequence.",
        "type": "enum",
        "enumValues": [
          "aa",
          "dna",
          "rna"
        ]
      },
      "coordinateSystem": {
        "key": "coordinateSystem",
        "display": "Coordinate System",
        "description": "Whether the sequence is numbered starting at 0 (0-based numbering or coordinates, inclusive start, exclusive end) or starting at 1 (1-based numbering, inclusive start and inclusive end).",
        "type": "integer"
      },
      "patient": {
        "key": "patient",
        "display": "Patient",
        "description": "The patient whose sequencing results are described by this resource.",
        "type": "Reference",
        "targetProfile": [
          "Patient"
        ]
      },
      "specimen": {
        "key": "specimen",
        "display": "Specimen",
        "description": "Specimen used for sequencing.",
        "type": "Reference",
        "targetProfile": [
          "Specimen"
        ]
      },
      "device": {
        "key": "device",
        "display": "Device",
        "description": "The method for sequencing, for example, chip information.",
        "type": "Reference",
        "targetProfile": [
          "Device"
        ]
      },
      "performer": {
        "key": "performer",
        "display": "Performer",
        "description": "The organization or lab that should be responsible for this result.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "quantity": {
        "key": "quantity",
        "display": "Quantity",
        "description": "The number of copies of the sequence of interest. (RNASeq).",
        "type": "Quantity"
      },
      "referenceSeq": {
        "key": "referenceSeq",
        "display": "Reference Seq",
        "description": "A sequence that is used as a reference to describe variants that are present in a sequence analyzed.",
        "type": "MolecularSequence_ReferenceSeq"
      },
      "variant": {
        "key": "variant",
        "display": "Variant",
        "description": "The definition of variant here originates from Sequence ontology ([variant_of](http://www.sequenceontology.org/browser/current_svn/term/variant_of)). This element can represent amino acid or nucleic sequence change(including insertion,deletion,SNP,etc.)  It can represent some complex mutation or segment variation with the assist of CIGAR string.",
        "type": "MolecularSequence_Variant",
        "array": true
      },
      "observedSeq": {
        "key": "observedSeq",
        "display": "Observed Seq",
        "description": "Sequence that was observed. It is the result marked by referenceSeq along with variant records on referenceSeq. This shall start from referenceSeq.windowStart and end by referenceSeq.windowEnd.",
        "type": "string"
      },
      "quality": {
        "key": "quality",
        "display": "Quality",
        "description": "An experimental feature attribute that defines the quality of the feature in a quantitative way, such as a phred quality score ([SO:0001686](http://www.sequenceontology.org/browser/current_svn/term/SO:0001686)).",
        "type": "MolecularSequence_Quality",
        "array": true
      },
      "readCoverage": {
        "key": "readCoverage",
        "display": "Read Coverage",
        "description": "Coverage (read depth or depth) is the average number of reads representing a given nucleotide in the reconstructed sequence.",
        "type": "integer"
      },
      "repository": {
        "key": "repository",
        "display": "Repository",
        "description": "Configurations of the external repository. The repository shall store target's observedSeq or records related with target's observedSeq.",
        "type": "MolecularSequence_Repository",
        "array": true
      },
      "pointer": {
        "key": "pointer",
        "display": "Pointer",
        "description": "Pointer to next atomic sequence which at most contains one variant.",
        "type": "Reference",
        "targetProfile": [
          "MolecularSequence"
        ],
        "array": true
      },
      "structureVariant": {
        "key": "structureVariant",
        "display": "Structure Variant",
        "description": "Information about chromosome structure variation.",
        "type": "MolecularSequence_StructureVariant",
        "array": true
      }
    }
  },
  "MolecularSequence_ReferenceSeq": {
    "display": "Molecular Sequence Reference Seq",
    "description": "A sequence used as reference",
    "properties": {
      "chromosome": {
        "key": "chromosome",
        "display": "Chromosome",
        "description": "Structural unit composed of a nucleic acid molecule which controls its own replication through the interaction of specific proteins at one or more origins of replication ([SO:0000340](http://www.sequenceontology.org/browser/current_svn/term/SO:0000340)).",
        "type": "CodeableConcept"
      },
      "genomeBuild": {
        "key": "genomeBuild",
        "display": "Genome Build",
        "description": "The Genome Build used for reference, following GRCh build versions e.g. 'GRCh 37'.  Version number must be included if a versioned release of a primary build was used.",
        "type": "string"
      },
      "orientation": {
        "key": "orientation",
        "display": "Orientation",
        "description": "A relative reference to a DNA strand based on gene orientation. The strand that contains the open reading frame of the gene is the \"sense\" strand, and the opposite complementary strand is the \"antisense\" strand.",
        "type": "enum",
        "enumValues": [
          "sense",
          "antisense"
        ]
      },
      "referenceSeqId": {
        "key": "referenceSeqId",
        "display": "Reference Seq Id",
        "description": "Reference identifier of reference sequence submitted to NCBI. It must match the type in the MolecularSequence.type field. For example, the prefix, “NG_” identifies reference sequence for genes, “NM_” for messenger RNA transcripts, and “NP_” for amino acid sequences.",
        "type": "CodeableConcept"
      },
      "referenceSeqPointer": {
        "key": "referenceSeqPointer",
        "display": "Reference Seq Pointer",
        "description": "A pointer to another MolecularSequence entity as reference sequence.",
        "type": "Reference",
        "targetProfile": [
          "MolecularSequence"
        ]
      },
      "referenceSeqString": {
        "key": "referenceSeqString",
        "display": "Reference Seq String",
        "description": "A string like \"ACGT\".",
        "type": "string"
      },
      "strand": {
        "key": "strand",
        "display": "Strand",
        "description": "An absolute reference to a strand. The Watson strand is the strand whose 5'-end is on the short arm of the chromosome, and the Crick strand as the one whose 5'-end is on the long arm.",
        "type": "enum",
        "enumValues": [
          "watson",
          "crick"
        ]
      },
      "windowStart": {
        "key": "windowStart",
        "display": "Window Start",
        "description": "Start position of the window on the reference sequence. If the coordinate system is either 0-based or 1-based, then start position is inclusive.",
        "type": "integer"
      },
      "windowEnd": {
        "key": "windowEnd",
        "display": "Window End",
        "description": "End position of the window on the reference sequence. If the coordinate system is 0-based then end is exclusive and does not include the last position. If the coordinate system is 1-base, then end is inclusive and includes the last position.",
        "type": "integer"
      }
    },
    "backboneElement": true
  },
  "MolecularSequence_Variant": {
    "display": "Molecular Sequence Variant",
    "description": "Variant in sequence",
    "properties": {
      "start": {
        "key": "start",
        "display": "Start",
        "description": "Start position of the variant on the  reference sequence. If the coordinate system is either 0-based or 1-based, then start position is inclusive.",
        "type": "integer"
      },
      "end": {
        "key": "end",
        "display": "End",
        "description": "End position of the variant on the reference sequence. If the coordinate system is 0-based then end is exclusive and does not include the last position. If the coordinate system is 1-base, then end is inclusive and includes the last position.",
        "type": "integer"
      },
      "observedAllele": {
        "key": "observedAllele",
        "display": "Observed Allele",
        "description": "An allele is one of a set of coexisting sequence variants of a gene ([SO:0001023](http://www.sequenceontology.org/browser/current_svn/term/SO:0001023)).  Nucleotide(s)/amino acids from start position of sequence to stop position of sequence on the positive (+) strand of the observed  sequence. When the sequence  type is DNA, it should be the sequence on the positive (+) strand. This will lay in the range between variant.start and variant.end.",
        "type": "string"
      },
      "referenceAllele": {
        "key": "referenceAllele",
        "display": "Reference Allele",
        "description": "An allele is one of a set of coexisting sequence variants of a gene ([SO:0001023](http://www.sequenceontology.org/browser/current_svn/term/SO:0001023)). Nucleotide(s)/amino acids from start position of sequence to stop position of sequence on the positive (+) strand of the reference sequence. When the sequence  type is DNA, it should be the sequence on the positive (+) strand. This will lay in the range between variant.start and variant.end.",
        "type": "string"
      },
      "cigar": {
        "key": "cigar",
        "display": "Cigar",
        "description": "Extended CIGAR string for aligning the sequence with reference bases. See detailed documentation [here](http://support.illumina.com/help/SequencingAnalysisWorkflow/Content/Vault/Informatics/Sequencing_Analysis/CASAVA/swSEQ_mCA_ExtendedCIGARFormat.htm).",
        "type": "string"
      },
      "variantPointer": {
        "key": "variantPointer",
        "display": "Variant Pointer",
        "description": "A pointer to an Observation containing variant information.",
        "type": "Reference",
        "targetProfile": [
          "Observation"
        ]
      }
    },
    "backboneElement": true
  },
  "MolecularSequence_Quality": {
    "display": "Molecular Sequence Quality",
    "description": "An set of value as quality of sequence",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "INDEL / SNP / Undefined variant.",
        "type": "enum",
        "enumValues": [
          "indel",
          "snp",
          "unknown"
        ]
      },
      "standardSequence": {
        "key": "standardSequence",
        "display": "Standard Sequence",
        "description": "Gold standard sequence used for comparing against.",
        "type": "CodeableConcept"
      },
      "start": {
        "key": "start",
        "display": "Start",
        "description": "Start position of the sequence. If the coordinate system is either 0-based or 1-based, then start position is inclusive.",
        "type": "integer"
      },
      "end": {
        "key": "end",
        "display": "End",
        "description": "End position of the sequence. If the coordinate system is 0-based then end is exclusive and does not include the last position. If the coordinate system is 1-base, then end is inclusive and includes the last position.",
        "type": "integer"
      },
      "score": {
        "key": "score",
        "display": "Score",
        "description": "The score of an experimentally derived feature such as a p-value ([SO:0001685](http://www.sequenceontology.org/browser/current_svn/term/SO:0001685)).",
        "type": "Quantity"
      },
      "method": {
        "key": "method",
        "display": "Method",
        "description": "Which method is used to get sequence quality.",
        "type": "CodeableConcept"
      },
      "truthTP": {
        "key": "truthTP",
        "display": "Truth T P",
        "description": "True positives, from the perspective of the truth data, i.e. the number of sites in the Truth Call Set for which there are paths through the Query Call Set that are consistent with all of the alleles at this site, and for which there is an accurate genotype call for the event.",
        "type": "decimal"
      },
      "queryTP": {
        "key": "queryTP",
        "display": "Query T P",
        "description": "True positives, from the perspective of the query data, i.e. the number of sites in the Query Call Set for which there are paths through the Truth Call Set that are consistent with all of the alleles at this site, and for which there is an accurate genotype call for the event.",
        "type": "decimal"
      },
      "truthFN": {
        "key": "truthFN",
        "display": "Truth F N",
        "description": "False negatives, i.e. the number of sites in the Truth Call Set for which there is no path through the Query Call Set that is consistent with all of the alleles at this site, or sites for which there is an inaccurate genotype call for the event. Sites with correct variant but incorrect genotype are counted here.",
        "type": "decimal"
      },
      "queryFP": {
        "key": "queryFP",
        "display": "Query F P",
        "description": "False positives, i.e. the number of sites in the Query Call Set for which there is no path through the Truth Call Set that is consistent with this site. Sites with correct variant but incorrect genotype are counted here.",
        "type": "decimal"
      },
      "gtFP": {
        "key": "gtFP",
        "display": "Gt F P",
        "description": "The number of false positives where the non-REF alleles in the Truth and Query Call Sets match (i.e. cases where the truth is 1/1 and the query is 0/1 or similar).",
        "type": "decimal"
      },
      "precision": {
        "key": "precision",
        "display": "Precision",
        "description": "QUERY.TP / (QUERY.TP + QUERY.FP).",
        "type": "decimal"
      },
      "recall": {
        "key": "recall",
        "display": "Recall",
        "description": "TRUTH.TP / (TRUTH.TP + TRUTH.FN).",
        "type": "decimal"
      },
      "fScore": {
        "key": "fScore",
        "display": "F Score",
        "description": "Harmonic mean of Recall and Precision, computed as: 2 * precision * recall / (precision + recall).",
        "type": "decimal"
      },
      "roc": {
        "key": "roc",
        "display": "Roc",
        "description": "Receiver Operator Characteristic (ROC) Curve  to give sensitivity/specificity tradeoff.",
        "type": "MolecularSequence_Quality_Roc"
      }
    },
    "backboneElement": true
  },
  "MolecularSequence_Quality_Roc": {
    "display": "Molecular Sequence Quality_ Roc",
    "description": "Receiver Operator Characteristic (ROC) Curve",
    "properties": {
      "score": {
        "key": "score",
        "display": "Score",
        "description": "Invidual data point representing the GQ (genotype quality) score threshold.",
        "type": "integer",
        "array": true
      },
      "numTP": {
        "key": "numTP",
        "display": "Num T P",
        "description": "The number of true positives if the GQ score threshold was set to \"score\" field value.",
        "type": "integer",
        "array": true
      },
      "numFP": {
        "key": "numFP",
        "display": "Num F P",
        "description": "The number of false positives if the GQ score threshold was set to \"score\" field value.",
        "type": "integer",
        "array": true
      },
      "numFN": {
        "key": "numFN",
        "display": "Num F N",
        "description": "The number of false negatives if the GQ score threshold was set to \"score\" field value.",
        "type": "integer",
        "array": true
      },
      "precision": {
        "key": "precision",
        "display": "Precision",
        "description": "Calculated precision if the GQ score threshold was set to \"score\" field value.",
        "type": "decimal",
        "array": true
      },
      "sensitivity": {
        "key": "sensitivity",
        "display": "Sensitivity",
        "description": "Calculated sensitivity if the GQ score threshold was set to \"score\" field value.",
        "type": "decimal",
        "array": true
      },
      "fMeasure": {
        "key": "fMeasure",
        "display": "F Measure",
        "description": "Calculated fScore if the GQ score threshold was set to \"score\" field value.",
        "type": "decimal",
        "array": true
      }
    },
    "backboneElement": true
  },
  "MolecularSequence_Repository": {
    "display": "Molecular Sequence Repository",
    "description": "External repository which contains detailed report related with observedSeq in this resource",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Click and see / RESTful API / Need login to see / RESTful API with authentication / Other ways to see resource.",
        "type": "enum",
        "enumValues": [
          "directlink",
          "openapi",
          "login",
          "oauth",
          "other"
        ]
      },
      "url": {
        "key": "url",
        "display": "Url",
        "description": "URI of an external repository which contains further details about the genetics data.",
        "type": "uri"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "URI of an external repository which contains further details about the genetics data.",
        "type": "string"
      },
      "datasetId": {
        "key": "datasetId",
        "display": "Dataset Id",
        "description": "Id of the variant in this external repository. The server will understand how to use this id to call for more info about datasets in external repository.",
        "type": "string"
      },
      "variantsetId": {
        "key": "variantsetId",
        "display": "Variantset Id",
        "description": "Id of the variantset in this external repository. The server will understand how to use this id to call for more info about variantsets in external repository.",
        "type": "string"
      },
      "readsetId": {
        "key": "readsetId",
        "display": "Readset Id",
        "description": "Id of the read in this external repository.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "MolecularSequence_StructureVariant": {
    "display": "Molecular Sequence Structure Variant",
    "description": "Structural variant",
    "properties": {
      "variantType": {
        "key": "variantType",
        "display": "Variant Type",
        "description": "Information about chromosome structure variation DNA change type.",
        "type": "CodeableConcept"
      },
      "exact": {
        "key": "exact",
        "display": "Exact",
        "description": "Used to indicate if the outer and inner start-end values have the same meaning.",
        "type": "boolean"
      },
      "length": {
        "key": "length",
        "display": "Length",
        "description": "Length of the variant chromosome.",
        "type": "integer"
      },
      "outer": {
        "key": "outer",
        "display": "Outer",
        "description": "Structural variant outer.",
        "type": "MolecularSequence_StructureVariant_Outer"
      },
      "inner": {
        "key": "inner",
        "display": "Inner",
        "description": "Structural variant inner.",
        "type": "MolecularSequence_StructureVariant_Inner"
      }
    },
    "backboneElement": true
  },
  "MolecularSequence_StructureVariant_Outer": {
    "display": "Molecular Sequence Structure Variant_ Outer",
    "description": "Structural variant outer",
    "properties": {
      "start": {
        "key": "start",
        "display": "Start",
        "description": "Structural variant outer start. If the coordinate system is either 0-based or 1-based, then start position is inclusive.",
        "type": "integer"
      },
      "end": {
        "key": "end",
        "display": "End",
        "description": "Structural variant outer end. If the coordinate system is 0-based then end is exclusive and does not include the last position. If the coordinate system is 1-base, then end is inclusive and includes the last position.",
        "type": "integer"
      }
    },
    "backboneElement": true
  },
  "MolecularSequence_StructureVariant_Inner": {
    "display": "Molecular Sequence Structure Variant_ Inner",
    "description": "Structural variant inner",
    "properties": {
      "start": {
        "key": "start",
        "display": "Start",
        "description": "Structural variant inner start. If the coordinate system is either 0-based or 1-based, then start position is inclusive.",
        "type": "integer"
      },
      "end": {
        "key": "end",
        "display": "End",
        "description": "Structural variant inner end. If the coordinate system is 0-based then end is exclusive and does not include the last position. If the coordinate system is 1-base, then end is inclusive and includes the last position.",
        "type": "integer"
      }
    },
    "backboneElement": true
  },
  "NamingSystem": {
    "display": "NamingSystem",
    "description": "A curated namespace that issues unique symbols within that namespace for the identification of concepts, people, devices, etc.  Represents a \"System\" used within the Identifier and Coding data types.",
    "properties": {
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A natural language name identifying the naming system. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
        "type": "string"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of this naming system. Enables tracking the life-cycle of the content.",
        "type": "enum",
        "enumValues": [
          "draft",
          "active",
          "retired",
          "unknown"
        ]
      },
      "kind": {
        "key": "kind",
        "display": "Kind",
        "description": "Indicates the purpose for the naming system - what kinds of things does it make unique?",
        "type": "enum",
        "enumValues": [
          "codesystem",
          "identifier",
          "root"
        ]
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "The date  (and optionally time) when the naming system was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the naming system changes.",
        "type": "dateTime"
      },
      "publisher": {
        "key": "publisher",
        "display": "Publisher",
        "description": "The name of the organization or individual that published the naming system.",
        "type": "string"
      },
      "contact": {
        "key": "contact",
        "display": "Contact",
        "description": "Contact details to assist a user in finding and communicating with the publisher.",
        "type": "ContactDetail",
        "array": true
      },
      "responsible": {
        "key": "responsible",
        "display": "Responsible",
        "description": "The name of the organization that is responsible for issuing identifiers or codes for this namespace and ensuring their non-collision.",
        "type": "string"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Categorizes a naming system for easier search by grouping related naming systems.",
        "type": "CodeableConcept"
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A free text natural language description of the naming system from a consumer's perspective. Details about what the namespace identifies including scope, granularity, version labeling, etc.",
        "type": "markdown"
      },
      "useContext": {
        "key": "useContext",
        "display": "Use Context",
        "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate naming system instances.",
        "type": "UsageContext",
        "array": true
      },
      "jurisdiction": {
        "key": "jurisdiction",
        "display": "Jurisdiction",
        "description": "A legal or geographic region in which the naming system is intended to be used.",
        "type": "CodeableConcept",
        "array": true
      },
      "usage": {
        "key": "usage",
        "display": "Usage",
        "description": "Provides guidance on the use of the namespace, including the handling of formatting characters, use of upper vs. lower case, etc.",
        "type": "string"
      },
      "uniqueId": {
        "key": "uniqueId",
        "display": "Unique Id",
        "description": "Indicates how the system may be identified when referenced in electronic exchange.",
        "type": "NamingSystem_UniqueId",
        "array": true
      }
    }
  },
  "NamingSystem_UniqueId": {
    "display": "Naming System Unique Id",
    "description": "Unique identifiers used for system",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Identifies the unique identifier scheme used for this particular identifier.",
        "type": "enum",
        "enumValues": [
          "oid",
          "uuid",
          "uri",
          "other"
        ]
      },
      "value": {
        "key": "value",
        "display": "Value",
        "description": "The string that should be sent over the wire to identify the code system or identifier system.",
        "type": "string"
      },
      "preferred": {
        "key": "preferred",
        "display": "Preferred",
        "description": "Indicates whether this identifier is the \"preferred\" identifier of this type.",
        "type": "boolean"
      },
      "comment": {
        "key": "comment",
        "display": "Comment",
        "description": "Notes about the past or intended usage of this identifier.",
        "type": "string"
      },
      "period": {
        "key": "period",
        "display": "Period",
        "description": "Identifies the period of time over which this identifier is considered appropriate to refer to the naming system.  Outside of this window, the identifier might be non-deterministic.",
        "type": "Period"
      }
    },
    "backboneElement": true
  },
  "NutritionOrder": {
    "display": "NutritionOrder",
    "description": "A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Identifiers assigned to this order by the order sender or by the order receiver.",
        "type": "Identifier",
        "array": true
      },
      "instantiatesCanonical": {
        "key": "instantiatesCanonical",
        "display": "Instantiates Canonical",
        "description": "The URL pointing to a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this NutritionOrder.",
        "type": "canonical",
        "array": true
      },
      "instantiatesUri": {
        "key": "instantiatesUri",
        "display": "Instantiates Uri",
        "description": "The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this NutritionOrder.",
        "type": "uri",
        "array": true
      },
      "instantiates": {
        "key": "instantiates",
        "display": "Instantiates",
        "description": "The URL pointing to a protocol, guideline, orderset or other definition that is adhered to in whole or in part by this NutritionOrder.",
        "type": "uri",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The workflow status of the nutrition order/request.",
        "type": "enum",
        "enumValues": [
          "draft",
          "active",
          "on-hold",
          "revoked",
          "completed",
          "entered-in-error",
          "unknown"
        ]
      },
      "intent": {
        "key": "intent",
        "display": "Intent",
        "description": "Indicates the level of authority/intentionality associated with the NutrionOrder and where the request fits into the workflow chain.",
        "type": "enum",
        "enumValues": [
          "proposal",
          "plan",
          "directive",
          "order",
          "original-order",
          "reflex-order",
          "filler-order",
          "instance-order",
          "option"
        ]
      },
      "patient": {
        "key": "patient",
        "display": "Patient",
        "description": "The person (patient) who needs the nutrition order for an oral diet, nutritional supplement and/or enteral or formula feeding.",
        "type": "Reference",
        "targetProfile": [
          "Patient"
        ]
      },
      "encounter": {
        "key": "encounter",
        "display": "Encounter",
        "description": "An encounter that provides additional information about the healthcare context in which this request is made.",
        "type": "Reference",
        "targetProfile": [
          "Encounter"
        ]
      },
      "dateTime": {
        "key": "dateTime",
        "display": "Date Time",
        "description": "The date and time that this nutrition order was requested.",
        "type": "dateTime"
      },
      "orderer": {
        "key": "orderer",
        "display": "Orderer",
        "description": "The practitioner that holds legal responsibility for ordering the diet, nutritional supplement, or formula feedings.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole"
        ]
      },
      "allergyIntolerance": {
        "key": "allergyIntolerance",
        "display": "Allergy Intolerance",
        "description": "A link to a record of allergies or intolerances  which should be included in the nutrition order.",
        "type": "Reference",
        "targetProfile": [
          "AllergyIntolerance"
        ],
        "array": true
      },
      "foodPreferenceModifier": {
        "key": "foodPreferenceModifier",
        "display": "Food Preference Modifier",
        "description": "This modifier is used to convey order-specific modifiers about the type of food that should be given. These can be derived from patient allergies, intolerances, or preferences such as Halal, Vegan or Kosher. This modifier applies to the entire nutrition order inclusive of the oral diet, nutritional supplements and enteral formula feedings.",
        "type": "CodeableConcept",
        "array": true
      },
      "excludeFoodModifier": {
        "key": "excludeFoodModifier",
        "display": "Exclude Food Modifier",
        "description": "This modifier is used to convey Order-specific modifier about the type of oral food or oral fluids that should not be given. These can be derived from patient allergies, intolerances, or preferences such as No Red Meat, No Soy or No Wheat or  Gluten-Free.  While it should not be necessary to repeat allergy or intolerance information captured in the referenced AllergyIntolerance resource in the excludeFoodModifier, this element may be used to convey additional specificity related to foods that should be eliminated from the patient’s diet for any reason.  This modifier applies to the entire nutrition order inclusive of the oral diet, nutritional supplements and enteral formula feedings.",
        "type": "CodeableConcept",
        "array": true
      },
      "oralDiet": {
        "key": "oralDiet",
        "display": "Oral Diet",
        "description": "Diet given orally in contrast to enteral (tube) feeding.",
        "type": "NutritionOrder_OralDiet"
      },
      "supplement": {
        "key": "supplement",
        "display": "Supplement",
        "description": "Oral nutritional products given in order to add further nutritional value to the patient's diet.",
        "type": "NutritionOrder_Supplement",
        "array": true
      },
      "enteralFormula": {
        "key": "enteralFormula",
        "display": "Enteral Formula",
        "description": "Feeding provided through the gastrointestinal tract via a tube, catheter, or stoma that delivers nutrition distal to the oral cavity.",
        "type": "NutritionOrder_EnteralFormula"
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "Comments made about the {{title}} by the requester, performer, subject or other participants.",
        "type": "Annotation",
        "array": true
      }
    }
  },
  "NutritionOrder_OralDiet": {
    "display": "Nutrition Order Oral Diet",
    "description": "Oral diet components",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The kind of diet or dietary restriction such as fiber restricted diet or diabetic diet.",
        "type": "CodeableConcept",
        "array": true
      },
      "schedule": {
        "key": "schedule",
        "display": "Schedule",
        "description": "The time period and frequency at which the diet should be given.  The diet should be given for the combination of all schedules if more than one schedule is present.",
        "type": "Timing",
        "array": true
      },
      "nutrient": {
        "key": "nutrient",
        "display": "Nutrient",
        "description": "Class that defines the quantity and type of nutrient modifications (for example carbohydrate, fiber or sodium) required for the oral diet.",
        "type": "NutritionOrder_OralDiet_Nutrient",
        "array": true
      },
      "texture": {
        "key": "texture",
        "display": "Texture",
        "description": "Class that describes any texture modifications required for the patient to safely consume various types of solid foods.",
        "type": "NutritionOrder_OralDiet_Texture",
        "array": true
      },
      "fluidConsistencyType": {
        "key": "fluidConsistencyType",
        "display": "Fluid Consistency Type",
        "description": "The required consistency (e.g. honey-thick, nectar-thick, thin, thickened.) of liquids or fluids served to the patient.",
        "type": "CodeableConcept",
        "array": true
      },
      "instruction": {
        "key": "instruction",
        "display": "Instruction",
        "description": "Free text or additional instructions or information pertaining to the oral diet.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "NutritionOrder_OralDiet_Nutrient": {
    "display": "Nutrition Order Oral Diet_ Nutrient",
    "description": "Required  nutrient modifications",
    "properties": {
      "modifier": {
        "key": "modifier",
        "display": "Modifier",
        "description": "The nutrient that is being modified such as carbohydrate or sodium.",
        "type": "CodeableConcept"
      },
      "amount": {
        "key": "amount",
        "display": "Amount",
        "description": "The quantity of the specified nutrient to include in diet.",
        "type": "Quantity"
      }
    },
    "backboneElement": true
  },
  "NutritionOrder_OralDiet_Texture": {
    "display": "Nutrition Order Oral Diet_ Texture",
    "description": "Required  texture modifications",
    "properties": {
      "modifier": {
        "key": "modifier",
        "display": "Modifier",
        "description": "Any texture modifications (for solid foods) that should be made, e.g. easy to chew, chopped, ground, and pureed.",
        "type": "CodeableConcept"
      },
      "foodType": {
        "key": "foodType",
        "display": "Food Type",
        "description": "The food type(s) (e.g. meats, all foods)  that the texture modification applies to.  This could be all foods types.",
        "type": "CodeableConcept"
      }
    },
    "backboneElement": true
  },
  "NutritionOrder_Supplement": {
    "display": "Nutrition Order Supplement",
    "description": "Supplement components",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The kind of nutritional supplement product required such as a high protein or pediatric clear liquid supplement.",
        "type": "CodeableConcept"
      },
      "productName": {
        "key": "productName",
        "display": "Product Name",
        "description": "The product or brand name of the nutritional supplement such as \"Acme Protein Shake\".",
        "type": "string"
      },
      "schedule": {
        "key": "schedule",
        "display": "Schedule",
        "description": "The time period and frequency at which the supplement(s) should be given.  The supplement should be given for the combination of all schedules if more than one schedule is present.",
        "type": "Timing",
        "array": true
      },
      "quantity": {
        "key": "quantity",
        "display": "Quantity",
        "description": "The amount of the nutritional supplement to be given.",
        "type": "Quantity"
      },
      "instruction": {
        "key": "instruction",
        "display": "Instruction",
        "description": "Free text or additional instructions or information pertaining to the oral supplement.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "NutritionOrder_EnteralFormula": {
    "display": "Nutrition Order Enteral Formula",
    "description": "Enteral formula components",
    "properties": {
      "baseFormulaType": {
        "key": "baseFormulaType",
        "display": "Base Formula Type",
        "description": "The type of enteral or infant formula such as an adult standard formula with fiber or a soy-based infant formula.",
        "type": "CodeableConcept"
      },
      "baseFormulaProductName": {
        "key": "baseFormulaProductName",
        "display": "Base Formula Product Name",
        "description": "The product or brand name of the enteral or infant formula product such as \"ACME Adult Standard Formula\".",
        "type": "string"
      },
      "additiveType": {
        "key": "additiveType",
        "display": "Additive Type",
        "description": "Indicates the type of modular component such as protein, carbohydrate, fat or fiber to be provided in addition to or mixed with the base formula.",
        "type": "CodeableConcept"
      },
      "additiveProductName": {
        "key": "additiveProductName",
        "display": "Additive Product Name",
        "description": "The product or brand name of the type of modular component to be added to the formula.",
        "type": "string"
      },
      "caloricDensity": {
        "key": "caloricDensity",
        "display": "Caloric Density",
        "description": "The amount of energy (calories) that the formula should provide per specified volume, typically per mL or fluid oz.  For example, an infant may require a formula that provides 24 calories per fluid ounce or an adult may require an enteral formula that provides 1.5 calorie/mL.",
        "type": "Quantity"
      },
      "routeofAdministration": {
        "key": "routeofAdministration",
        "display": "Routeof Administration",
        "description": "The route or physiological path of administration into the patient's gastrointestinal  tract for purposes of providing the formula feeding, e.g. nasogastric tube.",
        "type": "CodeableConcept"
      },
      "administration": {
        "key": "administration",
        "display": "Administration",
        "description": "Formula administration instructions as structured data.  This repeating structure allows for changing the administration rate or volume over time for both bolus and continuous feeding.  An example of this would be an instruction to increase the rate of continuous feeding every 2 hours.",
        "type": "NutritionOrder_EnteralFormula_Administration",
        "array": true
      },
      "maxVolumeToDeliver": {
        "key": "maxVolumeToDeliver",
        "display": "Max Volume To Deliver",
        "description": "The maximum total quantity of formula that may be administered to a subject over the period of time, e.g. 1440 mL over 24 hours.",
        "type": "Quantity"
      },
      "administrationInstruction": {
        "key": "administrationInstruction",
        "display": "Administration Instruction",
        "description": "Free text formula administration, feeding instructions or additional instructions or information.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "NutritionOrder_EnteralFormula_Administration": {
    "display": "Nutrition Order Enteral Formula_ Administration",
    "description": "Formula feeding instruction as structured data",
    "properties": {
      "schedule": {
        "key": "schedule",
        "display": "Schedule",
        "description": "The time period and frequency at which the enteral formula should be delivered to the patient.",
        "type": "Timing"
      },
      "quantity": {
        "key": "quantity",
        "display": "Quantity",
        "description": "The volume of formula to provide to the patient per the specified administration schedule.",
        "type": "Quantity"
      },
      "rate[x]": {
        "key": "rate[x]",
        "display": "Rate[x]",
        "description": "The rate of administration of formula via a feeding pump, e.g. 60 mL per hour, according to the specified schedule.",
        "type": "Quantity"
      }
    },
    "backboneElement": true
  },
  "Observation": {
    "display": "Observation",
    "description": "Measurements and simple assertions made about a patient, device or other subject.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "A unique identifier assigned to this observation.",
        "type": "Identifier",
        "array": true
      },
      "basedOn": {
        "key": "basedOn",
        "display": "Based On",
        "description": "A plan, proposal or order that is fulfilled in whole or in part by this event.  For example, a MedicationRequest may require a patient to have laboratory test performed before  it is dispensed.",
        "type": "Reference",
        "targetProfile": [
          "CarePlan",
          "DeviceRequest",
          "ImmunizationRecommendation",
          "MedicationRequest",
          "NutritionOrder",
          "ServiceRequest"
        ],
        "array": true
      },
      "partOf": {
        "key": "partOf",
        "display": "Part Of",
        "description": "A larger event of which this particular Observation is a component or step.  For example,  an observation as part of a procedure.",
        "type": "Reference",
        "targetProfile": [
          "MedicationAdministration",
          "MedicationDispense",
          "MedicationStatement",
          "Procedure",
          "Immunization",
          "ImagingStudy"
        ],
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of the result value.",
        "type": "enum",
        "enumValues": [
          "registered",
          "preliminary",
          "final",
          "amended +"
        ]
      },
      "category": {
        "key": "category",
        "display": "Category",
        "description": "A code that classifies the general type of observation being made.",
        "type": "CodeableConcept",
        "array": true
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "Describes what was observed. Sometimes this is called the observation \"name\".",
        "type": "CodeableConcept"
      },
      "subject": {
        "key": "subject",
        "display": "Subject",
        "description": "The patient, or group of patients, location, or device this observation is about and into whose record the observation is placed. If the actual focus of the observation is different from the subject (or a sample of, part, or region of the subject), the `focus` element or the `code` itself specifies the actual focus of the observation.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Group",
          "Device",
          "Location"
        ]
      },
      "focus": {
        "key": "focus",
        "display": "Focus",
        "description": "The actual focus of an observation when it is not the patient of record representing something or someone associated with the patient such as a spouse, parent, fetus, or donor. For example, fetus observations in a mother's record.  The focus of an observation could also be an existing condition,  an intervention, the subject's diet,  another observation of the subject,  or a body structure such as tumor or implanted device.   An example use case would be using the Observation resource to capture whether the mother is trained to change her child's tracheostomy tube. In this example, the child is the patient of record and the mother is the focus.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ],
        "array": true
      },
      "encounter": {
        "key": "encounter",
        "display": "Encounter",
        "description": "The healthcare event  (e.g. a patient and healthcare provider interaction) during which this observation is made.",
        "type": "Reference",
        "targetProfile": [
          "Encounter"
        ]
      },
      "effective[x]": {
        "key": "effective[x]",
        "display": "Effective[x]",
        "description": "The time or time-period the observed value is asserted as being true. For biological subjects - e.g. human patients - this is usually called the \"physiologically relevant time\". This is usually either the time of the procedure or of specimen collection, but very often the source of the date/time is not known, only the date/time itself.",
        "type": "dateTime"
      },
      "issued": {
        "key": "issued",
        "display": "Issued",
        "description": "The date and time this version of the observation was made available to providers, typically after the results have been reviewed and verified.",
        "type": "instant"
      },
      "performer": {
        "key": "performer",
        "display": "Performer",
        "description": "Who was responsible for asserting the observed value as \"true\".",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization",
          "CareTeam",
          "Patient",
          "RelatedPerson"
        ],
        "array": true
      },
      "value[x]": {
        "key": "value[x]",
        "display": "Value[x]",
        "description": "The information determined as a result of making the observation, if the information has a simple value.",
        "type": "Quantity"
      },
      "dataAbsentReason": {
        "key": "dataAbsentReason",
        "display": "Data Absent Reason",
        "description": "Provides a reason why the expected value in the element Observation.value[x] is missing.",
        "type": "CodeableConcept"
      },
      "interpretation": {
        "key": "interpretation",
        "display": "Interpretation",
        "description": "A categorical assessment of an observation value.  For example, high, low, normal.",
        "type": "CodeableConcept",
        "array": true
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "Comments about the observation or the results.",
        "type": "Annotation",
        "array": true
      },
      "bodySite": {
        "key": "bodySite",
        "display": "Body Site",
        "description": "Indicates the site on the subject's body where the observation was made (i.e. the target site).",
        "type": "CodeableConcept"
      },
      "method": {
        "key": "method",
        "display": "Method",
        "description": "Indicates the mechanism used to perform the observation.",
        "type": "CodeableConcept"
      },
      "specimen": {
        "key": "specimen",
        "display": "Specimen",
        "description": "The specimen that was used when this observation was made.",
        "type": "Reference",
        "targetProfile": [
          "Specimen"
        ]
      },
      "device": {
        "key": "device",
        "display": "Device",
        "description": "The device used to generate the observation data.",
        "type": "Reference",
        "targetProfile": [
          "Device",
          "DeviceMetric"
        ]
      },
      "referenceRange": {
        "key": "referenceRange",
        "display": "Reference Range",
        "description": "Guidance on how to interpret the value by comparison to a normal or recommended range.  Multiple reference ranges are interpreted as an \"OR\".   In other words, to represent two distinct target populations, two `referenceRange` elements would be used.",
        "type": "Observation_ReferenceRange",
        "array": true
      },
      "hasMember": {
        "key": "hasMember",
        "display": "Has Member",
        "description": "This observation is a group observation (e.g. a battery, a panel of tests, a set of vital sign measurements) that includes the target as a member of the group.",
        "type": "Reference",
        "targetProfile": [
          "Observation",
          "QuestionnaireResponse",
          "MolecularSequence"
        ],
        "array": true
      },
      "derivedFrom": {
        "key": "derivedFrom",
        "display": "Derived From",
        "description": "The target resource that represents a measurement from which this observation value is derived. For example, a calculated anion gap or a fetal measurement based on an ultrasound image.",
        "type": "Reference",
        "targetProfile": [
          "DocumentReference",
          "ImagingStudy",
          "Media",
          "QuestionnaireResponse",
          "Observation",
          "MolecularSequence"
        ],
        "array": true
      },
      "component": {
        "key": "component",
        "display": "Component",
        "description": "Some observations have multiple component observations.  These component observations are expressed as separate code value pairs that share the same attributes.  Examples include systolic and diastolic component observations for blood pressure measurement and multiple component observations for genetics observations.",
        "type": "Observation_Component",
        "array": true
      }
    }
  },
  "Observation_ReferenceRange": {
    "display": "Observation Reference Range",
    "description": "Provides guide for interpretation",
    "properties": {
      "low": {
        "key": "low",
        "display": "Low",
        "description": "The value of the low bound of the reference range.  The low bound of the reference range endpoint is inclusive of the value (e.g.  reference range is >=5 - <=9). If the low bound is omitted,  it is assumed to be meaningless (e.g. reference range is <=2.3).",
        "type": "Quantity"
      },
      "high": {
        "key": "high",
        "display": "High",
        "description": "The value of the high bound of the reference range.  The high bound of the reference range endpoint is inclusive of the value (e.g.  reference range is >=5 - <=9). If the high bound is omitted,  it is assumed to be meaningless (e.g. reference range is >= 2.3).",
        "type": "Quantity"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Codes to indicate the what part of the targeted reference population it applies to. For example, the normal or therapeutic range.",
        "type": "CodeableConcept"
      },
      "appliesTo": {
        "key": "appliesTo",
        "display": "Applies To",
        "description": "Codes to indicate the target population this reference range applies to.  For example, a reference range may be based on the normal population or a particular sex or race.  Multiple `appliesTo`  are interpreted as an \"AND\" of the target populations.  For example, to represent a target population of African American females, both a code of female and a code for African American would be used.",
        "type": "CodeableConcept",
        "array": true
      },
      "age": {
        "key": "age",
        "display": "Age",
        "description": "The age at which this reference range is applicable. This is a neonatal age (e.g. number of weeks at term) if the meaning says so.",
        "type": "Range"
      }
    },
    "backboneElement": true
  },
  "Observation_Component": {
    "display": "Observation Component",
    "description": "Component results",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "Describes what was observed. Sometimes this is called the observation \"code\".",
        "type": "CodeableConcept"
      },
      "value[x]": {
        "key": "value[x]",
        "display": "Value[x]",
        "description": "The information determined as a result of making the observation, if the information has a simple value.",
        "type": "Quantity"
      },
      "dataAbsentReason": {
        "key": "dataAbsentReason",
        "display": "Data Absent Reason",
        "description": "Provides a reason why the expected value in the element Observation.component.value[x] is missing.",
        "type": "CodeableConcept"
      },
      "interpretation": {
        "key": "interpretation",
        "display": "Interpretation",
        "description": "A categorical assessment of an observation value.  For example, high, low, normal.",
        "type": "CodeableConcept",
        "array": true
      },
      "referenceRange": {
        "key": "referenceRange",
        "display": "Reference Range",
        "description": "Guidance on how to interpret the value by comparison to a normal or recommended range.",
        "type": "UNKNOWN"
      }
    },
    "backboneElement": true
  },
  "ObservationDefinition": {
    "display": "ObservationDefinition",
    "description": "Set of definitional characteristics for a kind of observation or measurement produced or consumed by an orderable health care service.",
    "properties": {
      "category": {
        "key": "category",
        "display": "Category",
        "description": "A code that classifies the general type of observation.",
        "type": "CodeableConcept",
        "array": true
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "Describes what will be observed. Sometimes this is called the observation \"name\".",
        "type": "CodeableConcept"
      },
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "A unique identifier assigned to this ObservationDefinition artifact.",
        "type": "Identifier",
        "array": true
      },
      "permittedDataType": {
        "key": "permittedDataType",
        "display": "Permitted Data Type",
        "description": "The data types allowed for the value element of the instance observations conforming to this ObservationDefinition.",
        "type": "enum",
        "enumValues": [
          "Quantity",
          "CodeableConcept",
          "string",
          "boolean",
          "integer",
          "Range",
          "Ratio",
          "SampledData",
          "time",
          "dateTime",
          "Period"
        ],
        "array": true
      },
      "multipleResultsAllowed": {
        "key": "multipleResultsAllowed",
        "display": "Multiple Results Allowed",
        "description": "Multiple results allowed for observations conforming to this ObservationDefinition.",
        "type": "boolean"
      },
      "method": {
        "key": "method",
        "display": "Method",
        "description": "The method or technique used to perform the observation.",
        "type": "CodeableConcept"
      },
      "preferredReportName": {
        "key": "preferredReportName",
        "display": "Preferred Report Name",
        "description": "The preferred name to be used when reporting the results of observations conforming to this ObservationDefinition.",
        "type": "string"
      },
      "quantitativeDetails": {
        "key": "quantitativeDetails",
        "display": "Quantitative Details",
        "description": "Characteristics for quantitative results of this observation.",
        "type": "ObservationDefinition_QuantitativeDetails"
      },
      "qualifiedInterval": {
        "key": "qualifiedInterval",
        "display": "Qualified Interval",
        "description": "Multiple  ranges of results qualified by different contexts for ordinal or continuous observations conforming to this ObservationDefinition.",
        "type": "ObservationDefinition_QualifiedInterval",
        "array": true
      },
      "validCodedValueSet": {
        "key": "validCodedValueSet",
        "display": "Valid Coded Value Set",
        "description": "The set of valid coded results for the observations  conforming to this ObservationDefinition.",
        "type": "Reference",
        "targetProfile": [
          "ValueSet"
        ]
      },
      "normalCodedValueSet": {
        "key": "normalCodedValueSet",
        "display": "Normal Coded Value Set",
        "description": "The set of normal coded results for the observations conforming to this ObservationDefinition.",
        "type": "Reference",
        "targetProfile": [
          "ValueSet"
        ]
      },
      "abnormalCodedValueSet": {
        "key": "abnormalCodedValueSet",
        "display": "Abnormal Coded Value Set",
        "description": "The set of abnormal coded results for the observation conforming to this ObservationDefinition.",
        "type": "Reference",
        "targetProfile": [
          "ValueSet"
        ]
      },
      "criticalCodedValueSet": {
        "key": "criticalCodedValueSet",
        "display": "Critical Coded Value Set",
        "description": "The set of critical coded results for the observation conforming to this ObservationDefinition.",
        "type": "Reference",
        "targetProfile": [
          "ValueSet"
        ]
      }
    }
  },
  "ObservationDefinition_QuantitativeDetails": {
    "display": "Observation Definition Quantitative Details",
    "description": "Characteristics of quantitative results",
    "properties": {
      "customaryUnit": {
        "key": "customaryUnit",
        "display": "Customary Unit",
        "description": "Customary unit used to report quantitative results of observations conforming to this ObservationDefinition.",
        "type": "CodeableConcept"
      },
      "unit": {
        "key": "unit",
        "display": "Unit",
        "description": "SI unit used to report quantitative results of observations conforming to this ObservationDefinition.",
        "type": "CodeableConcept"
      },
      "conversionFactor": {
        "key": "conversionFactor",
        "display": "Conversion Factor",
        "description": "Factor for converting value expressed with SI unit to value expressed with customary unit.",
        "type": "decimal"
      },
      "decimalPrecision": {
        "key": "decimalPrecision",
        "display": "Decimal Precision",
        "description": "Number of digits after decimal separator when the results of such observations are of type Quantity.",
        "type": "integer"
      }
    },
    "backboneElement": true
  },
  "ObservationDefinition_QualifiedInterval": {
    "display": "Observation Definition Qualified Interval",
    "description": "Qualified range for continuous and ordinal observation results",
    "properties": {
      "category": {
        "key": "category",
        "display": "Category",
        "description": "The category of interval of values for continuous or ordinal observations conforming to this ObservationDefinition.",
        "type": "enum",
        "enumValues": [
          "reference",
          "critical",
          "absolute"
        ]
      },
      "range": {
        "key": "range",
        "display": "Range",
        "description": "The low and high values determining the interval. There may be only one of the two.",
        "type": "Range"
      },
      "context": {
        "key": "context",
        "display": "Context",
        "description": "Codes to indicate the health context the range applies to. For example, the normal or therapeutic range.",
        "type": "CodeableConcept"
      },
      "appliesTo": {
        "key": "appliesTo",
        "display": "Applies To",
        "description": "Codes to indicate the target population this reference range applies to.",
        "type": "CodeableConcept",
        "array": true
      },
      "gender": {
        "key": "gender",
        "display": "Gender",
        "description": "Sex of the population the range applies to.",
        "type": "enum",
        "enumValues": [
          "male",
          "female",
          "other",
          "unknown"
        ]
      },
      "age": {
        "key": "age",
        "display": "Age",
        "description": "The age at which this reference range is applicable. This is a neonatal age (e.g. number of weeks at term) if the meaning says so.",
        "type": "Range"
      },
      "gestationalAge": {
        "key": "gestationalAge",
        "display": "Gestational Age",
        "description": "The gestational age to which this reference range is applicable, in the context of pregnancy.",
        "type": "Range"
      },
      "condition": {
        "key": "condition",
        "display": "Condition",
        "description": "Text based condition for which the reference range is valid.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "OperationDefinition": {
    "display": "OperationDefinition",
    "description": "A formal computable definition of an operation (on the RESTful interface) or a named query (using the search interaction).",
    "properties": {
      "url": {
        "key": "url",
        "display": "Url",
        "description": "An absolute URI that is used to identify this operation definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this operation definition is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the operation definition is stored on different servers.",
        "type": "uri"
      },
      "version": {
        "key": "version",
        "display": "Version",
        "description": "The identifier that is used to identify this version of the operation definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the operation definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
        "type": "string"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A natural language name identifying the operation definition. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
        "type": "string"
      },
      "title": {
        "key": "title",
        "display": "Title",
        "description": "A short, descriptive, user-friendly title for the operation definition.",
        "type": "string"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of this operation definition. Enables tracking the life-cycle of the content.",
        "type": "enum",
        "enumValues": [
          "draft",
          "active",
          "retired",
          "unknown"
        ]
      },
      "kind": {
        "key": "kind",
        "display": "Kind",
        "description": "Whether this is an operation or a named query.",
        "type": "enum",
        "enumValues": [
          "operation",
          "query"
        ]
      },
      "experimental": {
        "key": "experimental",
        "display": "Experimental",
        "description": "A Boolean value to indicate that this operation definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
        "type": "boolean"
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "The date  (and optionally time) when the operation definition was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the operation definition changes.",
        "type": "dateTime"
      },
      "publisher": {
        "key": "publisher",
        "display": "Publisher",
        "description": "The name of the organization or individual that published the operation definition.",
        "type": "string"
      },
      "contact": {
        "key": "contact",
        "display": "Contact",
        "description": "Contact details to assist a user in finding and communicating with the publisher.",
        "type": "ContactDetail",
        "array": true
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A free text natural language description of the operation definition from a consumer's perspective.",
        "type": "markdown"
      },
      "useContext": {
        "key": "useContext",
        "display": "Use Context",
        "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate operation definition instances.",
        "type": "UsageContext",
        "array": true
      },
      "jurisdiction": {
        "key": "jurisdiction",
        "display": "Jurisdiction",
        "description": "A legal or geographic region in which the operation definition is intended to be used.",
        "type": "CodeableConcept",
        "array": true
      },
      "purpose": {
        "key": "purpose",
        "display": "Purpose",
        "description": "Explanation of why this operation definition is needed and why it has been designed as it has.",
        "type": "markdown"
      },
      "affectsState": {
        "key": "affectsState",
        "display": "Affects State",
        "description": "Whether the operation affects state. Side effects such as producing audit trail entries do not count as 'affecting  state'.",
        "type": "boolean"
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "The name used to invoke the operation.",
        "type": "enum",
        "enumValues": [
          "Name used to invoke the operation"
        ]
      },
      "comment": {
        "key": "comment",
        "display": "Comment",
        "description": "Additional information about how to use this operation or named query.",
        "type": "markdown"
      },
      "base": {
        "key": "base",
        "display": "Base",
        "description": "Indicates that this operation definition is a constraining profile on the base.",
        "type": "canonical"
      },
      "resource": {
        "key": "resource",
        "display": "Resource",
        "description": "The types on which this operation can be executed.",
        "type": "enum",
        "enumValues": [
          "Types this operation applies to"
        ],
        "array": true
      },
      "system": {
        "key": "system",
        "display": "System",
        "description": "Indicates whether this operation or named query can be invoked at the system level (e.g. without needing to choose a resource type for the context).",
        "type": "boolean"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Indicates whether this operation or named query can be invoked at the resource type level for any given resource type level (e.g. without needing to choose a specific resource id for the context).",
        "type": "boolean"
      },
      "instance": {
        "key": "instance",
        "display": "Instance",
        "description": "Indicates whether this operation can be invoked on a particular instance of one of the given types.",
        "type": "boolean"
      },
      "inputProfile": {
        "key": "inputProfile",
        "display": "Input Profile",
        "description": "Additional validation information for the in parameters - a single profile that covers all the parameters. The profile is a constraint on the parameters resource as a whole.",
        "type": "canonical"
      },
      "outputProfile": {
        "key": "outputProfile",
        "display": "Output Profile",
        "description": "Additional validation information for the out parameters - a single profile that covers all the parameters. The profile is a constraint on the parameters resource.",
        "type": "canonical"
      },
      "parameter": {
        "key": "parameter",
        "display": "Parameter",
        "description": "The parameters for the operation/query.",
        "type": "OperationDefinition_Parameter",
        "array": true
      },
      "overload": {
        "key": "overload",
        "display": "Overload",
        "description": "Defines an appropriate combination of parameters to use when invoking this operation, to help code generators when generating overloaded parameter sets for this operation.",
        "type": "OperationDefinition_Overload",
        "array": true
      }
    }
  },
  "OperationDefinition_Parameter": {
    "display": "Operation Definition Parameter",
    "description": "Parameters for the operation/query",
    "properties": {
      "name": {
        "key": "name",
        "display": "Name",
        "description": "The name of used to identify the parameter.",
        "type": "enum",
        "enumValues": [
          "Name in Parameters.parameter.name or in URL"
        ]
      },
      "use": {
        "key": "use",
        "display": "Use",
        "description": "Whether this is an input or an output parameter.",
        "type": "enum",
        "enumValues": [
          "in",
          "out"
        ]
      },
      "min": {
        "key": "min",
        "display": "Min",
        "description": "The minimum number of times this parameter SHALL appear in the request or response.",
        "type": "integer"
      },
      "max": {
        "key": "max",
        "display": "Max",
        "description": "The maximum number of times this element is permitted to appear in the request or response.",
        "type": "string"
      },
      "documentation": {
        "key": "documentation",
        "display": "Documentation",
        "description": "Describes the meaning or use of this parameter.",
        "type": "string"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The type for this parameter.",
        "type": "enum",
        "enumValues": [
          "What type this parameter has"
        ]
      },
      "targetProfile": {
        "key": "targetProfile",
        "display": "Target Profile",
        "description": "Used when the type is \"Reference\" or \"canonical\", and identifies a profile structure or implementation Guide that applies to the target of the reference this parameter refers to. If any profiles are specified, then the content must conform to at least one of them. The URL can be a local reference - to a contained StructureDefinition, or a reference to another StructureDefinition or Implementation Guide by a canonical URL. When an implementation guide is specified, the target resource SHALL conform to at least one profile defined in the implementation guide.",
        "type": "canonical",
        "array": true
      },
      "searchType": {
        "key": "searchType",
        "display": "Search Type",
        "description": "How the parameter is understood as a search parameter. This is only used if the parameter type is 'string'.",
        "type": "enum",
        "enumValues": [
          "number",
          "date",
          "string",
          "token",
          "reference",
          "composite",
          "quantity",
          "uri",
          "special"
        ]
      },
      "binding": {
        "key": "binding",
        "display": "Binding",
        "description": "Binds to a value set if this parameter is coded (code, Coding, CodeableConcept).",
        "type": "OperationDefinition_Parameter_Binding"
      },
      "referencedFrom": {
        "key": "referencedFrom",
        "display": "Referenced From",
        "description": "Identifies other resource parameters within the operation invocation that are expected to resolve to this resource.",
        "type": "OperationDefinition_Parameter_ReferencedFrom",
        "array": true
      },
      "part": {
        "key": "part",
        "display": "Part",
        "description": "The parts of a nested Parameter.",
        "type": "UNKNOWN"
      }
    },
    "backboneElement": true
  },
  "OperationDefinition_Parameter_Binding": {
    "display": "Operation Definition Parameter_ Binding",
    "description": "ValueSet details if this is coded",
    "properties": {
      "strength": {
        "key": "strength",
        "display": "Strength",
        "description": "Indicates the degree of conformance expectations associated with this binding - that is, the degree to which the provided value set must be adhered to in the instances.",
        "type": "enum",
        "enumValues": [
          "required",
          "extensible",
          "preferred",
          "example"
        ]
      },
      "valueSet": {
        "key": "valueSet",
        "display": "Value Set",
        "description": "Points to the value set or external definition (e.g. implicit value set) that identifies the set of codes to be used.",
        "type": "canonical"
      }
    },
    "backboneElement": true
  },
  "OperationDefinition_Parameter_ReferencedFrom": {
    "display": "Operation Definition Parameter_ Referenced From",
    "description": "References to this parameter",
    "properties": {
      "source": {
        "key": "source",
        "display": "Source",
        "description": "The name of the parameter or dot-separated path of parameter names pointing to the resource parameter that is expected to contain a reference to this resource.",
        "type": "string"
      },
      "sourceId": {
        "key": "sourceId",
        "display": "Source Id",
        "description": "The id of the element in the referencing resource that is expected to resolve to this resource.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "OperationDefinition_Overload": {
    "display": "Operation Definition Overload",
    "description": "Define overloaded variants for when  generating code",
    "properties": {
      "parameterName": {
        "key": "parameterName",
        "display": "Parameter Name",
        "description": "Name of parameter to include in overload.",
        "type": "string",
        "array": true
      },
      "comment": {
        "key": "comment",
        "display": "Comment",
        "description": "Comments to go on overload.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "OperationOutcome": {
    "display": "OperationOutcome",
    "description": "A collection of error, warning, or information messages that result from a system action.",
    "properties": {
      "issue": {
        "key": "issue",
        "display": "Issue",
        "description": "An error, warning, or information message that results from a system action.",
        "type": "OperationOutcome_Issue",
        "array": true
      }
    }
  },
  "OperationOutcome_Issue": {
    "display": "Operation Outcome Issue",
    "description": "A single issue associated with the action",
    "properties": {
      "severity": {
        "key": "severity",
        "display": "Severity",
        "description": "Indicates whether the issue indicates a variation from successful processing.",
        "type": "enum",
        "enumValues": [
          "fatal",
          "error",
          "warning",
          "information"
        ]
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "Describes the type of the issue. The system that creates an OperationOutcome SHALL choose the most applicable code from the IssueType value set, and may additional provide its own code for the error in the details element.",
        "type": "enum",
        "enumValues": [
          "Error or warning code"
        ]
      },
      "details": {
        "key": "details",
        "display": "Details",
        "description": "Additional details about the error. This may be a text description of the error or a system code that identifies the error.",
        "type": "CodeableConcept"
      },
      "diagnostics": {
        "key": "diagnostics",
        "display": "Diagnostics",
        "description": "Additional diagnostic information about the issue.",
        "type": "string"
      },
      "location": {
        "key": "location",
        "display": "Location",
        "description": "This element is deprecated because it is XML specific. It is replaced by issue.expression, which is format independent, and simpler to parse. \n\nFor resource issues, this will be a simple XPath limited to element names, repetition indicators and the default child accessor that identifies one of the elements in the resource that caused this issue to be raised.  For HTTP errors, will be \"http.\" + the parameter name.",
        "type": "string",
        "array": true
      },
      "expression": {
        "key": "expression",
        "display": "Expression",
        "description": "A [simple subset of FHIRPath](fhirpath.html#simple) limited to element names, repetition indicators and the default child accessor that identifies one of the elements in the resource that caused this issue to be raised.",
        "type": "string",
        "array": true
      }
    },
    "backboneElement": true
  },
  "Organization": {
    "display": "Organization",
    "description": "A formally or informally recognized grouping of people or organizations formed for the purpose of achieving some form of collective action.  Includes companies, institutions, corporations, departments, community groups, healthcare practice groups, payer/insurer, etc.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Identifier for the organization that is used to identify the organization across multiple disparate systems.",
        "type": "Identifier",
        "array": true
      },
      "active": {
        "key": "active",
        "display": "Active",
        "description": "Whether the organization's record is still in active use.",
        "type": "boolean"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The kind(s) of organization that this is.",
        "type": "CodeableConcept",
        "array": true
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A name associated with the organization.",
        "type": "string"
      },
      "alias": {
        "key": "alias",
        "display": "Alias",
        "description": "A list of alternate names that the organization is known as, or was known as in the past.",
        "type": "string",
        "array": true
      },
      "telecom": {
        "key": "telecom",
        "display": "Telecom",
        "description": "A contact detail for the organization.",
        "type": "ContactPoint",
        "array": true
      },
      "address": {
        "key": "address",
        "display": "Address",
        "description": "An address for the organization.",
        "type": "Address",
        "array": true
      },
      "partOf": {
        "key": "partOf",
        "display": "Part Of",
        "description": "The organization of which this organization forms a part.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "contact": {
        "key": "contact",
        "display": "Contact",
        "description": "Contact for the organization for a certain purpose.",
        "type": "Organization_Contact",
        "array": true
      },
      "endpoint": {
        "key": "endpoint",
        "display": "Endpoint",
        "description": "Technical endpoints providing access to services operated for the organization.",
        "type": "Reference",
        "targetProfile": [
          "Endpoint"
        ],
        "array": true
      }
    }
  },
  "Organization_Contact": {
    "display": "Organization Contact",
    "description": "Contact for the organization for a certain purpose",
    "properties": {
      "purpose": {
        "key": "purpose",
        "display": "Purpose",
        "description": "Indicates a purpose for which the contact can be reached.",
        "type": "CodeableConcept"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A name associated with the contact.",
        "type": "HumanName"
      },
      "telecom": {
        "key": "telecom",
        "display": "Telecom",
        "description": "A contact detail (e.g. a telephone number or an email address) by which the party may be contacted.",
        "type": "ContactPoint",
        "array": true
      },
      "address": {
        "key": "address",
        "display": "Address",
        "description": "Visiting or postal addresses for the contact.",
        "type": "Address"
      }
    },
    "backboneElement": true
  },
  "OrganizationAffiliation": {
    "display": "OrganizationAffiliation",
    "description": "Defines an affiliation/assotiation/relationship between 2 distinct oganizations, that is not a part-of relationship/sub-division relationship.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Business identifiers that are specific to this role.",
        "type": "Identifier",
        "array": true
      },
      "active": {
        "key": "active",
        "display": "Active",
        "description": "Whether this organization affiliation record is in active use.",
        "type": "boolean"
      },
      "period": {
        "key": "period",
        "display": "Period",
        "description": "The period during which the participatingOrganization is affiliated with the primary organization.",
        "type": "Period"
      },
      "organization": {
        "key": "organization",
        "display": "Organization",
        "description": "Organization where the role is available (primary organization/has members).",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "participatingOrganization": {
        "key": "participatingOrganization",
        "display": "Participating Organization",
        "description": "The Participating Organization provides/performs the role(s) defined by the code to the Primary Organization (e.g. providing services or is a member of).",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "network": {
        "key": "network",
        "display": "Network",
        "description": "Health insurance provider network in which the participatingOrganization provides the role's services (if defined) at the indicated locations (if defined).",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ],
        "array": true
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "Definition of the role the participatingOrganization plays in the association.",
        "type": "CodeableConcept",
        "array": true
      },
      "specialty": {
        "key": "specialty",
        "display": "Specialty",
        "description": "Specific specialty of the participatingOrganization in the context of the role.",
        "type": "CodeableConcept",
        "array": true
      },
      "location": {
        "key": "location",
        "display": "Location",
        "description": "The location(s) at which the role occurs.",
        "type": "Reference",
        "targetProfile": [
          "Location"
        ],
        "array": true
      },
      "healthcareService": {
        "key": "healthcareService",
        "display": "Healthcare Service",
        "description": "Healthcare services provided through the role.",
        "type": "Reference",
        "targetProfile": [
          "HealthcareService"
        ],
        "array": true
      },
      "telecom": {
        "key": "telecom",
        "display": "Telecom",
        "description": "Contact details at the participatingOrganization relevant to this Affiliation.",
        "type": "ContactPoint",
        "array": true
      },
      "endpoint": {
        "key": "endpoint",
        "display": "Endpoint",
        "description": "Technical endpoints providing access to services operated for this role.",
        "type": "Reference",
        "targetProfile": [
          "Endpoint"
        ],
        "array": true
      }
    }
  },
  "Parameters": {
    "display": "Parameters",
    "description": "This resource is a non-persisted resource used to pass information into and back from an [operation](operations.html). It has no other use, and there is no RESTful endpoint associated with it.",
    "properties": {
      "parameter": {
        "key": "parameter",
        "display": "Parameter",
        "description": "A parameter passed to or received from the operation.",
        "type": "Parameters_Parameter",
        "array": true
      }
    }
  },
  "Parameters_Parameter": {
    "display": "Parameters Parameter",
    "description": "Operation Parameter",
    "properties": {
      "name": {
        "key": "name",
        "display": "Name",
        "description": "The name of the parameter (reference to the operation definition).",
        "type": "string"
      },
      "value[x]": {
        "key": "value[x]",
        "display": "Value[x]",
        "description": "If the parameter is a data type.",
        "type": "base64Binary"
      },
      "resource": {
        "key": "resource",
        "display": "Resource",
        "description": "If the parameter is a whole resource.",
        "type": "Resource"
      },
      "part": {
        "key": "part",
        "display": "Part",
        "description": "A named part of a multi-part parameter.",
        "type": "UNKNOWN"
      }
    },
    "backboneElement": true
  },
  "Patient": {
    "display": "Patient",
    "description": "Demographics and other administrative information about an individual or animal receiving care or other health-related services.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "An identifier for this patient.",
        "type": "Identifier",
        "array": true
      },
      "active": {
        "key": "active",
        "display": "Active",
        "description": "Whether this patient record is in active use. \nMany systems use this property to mark as non-current patients, such as those that have not been seen for a period of time based on an organization's business rules.\n\nIt is often used to filter patient lists to exclude inactive patients\n\nDeceased patients may also be marked as inactive for the same reasons, but may be active for some time after death.",
        "type": "boolean"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A name associated with the individual.",
        "type": "HumanName",
        "array": true
      },
      "telecom": {
        "key": "telecom",
        "display": "Telecom",
        "description": "A contact detail (e.g. a telephone number or an email address) by which the individual may be contacted.",
        "type": "ContactPoint",
        "array": true
      },
      "gender": {
        "key": "gender",
        "display": "Gender",
        "description": "Administrative Gender - the gender that the patient is considered to have for administration and record keeping purposes.",
        "type": "enum",
        "enumValues": [
          "male",
          "female",
          "other",
          "unknown"
        ]
      },
      "birthDate": {
        "key": "birthDate",
        "display": "Birth Date",
        "description": "The date of birth for the individual.",
        "type": "date"
      },
      "deceased[x]": {
        "key": "deceased[x]",
        "display": "Deceased[x]",
        "description": "Indicates if the individual is deceased or not.",
        "type": "boolean"
      },
      "address": {
        "key": "address",
        "display": "Address",
        "description": "An address for the individual.",
        "type": "Address",
        "array": true
      },
      "maritalStatus": {
        "key": "maritalStatus",
        "display": "Marital Status",
        "description": "This field contains a patient's most recent marital (civil) status.",
        "type": "CodeableConcept"
      },
      "multipleBirth[x]": {
        "key": "multipleBirth[x]",
        "display": "Multiple Birth[x]",
        "description": "Indicates whether the patient is part of a multiple (boolean) or indicates the actual birth order (integer).",
        "type": "boolean"
      },
      "photo": {
        "key": "photo",
        "display": "Photo",
        "description": "Image of the patient.",
        "type": "Attachment",
        "array": true
      },
      "contact": {
        "key": "contact",
        "display": "Contact",
        "description": "A contact party (e.g. guardian, partner, friend) for the patient.",
        "type": "Patient_Contact",
        "array": true
      },
      "communication": {
        "key": "communication",
        "display": "Communication",
        "description": "A language which may be used to communicate with the patient about his or her health.",
        "type": "Patient_Communication",
        "array": true
      },
      "generalPractitioner": {
        "key": "generalPractitioner",
        "display": "General Practitioner",
        "description": "Patient's nominated care provider.",
        "type": "Reference",
        "targetProfile": [
          "Organization",
          "Practitioner",
          "PractitionerRole"
        ],
        "array": true
      },
      "managingOrganization": {
        "key": "managingOrganization",
        "display": "Managing Organization",
        "description": "Organization that is the custodian of the patient record.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "link": {
        "key": "link",
        "display": "Link",
        "description": "Link to another patient resource that concerns the same actual patient.",
        "type": "Patient_Link",
        "array": true
      }
    }
  },
  "Patient_Contact": {
    "display": "Patient Contact",
    "description": "A contact party (e.g. guardian, partner, friend) for the patient",
    "properties": {
      "relationship": {
        "key": "relationship",
        "display": "Relationship",
        "description": "The nature of the relationship between the patient and the contact person.",
        "type": "CodeableConcept",
        "array": true
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A name associated with the contact person.",
        "type": "HumanName"
      },
      "telecom": {
        "key": "telecom",
        "display": "Telecom",
        "description": "A contact detail for the person, e.g. a telephone number or an email address.",
        "type": "ContactPoint",
        "array": true
      },
      "address": {
        "key": "address",
        "display": "Address",
        "description": "Address for the contact person.",
        "type": "Address"
      },
      "gender": {
        "key": "gender",
        "display": "Gender",
        "description": "Administrative Gender - the gender that the contact person is considered to have for administration and record keeping purposes.",
        "type": "enum",
        "enumValues": [
          "male",
          "female",
          "other",
          "unknown"
        ]
      },
      "organization": {
        "key": "organization",
        "display": "Organization",
        "description": "Organization on behalf of which the contact is acting or for which the contact is working.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "period": {
        "key": "period",
        "display": "Period",
        "description": "The period during which this contact person or organization is valid to be contacted relating to this patient.",
        "type": "Period"
      }
    },
    "backboneElement": true
  },
  "Patient_Communication": {
    "display": "Patient Communication",
    "description": "A language which may be used to communicate with the patient about his or her health",
    "properties": {
      "language": {
        "key": "language",
        "display": "Language",
        "description": "The ISO-639-1 alpha 2 code in lower case for the language, optionally followed by a hyphen and the ISO-3166-1 alpha 2 code for the region in upper case; e.g. \"en\" for English, or \"en-US\" for American English versus \"en-EN\" for England English.",
        "type": "CodeableConcept"
      },
      "preferred": {
        "key": "preferred",
        "display": "Preferred",
        "description": "Indicates whether or not the patient prefers this language (over other languages he masters up a certain level).",
        "type": "boolean"
      }
    },
    "backboneElement": true
  },
  "Patient_Link": {
    "display": "Patient Link",
    "description": "Link to another patient resource that concerns the same actual person",
    "properties": {
      "other": {
        "key": "other",
        "display": "Other",
        "description": "The other patient resource that the link refers to.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "RelatedPerson"
        ]
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The type of link between this patient resource and another patient resource.",
        "type": "enum",
        "enumValues": [
          "replaced-by",
          "replaces",
          "refer",
          "seealso"
        ]
      }
    },
    "backboneElement": true
  },
  "PaymentNotice": {
    "display": "PaymentNotice",
    "description": "This resource provides the status of the payment for goods and services rendered, and the request and response resource references.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "A unique identifier assigned to this payment notice.",
        "type": "Identifier",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of the resource instance.",
        "type": "enum",
        "enumValues": [
          "active",
          "cancelled",
          "draft",
          "entered-in-error"
        ]
      },
      "request": {
        "key": "request",
        "display": "Request",
        "description": "Reference of resource for which payment is being made.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ]
      },
      "response": {
        "key": "response",
        "display": "Response",
        "description": "Reference of response to resource for which payment is being made.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ]
      },
      "created": {
        "key": "created",
        "display": "Created",
        "description": "The date when this resource was created.",
        "type": "dateTime"
      },
      "provider": {
        "key": "provider",
        "display": "Provider",
        "description": "The practitioner who is responsible for the services rendered to the patient.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization"
        ]
      },
      "payment": {
        "key": "payment",
        "display": "Payment",
        "description": "A reference to the payment which is the subject of this notice.",
        "type": "Reference",
        "targetProfile": [
          "PaymentReconciliation"
        ]
      },
      "paymentDate": {
        "key": "paymentDate",
        "display": "Payment Date",
        "description": "The date when the above payment action occurred.",
        "type": "date"
      },
      "payee": {
        "key": "payee",
        "display": "Payee",
        "description": "The party who will receive or has received payment that is the subject of this notification.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization"
        ]
      },
      "recipient": {
        "key": "recipient",
        "display": "Recipient",
        "description": "The party who is notified of the payment status.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "amount": {
        "key": "amount",
        "display": "Amount",
        "description": "The amount sent to the payee.",
        "type": "Money"
      },
      "paymentStatus": {
        "key": "paymentStatus",
        "display": "Payment Status",
        "description": "A code indicating whether payment has been sent or cleared.",
        "type": "CodeableConcept"
      }
    }
  },
  "PaymentReconciliation": {
    "display": "PaymentReconciliation",
    "description": "This resource provides the details including amount of a payment and allocates the payment items being paid.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "A unique identifier assigned to this payment reconciliation.",
        "type": "Identifier",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of the resource instance.",
        "type": "enum",
        "enumValues": [
          "active",
          "cancelled",
          "draft",
          "entered-in-error"
        ]
      },
      "period": {
        "key": "period",
        "display": "Period",
        "description": "The period of time for which payments have been gathered into this bulk payment for settlement.",
        "type": "Period"
      },
      "created": {
        "key": "created",
        "display": "Created",
        "description": "The date when the resource was created.",
        "type": "dateTime"
      },
      "paymentIssuer": {
        "key": "paymentIssuer",
        "display": "Payment Issuer",
        "description": "The party who generated the payment.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "request": {
        "key": "request",
        "display": "Request",
        "description": "Original request resource reference.",
        "type": "Reference",
        "targetProfile": [
          "Task"
        ]
      },
      "requestor": {
        "key": "requestor",
        "display": "Requestor",
        "description": "The practitioner who is responsible for the services rendered to the patient.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization"
        ]
      },
      "outcome": {
        "key": "outcome",
        "display": "Outcome",
        "description": "The outcome of a request for a reconciliation.",
        "type": "enum",
        "enumValues": [
          "queued",
          "complete",
          "error",
          "partial"
        ]
      },
      "disposition": {
        "key": "disposition",
        "display": "Disposition",
        "description": "A human readable description of the status of the request for the reconciliation.",
        "type": "string"
      },
      "paymentDate": {
        "key": "paymentDate",
        "display": "Payment Date",
        "description": "The date of payment as indicated on the financial instrument.",
        "type": "date"
      },
      "paymentAmount": {
        "key": "paymentAmount",
        "display": "Payment Amount",
        "description": "Total payment amount as indicated on the financial instrument.",
        "type": "Money"
      },
      "paymentIdentifier": {
        "key": "paymentIdentifier",
        "display": "Payment Identifier",
        "description": "Issuer's unique identifier for the payment instrument.",
        "type": "Identifier"
      },
      "detail": {
        "key": "detail",
        "display": "Detail",
        "description": "Distribution of the payment amount for a previously acknowledged payable.",
        "type": "PaymentReconciliation_Detail",
        "array": true
      },
      "formCode": {
        "key": "formCode",
        "display": "Form Code",
        "description": "A code for the form to be used for printing the content.",
        "type": "CodeableConcept"
      },
      "processNote": {
        "key": "processNote",
        "display": "Process Note",
        "description": "A note that describes or explains the processing in a human readable form.",
        "type": "PaymentReconciliation_ProcessNote",
        "array": true
      }
    }
  },
  "PaymentReconciliation_Detail": {
    "display": "Payment Reconciliation Detail",
    "description": "Settlement particulars",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Unique identifier for the current payment item for the referenced payable.",
        "type": "Identifier"
      },
      "predecessor": {
        "key": "predecessor",
        "display": "Predecessor",
        "description": "Unique identifier for the prior payment item for the referenced payable.",
        "type": "Identifier"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Code to indicate the nature of the payment.",
        "type": "CodeableConcept"
      },
      "request": {
        "key": "request",
        "display": "Request",
        "description": "A resource, such as a Claim, the evaluation of which could lead to payment.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ]
      },
      "submitter": {
        "key": "submitter",
        "display": "Submitter",
        "description": "The party which submitted the claim or financial transaction.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization"
        ]
      },
      "response": {
        "key": "response",
        "display": "Response",
        "description": "A resource, such as a ClaimResponse, which contains a commitment to payment.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ]
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "The date from the response resource containing a commitment to pay.",
        "type": "date"
      },
      "responsible": {
        "key": "responsible",
        "display": "Responsible",
        "description": "A reference to the individual who is responsible for inquiries regarding the response and its payment.",
        "type": "Reference",
        "targetProfile": [
          "PractitionerRole"
        ]
      },
      "payee": {
        "key": "payee",
        "display": "Payee",
        "description": "The party which is receiving the payment.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization"
        ]
      },
      "amount": {
        "key": "amount",
        "display": "Amount",
        "description": "The monetary amount allocated from the total payment to the payable.",
        "type": "Money"
      }
    },
    "backboneElement": true
  },
  "PaymentReconciliation_ProcessNote": {
    "display": "Payment Reconciliation Process Note",
    "description": "Note concerning processing",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The business purpose of the note text.",
        "type": "enum",
        "enumValues": [
          "display",
          "print",
          "printoper"
        ]
      }
    },
    "backboneElement": true
  },
  "Person": {
    "display": "Person",
    "description": "Demographics and administrative information about a person independent of a specific health-related context.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Identifier for a person within a particular scope.",
        "type": "Identifier",
        "array": true
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A name associated with the person.",
        "type": "HumanName",
        "array": true
      },
      "telecom": {
        "key": "telecom",
        "display": "Telecom",
        "description": "A contact detail for the person, e.g. a telephone number or an email address.",
        "type": "ContactPoint",
        "array": true
      },
      "gender": {
        "key": "gender",
        "display": "Gender",
        "description": "Administrative Gender.",
        "type": "enum",
        "enumValues": [
          "male",
          "female",
          "other",
          "unknown"
        ]
      },
      "birthDate": {
        "key": "birthDate",
        "display": "Birth Date",
        "description": "The birth date for the person.",
        "type": "date"
      },
      "address": {
        "key": "address",
        "display": "Address",
        "description": "One or more addresses for the person.",
        "type": "Address",
        "array": true
      },
      "photo": {
        "key": "photo",
        "display": "Photo",
        "description": "An image that can be displayed as a thumbnail of the person to enhance the identification of the individual.",
        "type": "Attachment"
      },
      "managingOrganization": {
        "key": "managingOrganization",
        "display": "Managing Organization",
        "description": "The organization that is the custodian of the person record.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "active": {
        "key": "active",
        "display": "Active",
        "description": "Whether this person's record is in active use.",
        "type": "boolean"
      },
      "link": {
        "key": "link",
        "display": "Link",
        "description": "Link to a resource that concerns the same actual person.",
        "type": "Person_Link",
        "array": true
      }
    }
  },
  "Person_Link": {
    "display": "Person Link",
    "description": "Link to a resource that concerns the same actual person",
    "properties": {
      "target": {
        "key": "target",
        "display": "Target",
        "description": "The resource to which this actual person is associated.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Practitioner",
          "RelatedPerson",
          "Person"
        ]
      },
      "assurance": {
        "key": "assurance",
        "display": "Assurance",
        "description": "Level of assurance that this link is associated with the target resource.",
        "type": "enum",
        "enumValues": [
          "level1",
          "level2",
          "level3",
          "level4"
        ]
      }
    },
    "backboneElement": true
  },
  "PlanDefinition": {
    "display": "PlanDefinition",
    "description": "This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical artifacts such as clinical decision support rules, order sets and protocols.",
    "properties": {
      "url": {
        "key": "url",
        "display": "Url",
        "description": "An absolute URI that is used to identify this plan definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this plan definition is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the plan definition is stored on different servers.",
        "type": "uri"
      },
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "A formal identifier that is used to identify this plan definition when it is represented in other formats, or referenced in a specification, model, design or an instance.",
        "type": "Identifier",
        "array": true
      },
      "version": {
        "key": "version",
        "display": "Version",
        "description": "The identifier that is used to identify this version of the plan definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the plan definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence. To provide a version consistent with the Decision Support Service specification, use the format Major.Minor.Revision (e.g. 1.0.0). For more information on versioning knowledge assets, refer to the Decision Support Service specification. Note that a version is required for non-experimental active artifacts.",
        "type": "string"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A natural language name identifying the plan definition. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
        "type": "string"
      },
      "title": {
        "key": "title",
        "display": "Title",
        "description": "A short, descriptive, user-friendly title for the plan definition.",
        "type": "string"
      },
      "subtitle": {
        "key": "subtitle",
        "display": "Subtitle",
        "description": "An explanatory or alternate title for the plan definition giving additional information about its content.",
        "type": "string"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "A high-level category for the plan definition that distinguishes the kinds of systems that would be interested in the plan definition.",
        "type": "CodeableConcept"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of this plan definition. Enables tracking the life-cycle of the content.",
        "type": "enum",
        "enumValues": [
          "draft",
          "active",
          "retired",
          "unknown"
        ]
      },
      "experimental": {
        "key": "experimental",
        "display": "Experimental",
        "description": "A Boolean value to indicate that this plan definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
        "type": "boolean"
      },
      "subject[x]": {
        "key": "subject[x]",
        "display": "Subject[x]",
        "description": "A code or group definition that describes the intended subject of the plan definition.",
        "type": "CodeableConcept"
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "The date  (and optionally time) when the plan definition was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the plan definition changes.",
        "type": "dateTime"
      },
      "publisher": {
        "key": "publisher",
        "display": "Publisher",
        "description": "The name of the organization or individual that published the plan definition.",
        "type": "string"
      },
      "contact": {
        "key": "contact",
        "display": "Contact",
        "description": "Contact details to assist a user in finding and communicating with the publisher.",
        "type": "ContactDetail",
        "array": true
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A free text natural language description of the plan definition from a consumer's perspective.",
        "type": "markdown"
      },
      "useContext": {
        "key": "useContext",
        "display": "Use Context",
        "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate plan definition instances.",
        "type": "UsageContext",
        "array": true
      },
      "jurisdiction": {
        "key": "jurisdiction",
        "display": "Jurisdiction",
        "description": "A legal or geographic region in which the plan definition is intended to be used.",
        "type": "CodeableConcept",
        "array": true
      },
      "purpose": {
        "key": "purpose",
        "display": "Purpose",
        "description": "Explanation of why this plan definition is needed and why it has been designed as it has.",
        "type": "markdown"
      },
      "usage": {
        "key": "usage",
        "display": "Usage",
        "description": "A detailed description of how the plan definition is used from a clinical perspective.",
        "type": "string"
      },
      "copyright": {
        "key": "copyright",
        "display": "Copyright",
        "description": "A copyright statement relating to the plan definition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the plan definition.",
        "type": "markdown"
      },
      "approvalDate": {
        "key": "approvalDate",
        "display": "Approval Date",
        "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
        "type": "date"
      },
      "lastReviewDate": {
        "key": "lastReviewDate",
        "display": "Last Review Date",
        "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
        "type": "date"
      },
      "effectivePeriod": {
        "key": "effectivePeriod",
        "display": "Effective Period",
        "description": "The period during which the plan definition content was or is planned to be in active use.",
        "type": "Period"
      },
      "topic": {
        "key": "topic",
        "display": "Topic",
        "description": "Descriptive topics related to the content of the plan definition. Topics provide a high-level categorization of the definition that can be useful for filtering and searching.",
        "type": "CodeableConcept",
        "array": true
      },
      "author": {
        "key": "author",
        "display": "Author",
        "description": "An individiual or organization primarily involved in the creation and maintenance of the content.",
        "type": "ContactDetail",
        "array": true
      },
      "editor": {
        "key": "editor",
        "display": "Editor",
        "description": "An individual or organization primarily responsible for internal coherence of the content.",
        "type": "ContactDetail",
        "array": true
      },
      "reviewer": {
        "key": "reviewer",
        "display": "Reviewer",
        "description": "An individual or organization primarily responsible for review of some aspect of the content.",
        "type": "ContactDetail",
        "array": true
      },
      "endorser": {
        "key": "endorser",
        "display": "Endorser",
        "description": "An individual or organization responsible for officially endorsing the content for use in some setting.",
        "type": "ContactDetail",
        "array": true
      },
      "relatedArtifact": {
        "key": "relatedArtifact",
        "display": "Related Artifact",
        "description": "Related artifacts such as additional documentation, justification, or bibliographic references.",
        "type": "RelatedArtifact",
        "array": true
      },
      "library": {
        "key": "library",
        "display": "Library",
        "description": "A reference to a Library resource containing any formal logic used by the plan definition.",
        "type": "canonical",
        "array": true
      },
      "goal": {
        "key": "goal",
        "display": "Goal",
        "description": "Goals that describe what the activities within the plan are intended to achieve. For example, weight loss, restoring an activity of daily living, obtaining herd immunity via immunization, meeting a process improvement objective, etc.",
        "type": "PlanDefinition_Goal",
        "array": true
      },
      "action": {
        "key": "action",
        "display": "Action",
        "description": "An action or group of actions to be taken as part of the plan.",
        "type": "PlanDefinition_Action",
        "array": true
      }
    }
  },
  "PlanDefinition_Goal": {
    "display": "Plan Definition Goal",
    "description": "What the plan is trying to accomplish",
    "properties": {
      "category": {
        "key": "category",
        "display": "Category",
        "description": "Indicates a category the goal falls within.",
        "type": "CodeableConcept"
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "Human-readable and/or coded description of a specific desired objective of care, such as \"control blood pressure\" or \"negotiate an obstacle course\" or \"dance with child at wedding\".",
        "type": "CodeableConcept"
      },
      "priority": {
        "key": "priority",
        "display": "Priority",
        "description": "Identifies the expected level of importance associated with reaching/sustaining the defined goal.",
        "type": "CodeableConcept"
      },
      "start": {
        "key": "start",
        "display": "Start",
        "description": "The event after which the goal should begin being pursued.",
        "type": "CodeableConcept"
      },
      "addresses": {
        "key": "addresses",
        "display": "Addresses",
        "description": "Identifies problems, conditions, issues, or concerns the goal is intended to address.",
        "type": "CodeableConcept",
        "array": true
      },
      "documentation": {
        "key": "documentation",
        "display": "Documentation",
        "description": "Didactic or other informational resources associated with the goal that provide further supporting information about the goal. Information resources can include inline text commentary and links to web resources.",
        "type": "RelatedArtifact",
        "array": true
      },
      "target": {
        "key": "target",
        "display": "Target",
        "description": "Indicates what should be done and within what timeframe.",
        "type": "PlanDefinition_Goal_Target",
        "array": true
      }
    },
    "backboneElement": true
  },
  "PlanDefinition_Goal_Target": {
    "display": "Plan Definition Goal_ Target",
    "description": "Target outcome for the goal",
    "properties": {
      "measure": {
        "key": "measure",
        "display": "Measure",
        "description": "The parameter whose value is to be tracked, e.g. body weight, blood pressure, or hemoglobin A1c level.",
        "type": "CodeableConcept"
      },
      "detail[x]": {
        "key": "detail[x]",
        "display": "Detail[x]",
        "description": "The target value of the measure to be achieved to signify fulfillment of the goal, e.g. 150 pounds or 7.0%. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any value at or above the low value.",
        "type": "Quantity"
      },
      "due": {
        "key": "due",
        "display": "Due",
        "description": "Indicates the timeframe after the start of the goal in which the goal should be met.",
        "type": "Duration"
      }
    },
    "backboneElement": true
  },
  "PlanDefinition_Action": {
    "display": "Plan Definition Action",
    "description": "Action defined by the plan",
    "properties": {
      "prefix": {
        "key": "prefix",
        "display": "Prefix",
        "description": "A user-visible prefix for the action.",
        "type": "string"
      },
      "title": {
        "key": "title",
        "display": "Title",
        "description": "The title of the action displayed to a user.",
        "type": "string"
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A brief description of the action used to provide a summary to display to the user.",
        "type": "string"
      },
      "textEquivalent": {
        "key": "textEquivalent",
        "display": "Text Equivalent",
        "description": "A text equivalent of the action to be performed. This provides a human-interpretable description of the action when the definition is consumed by a system that might not be capable of interpreting it dynamically.",
        "type": "string"
      },
      "priority": {
        "key": "priority",
        "display": "Priority",
        "description": "Indicates how quickly the action should be addressed with respect to other actions.",
        "type": "enum",
        "enumValues": [
          "routine",
          "urgent",
          "asap",
          "stat"
        ]
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "A code that provides meaning for the action or action group. For example, a section may have a LOINC code for the section of a documentation template.",
        "type": "CodeableConcept",
        "array": true
      },
      "reason": {
        "key": "reason",
        "display": "Reason",
        "description": "A description of why this action is necessary or appropriate.",
        "type": "CodeableConcept",
        "array": true
      },
      "documentation": {
        "key": "documentation",
        "display": "Documentation",
        "description": "Didactic or other informational resources associated with the action that can be provided to the CDS recipient. Information resources can include inline text commentary and links to web resources.",
        "type": "RelatedArtifact",
        "array": true
      },
      "goalId": {
        "key": "goalId",
        "display": "Goal Id",
        "description": "Identifies goals that this action supports. The reference must be to a goal element defined within this plan definition.",
        "type": "id",
        "array": true
      },
      "subject[x]": {
        "key": "subject[x]",
        "display": "Subject[x]",
        "description": "A code or group definition that describes the intended subject of the action and its children, if any.",
        "type": "CodeableConcept"
      },
      "trigger": {
        "key": "trigger",
        "display": "Trigger",
        "description": "A description of when the action should be triggered.",
        "type": "TriggerDefinition",
        "array": true
      },
      "condition": {
        "key": "condition",
        "display": "Condition",
        "description": "An expression that describes applicability criteria or start/stop conditions for the action.",
        "type": "PlanDefinition_Action_Condition",
        "array": true
      },
      "input": {
        "key": "input",
        "display": "Input",
        "description": "Defines input data requirements for the action.",
        "type": "DataRequirement",
        "array": true
      },
      "output": {
        "key": "output",
        "display": "Output",
        "description": "Defines the outputs of the action, if any.",
        "type": "DataRequirement",
        "array": true
      },
      "relatedAction": {
        "key": "relatedAction",
        "display": "Related Action",
        "description": "A relationship to another action such as \"before\" or \"30-60 minutes after start of\".",
        "type": "PlanDefinition_Action_RelatedAction",
        "array": true
      },
      "timing[x]": {
        "key": "timing[x]",
        "display": "Timing[x]",
        "description": "An optional value describing when the action should be performed.",
        "type": "dateTime"
      },
      "participant": {
        "key": "participant",
        "display": "Participant",
        "description": "Indicates who should participate in performing the action described.",
        "type": "PlanDefinition_Action_Participant",
        "array": true
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The type of action to perform (create, update, remove).",
        "type": "CodeableConcept"
      },
      "groupingBehavior": {
        "key": "groupingBehavior",
        "display": "Grouping Behavior",
        "description": "Defines the grouping behavior for the action and its children.",
        "type": "enum",
        "enumValues": [
          "visual-group",
          "logical-group",
          "sentence-group"
        ]
      },
      "selectionBehavior": {
        "key": "selectionBehavior",
        "display": "Selection Behavior",
        "description": "Defines the selection behavior for the action and its children.",
        "type": "enum",
        "enumValues": [
          "any",
          "all",
          "all-or-none",
          "exactly-one",
          "at-most-one",
          "one-or-more"
        ]
      },
      "requiredBehavior": {
        "key": "requiredBehavior",
        "display": "Required Behavior",
        "description": "Defines the required behavior for the action.",
        "type": "enum",
        "enumValues": [
          "must",
          "could",
          "must-unless-documented"
        ]
      },
      "precheckBehavior": {
        "key": "precheckBehavior",
        "display": "Precheck Behavior",
        "description": "Defines whether the action should usually be preselected.",
        "type": "enum",
        "enumValues": [
          "yes",
          "no"
        ]
      },
      "cardinalityBehavior": {
        "key": "cardinalityBehavior",
        "display": "Cardinality Behavior",
        "description": "Defines whether the action can be selected multiple times.",
        "type": "enum",
        "enumValues": [
          "single",
          "multiple"
        ]
      },
      "definition[x]": {
        "key": "definition[x]",
        "display": "Definition[x]",
        "description": "A reference to an ActivityDefinition that describes the action to be taken in detail, or a PlanDefinition that describes a series of actions to be taken.",
        "type": "canonical"
      },
      "transform": {
        "key": "transform",
        "display": "Transform",
        "description": "A reference to a StructureMap resource that defines a transform that can be executed to produce the intent resource using the ActivityDefinition instance as the input.",
        "type": "canonical"
      },
      "dynamicValue": {
        "key": "dynamicValue",
        "display": "Dynamic Value",
        "description": "Customizations that should be applied to the statically defined resource. For example, if the dosage of a medication must be computed based on the patient's weight, a customization would be used to specify an expression that calculated the weight, and the path on the resource that would contain the result.",
        "type": "PlanDefinition_Action_DynamicValue",
        "array": true
      },
      "action": {
        "key": "action",
        "display": "Action",
        "description": "Sub actions that are contained within the action. The behavior of this action determines the functionality of the sub-actions. For example, a selection behavior of at-most-one indicates that of the sub-actions, at most one may be chosen as part of realizing the action definition.",
        "type": "UNKNOWN"
      }
    },
    "backboneElement": true
  },
  "PlanDefinition_Action_Condition": {
    "display": "Plan Definition Action_ Condition",
    "description": "Whether or not the action is applicable",
    "properties": {
      "kind": {
        "key": "kind",
        "display": "Kind",
        "description": "The kind of condition.",
        "type": "enum",
        "enumValues": [
          "applicability",
          "start",
          "stop"
        ]
      },
      "expression": {
        "key": "expression",
        "display": "Expression",
        "description": "An expression that returns true or false, indicating whether the condition is satisfied.",
        "type": "Expression"
      }
    },
    "backboneElement": true
  },
  "PlanDefinition_Action_RelatedAction": {
    "display": "Plan Definition Action_ Related Action",
    "description": "Relationship to another action",
    "properties": {
      "actionId": {
        "key": "actionId",
        "display": "Action Id",
        "description": "The element id of the related action.",
        "type": "id"
      },
      "relationship": {
        "key": "relationship",
        "display": "Relationship",
        "description": "The relationship of this action to the related action.",
        "type": "enum",
        "enumValues": [
          "before-start",
          "before",
          "before-end",
          "concurrent-with-start",
          "concurrent",
          "concurrent-with-end",
          "after-start",
          "after",
          "after-end"
        ]
      },
      "offset[x]": {
        "key": "offset[x]",
        "display": "Offset[x]",
        "description": "A duration or range of durations to apply to the relationship. For example, 30-60 minutes before.",
        "type": "Duration"
      }
    },
    "backboneElement": true
  },
  "PlanDefinition_Action_Participant": {
    "display": "Plan Definition Action_ Participant",
    "description": "Who should participate in the action",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The type of participant in the action.",
        "type": "enum",
        "enumValues": [
          "patient",
          "practitioner",
          "related-person",
          "device"
        ]
      },
      "role": {
        "key": "role",
        "display": "Role",
        "description": "The role the participant should play in performing the described action.",
        "type": "CodeableConcept"
      }
    },
    "backboneElement": true
  },
  "PlanDefinition_Action_DynamicValue": {
    "display": "Plan Definition Action_ Dynamic Value",
    "description": "Dynamic aspects of the definition",
    "properties": {
      "path": {
        "key": "path",
        "display": "Path",
        "description": "The path to the element to be customized. This is the path on the resource that will hold the result of the calculation defined by the expression. The specified path SHALL be a FHIRPath resolveable on the specified target type of the ActivityDefinition, and SHALL consist only of identifiers, constant indexers, and a restricted subset of functions. The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements (see the [Simple FHIRPath Profile](fhirpath.html#simple) for full details).",
        "type": "string"
      },
      "expression": {
        "key": "expression",
        "display": "Expression",
        "description": "An expression specifying the value of the customized element.",
        "type": "Expression"
      }
    },
    "backboneElement": true
  },
  "Practitioner": {
    "display": "Practitioner",
    "description": "A person who is directly or indirectly involved in the provisioning of healthcare.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "An identifier that applies to this person in this role.",
        "type": "Identifier",
        "array": true
      },
      "active": {
        "key": "active",
        "display": "Active",
        "description": "Whether this practitioner's record is in active use.",
        "type": "boolean"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "The name(s) associated with the practitioner.",
        "type": "HumanName",
        "array": true
      },
      "telecom": {
        "key": "telecom",
        "display": "Telecom",
        "description": "A contact detail for the practitioner, e.g. a telephone number or an email address.",
        "type": "ContactPoint",
        "array": true
      },
      "address": {
        "key": "address",
        "display": "Address",
        "description": "Address(es) of the practitioner that are not role specific (typically home address). \rWork addresses are not typically entered in this property as they are usually role dependent.",
        "type": "Address",
        "array": true
      },
      "gender": {
        "key": "gender",
        "display": "Gender",
        "description": "Administrative Gender - the gender that the person is considered to have for administration and record keeping purposes.",
        "type": "enum",
        "enumValues": [
          "male",
          "female",
          "other",
          "unknown"
        ]
      },
      "birthDate": {
        "key": "birthDate",
        "display": "Birth Date",
        "description": "The date of birth for the practitioner.",
        "type": "date"
      },
      "photo": {
        "key": "photo",
        "display": "Photo",
        "description": "Image of the person.",
        "type": "Attachment",
        "array": true
      },
      "qualification": {
        "key": "qualification",
        "display": "Qualification",
        "description": "The official certifications, training, and licenses that authorize or otherwise pertain to the provision of care by the practitioner.  For example, a medical license issued by a medical board authorizing the practitioner to practice medicine within a certian locality.",
        "type": "Practitioner_Qualification",
        "array": true
      },
      "communication": {
        "key": "communication",
        "display": "Communication",
        "description": "A language the practitioner can use in patient communication.",
        "type": "CodeableConcept",
        "array": true
      }
    }
  },
  "Practitioner_Qualification": {
    "display": "Practitioner Qualification",
    "description": "Certification, licenses, or training pertaining to the provision of care",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "An identifier that applies to this person's qualification in this role.",
        "type": "Identifier",
        "array": true
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "Coded representation of the qualification.",
        "type": "CodeableConcept"
      },
      "period": {
        "key": "period",
        "display": "Period",
        "description": "Period during which the qualification is valid.",
        "type": "Period"
      },
      "issuer": {
        "key": "issuer",
        "display": "Issuer",
        "description": "Organization that regulates and issues the qualification.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      }
    },
    "backboneElement": true
  },
  "PractitionerRole": {
    "display": "PractitionerRole",
    "description": "A specific set of Roles/Locations/specialties/services that a practitioner may perform at an organization for a period of time.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Business Identifiers that are specific to a role/location.",
        "type": "Identifier",
        "array": true
      },
      "active": {
        "key": "active",
        "display": "Active",
        "description": "Whether this practitioner role record is in active use.",
        "type": "boolean"
      },
      "period": {
        "key": "period",
        "display": "Period",
        "description": "The period during which the person is authorized to act as a practitioner in these role(s) for the organization.",
        "type": "Period"
      },
      "practitioner": {
        "key": "practitioner",
        "display": "Practitioner",
        "description": "Practitioner that is able to provide the defined services for the organization.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner"
        ]
      },
      "organization": {
        "key": "organization",
        "display": "Organization",
        "description": "The organization where the Practitioner performs the roles associated.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "Roles which this practitioner is authorized to perform for the organization.",
        "type": "CodeableConcept",
        "array": true
      },
      "specialty": {
        "key": "specialty",
        "display": "Specialty",
        "description": "Specific specialty of the practitioner.",
        "type": "CodeableConcept",
        "array": true
      },
      "location": {
        "key": "location",
        "display": "Location",
        "description": "The location(s) at which this practitioner provides care.",
        "type": "Reference",
        "targetProfile": [
          "Location"
        ],
        "array": true
      },
      "healthcareService": {
        "key": "healthcareService",
        "display": "Healthcare Service",
        "description": "The list of healthcare services that this worker provides for this role's Organization/Location(s).",
        "type": "Reference",
        "targetProfile": [
          "HealthcareService"
        ],
        "array": true
      },
      "telecom": {
        "key": "telecom",
        "display": "Telecom",
        "description": "Contact details that are specific to the role/location/service.",
        "type": "ContactPoint",
        "array": true
      },
      "availableTime": {
        "key": "availableTime",
        "display": "Available Time",
        "description": "A collection of times the practitioner is available or performing this role at the location and/or healthcareservice.",
        "type": "PractitionerRole_AvailableTime",
        "array": true
      },
      "notAvailable": {
        "key": "notAvailable",
        "display": "Not Available",
        "description": "The practitioner is not available or performing this role during this period of time due to the provided reason.",
        "type": "PractitionerRole_NotAvailable",
        "array": true
      },
      "availabilityExceptions": {
        "key": "availabilityExceptions",
        "display": "Availability Exceptions",
        "description": "A description of site availability exceptions, e.g. public holiday availability. Succinctly describing all possible exceptions to normal site availability as details in the available Times and not available Times.",
        "type": "string"
      },
      "endpoint": {
        "key": "endpoint",
        "display": "Endpoint",
        "description": "Technical endpoints providing access to services operated for the practitioner with this role.",
        "type": "Reference",
        "targetProfile": [
          "Endpoint"
        ],
        "array": true
      }
    }
  },
  "PractitionerRole_AvailableTime": {
    "display": "Practitioner Role Available Time",
    "description": "Times the Service Site is available",
    "properties": {
      "daysOfWeek": {
        "key": "daysOfWeek",
        "display": "Days Of Week",
        "description": "Indicates which days of the week are available between the start and end Times.",
        "type": "enum",
        "enumValues": [
          "mon",
          "tue",
          "wed",
          "thu",
          "fri",
          "sat",
          "sun"
        ],
        "array": true
      },
      "allDay": {
        "key": "allDay",
        "display": "All Day",
        "description": "Is this always available? (hence times are irrelevant) e.g. 24 hour service.",
        "type": "boolean"
      },
      "availableStartTime": {
        "key": "availableStartTime",
        "display": "Available Start Time",
        "description": "The opening time of day. Note: If the AllDay flag is set, then this time is ignored.",
        "type": "time"
      },
      "availableEndTime": {
        "key": "availableEndTime",
        "display": "Available End Time",
        "description": "The closing time of day. Note: If the AllDay flag is set, then this time is ignored.",
        "type": "time"
      }
    },
    "backboneElement": true
  },
  "PractitionerRole_NotAvailable": {
    "display": "Practitioner Role Not Available",
    "description": "Not available during this time due to provided reason",
    "properties": {
      "description": {
        "key": "description",
        "display": "Description",
        "description": "The reason that can be presented to the user as to why this time is not available.",
        "type": "string"
      },
      "during": {
        "key": "during",
        "display": "During",
        "description": "Service is not available (seasonally or for a public holiday) from this date.",
        "type": "Period"
      }
    },
    "backboneElement": true
  },
  "Procedure": {
    "display": "Procedure",
    "description": "An action that is or was performed on or for a patient. This can be a physical intervention like an operation, or less invasive like long term services, counseling, or hypnotherapy.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Business identifiers assigned to this procedure by the performer or other systems which remain constant as the resource is updated and is propagated from server to server.",
        "type": "Identifier",
        "array": true
      },
      "instantiatesCanonical": {
        "key": "instantiatesCanonical",
        "display": "Instantiates Canonical",
        "description": "The URL pointing to a FHIR-defined protocol, guideline, order set or other definition that is adhered to in whole or in part by this Procedure.",
        "type": "canonical",
        "array": true
      },
      "instantiatesUri": {
        "key": "instantiatesUri",
        "display": "Instantiates Uri",
        "description": "The URL pointing to an externally maintained protocol, guideline, order set or other definition that is adhered to in whole or in part by this Procedure.",
        "type": "uri",
        "array": true
      },
      "basedOn": {
        "key": "basedOn",
        "display": "Based On",
        "description": "A reference to a resource that contains details of the request for this procedure.",
        "type": "Reference",
        "targetProfile": [
          "CarePlan",
          "ServiceRequest"
        ],
        "array": true
      },
      "partOf": {
        "key": "partOf",
        "display": "Part Of",
        "description": "A larger event of which this particular procedure is a component or step.",
        "type": "Reference",
        "targetProfile": [
          "Procedure",
          "Observation",
          "MedicationAdministration"
        ],
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "A code specifying the state of the procedure. Generally, this will be the in-progress or completed state.",
        "type": "enum",
        "enumValues": [
          "preparation",
          "in-progress",
          "not-done",
          "on-hold",
          "stopped",
          "completed",
          "entered-in-error",
          "unknown"
        ]
      },
      "statusReason": {
        "key": "statusReason",
        "display": "Status Reason",
        "description": "Captures the reason for the current state of the procedure.",
        "type": "CodeableConcept"
      },
      "category": {
        "key": "category",
        "display": "Category",
        "description": "A code that classifies the procedure for searching, sorting and display purposes (e.g. \"Surgical Procedure\").",
        "type": "CodeableConcept"
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "The specific procedure that is performed. Use text if the exact nature of the procedure cannot be coded (e.g. \"Laparoscopic Appendectomy\").",
        "type": "CodeableConcept"
      },
      "subject": {
        "key": "subject",
        "display": "Subject",
        "description": "The person, animal or group on which the procedure was performed.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Group"
        ]
      },
      "encounter": {
        "key": "encounter",
        "display": "Encounter",
        "description": "The Encounter during which this Procedure was created or performed or to which the creation of this record is tightly associated.",
        "type": "Reference",
        "targetProfile": [
          "Encounter"
        ]
      },
      "performed[x]": {
        "key": "performed[x]",
        "display": "Performed[x]",
        "description": "Estimated or actual date, date-time, period, or age when the procedure was performed.  Allows a period to support complex procedures that span more than one date, and also allows for the length of the procedure to be captured.",
        "type": "dateTime"
      },
      "recorder": {
        "key": "recorder",
        "display": "Recorder",
        "description": "Individual who recorded the record and takes responsibility for its content.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "RelatedPerson",
          "Practitioner",
          "PractitionerRole"
        ]
      },
      "asserter": {
        "key": "asserter",
        "display": "Asserter",
        "description": "Individual who is making the procedure statement.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "RelatedPerson",
          "Practitioner",
          "PractitionerRole"
        ]
      },
      "performer": {
        "key": "performer",
        "display": "Performer",
        "description": "Limited to \"real\" people rather than equipment.",
        "type": "Procedure_Performer",
        "array": true
      },
      "location": {
        "key": "location",
        "display": "Location",
        "description": "The location where the procedure actually happened.  E.g. a newborn at home, a tracheostomy at a restaurant.",
        "type": "Reference",
        "targetProfile": [
          "Location"
        ]
      },
      "reasonCode": {
        "key": "reasonCode",
        "display": "Reason Code",
        "description": "The coded reason why the procedure was performed. This may be a coded entity of some type, or may simply be present as text.",
        "type": "CodeableConcept",
        "array": true
      },
      "reasonReference": {
        "key": "reasonReference",
        "display": "Reason Reference",
        "description": "The justification of why the procedure was performed.",
        "type": "Reference",
        "targetProfile": [
          "Condition",
          "Observation",
          "Procedure",
          "DiagnosticReport",
          "DocumentReference"
        ],
        "array": true
      },
      "bodySite": {
        "key": "bodySite",
        "display": "Body Site",
        "description": "Detailed and structured anatomical location information. Multiple locations are allowed - e.g. multiple punch biopsies of a lesion.",
        "type": "CodeableConcept",
        "array": true
      },
      "outcome": {
        "key": "outcome",
        "display": "Outcome",
        "description": "The outcome of the procedure - did it resolve the reasons for the procedure being performed?",
        "type": "CodeableConcept"
      },
      "report": {
        "key": "report",
        "display": "Report",
        "description": "This could be a histology result, pathology report, surgical report, etc.",
        "type": "Reference",
        "targetProfile": [
          "DiagnosticReport",
          "DocumentReference",
          "Composition"
        ],
        "array": true
      },
      "complication": {
        "key": "complication",
        "display": "Complication",
        "description": "Any complications that occurred during the procedure, or in the immediate post-performance period. These are generally tracked separately from the notes, which will typically describe the procedure itself rather than any 'post procedure' issues.",
        "type": "CodeableConcept",
        "array": true
      },
      "complicationDetail": {
        "key": "complicationDetail",
        "display": "Complication Detail",
        "description": "Any complications that occurred during the procedure, or in the immediate post-performance period.",
        "type": "Reference",
        "targetProfile": [
          "Condition"
        ],
        "array": true
      },
      "followUp": {
        "key": "followUp",
        "display": "Follow Up",
        "description": "If the procedure required specific follow up - e.g. removal of sutures. The follow up may be represented as a simple note or could potentially be more complex, in which case the CarePlan resource can be used.",
        "type": "CodeableConcept",
        "array": true
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "Any other notes and comments about the procedure.",
        "type": "Annotation",
        "array": true
      },
      "focalDevice": {
        "key": "focalDevice",
        "display": "Focal Device",
        "description": "A device that is implanted, removed or otherwise manipulated (calibration, battery replacement, fitting a prosthesis, attaching a wound-vac, etc.) as a focal portion of the Procedure.",
        "type": "Procedure_FocalDevice",
        "array": true
      },
      "usedReference": {
        "key": "usedReference",
        "display": "Used Reference",
        "description": "Identifies medications, devices and any other substance used as part of the procedure.",
        "type": "Reference",
        "targetProfile": [
          "Device",
          "Medication",
          "Substance"
        ],
        "array": true
      },
      "usedCode": {
        "key": "usedCode",
        "display": "Used Code",
        "description": "Identifies coded items that were used as part of the procedure.",
        "type": "CodeableConcept",
        "array": true
      }
    }
  },
  "Procedure_Performer": {
    "display": "Procedure Performer",
    "description": "The people who performed the procedure",
    "properties": {
      "function": {
        "key": "function",
        "display": "Function",
        "description": "Distinguishes the type of involvement of the performer in the procedure. For example, surgeon, anaesthetist, endoscopist.",
        "type": "CodeableConcept"
      },
      "actor": {
        "key": "actor",
        "display": "Actor",
        "description": "The practitioner who was involved in the procedure.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization",
          "Patient",
          "RelatedPerson",
          "Device"
        ]
      },
      "onBehalfOf": {
        "key": "onBehalfOf",
        "display": "On Behalf Of",
        "description": "The organization the device or practitioner was acting on behalf of.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      }
    },
    "backboneElement": true
  },
  "Procedure_FocalDevice": {
    "display": "Procedure Focal Device",
    "description": "Manipulated, implanted, or removed device",
    "properties": {
      "action": {
        "key": "action",
        "display": "Action",
        "description": "The kind of change that happened to the device during the procedure.",
        "type": "CodeableConcept"
      },
      "manipulated": {
        "key": "manipulated",
        "display": "Manipulated",
        "description": "The device that was manipulated (changed) during the procedure.",
        "type": "Reference",
        "targetProfile": [
          "Device"
        ]
      }
    },
    "backboneElement": true
  },
  "Provenance": {
    "display": "Provenance",
    "description": "Provenance of a resource is a record that describes entities and processes involved in producing and delivering or otherwise influencing that resource. Provenance provides a critical foundation for assessing authenticity, enabling trust, and allowing reproducibility. Provenance assertions are a form of contextual metadata and can themselves become important records with their own provenance. Provenance statement indicates clinical significance in terms of confidence in authenticity, reliability, and trustworthiness, integrity, and stage in lifecycle (e.g. Document Completion - has the artifact been legally authenticated), all of which may impact security, privacy, and trust policies.",
    "properties": {
      "target": {
        "key": "target",
        "display": "Target",
        "description": "The Reference(s) that were generated or updated by  the activity described in this resource. A provenance can point to more than one target if multiple resources were created/updated by the same activity.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ],
        "array": true
      },
      "occurred[x]": {
        "key": "occurred[x]",
        "display": "Occurred[x]",
        "description": "The period during which the activity occurred.",
        "type": "Period"
      },
      "recorded": {
        "key": "recorded",
        "display": "Recorded",
        "description": "The instant of time at which the activity was recorded.",
        "type": "instant"
      },
      "policy": {
        "key": "policy",
        "display": "Policy",
        "description": "Policy or plan the activity was defined by. Typically, a single activity may have multiple applicable policy documents, such as patient consent, guarantor funding, etc.",
        "type": "uri",
        "array": true
      },
      "location": {
        "key": "location",
        "display": "Location",
        "description": "Where the activity occurred, if relevant.",
        "type": "Reference",
        "targetProfile": [
          "Location"
        ]
      },
      "reason": {
        "key": "reason",
        "display": "Reason",
        "description": "The reason that the activity was taking place.",
        "type": "CodeableConcept",
        "array": true
      },
      "activity": {
        "key": "activity",
        "display": "Activity",
        "description": "An activity is something that occurs over a period of time and acts upon or with entities; it may include consuming, processing, transforming, modifying, relocating, using, or generating entities.",
        "type": "CodeableConcept"
      },
      "agent": {
        "key": "agent",
        "display": "Agent",
        "description": "An actor taking a role in an activity  for which it can be assigned some degree of responsibility for the activity taking place.",
        "type": "Provenance_Agent",
        "array": true
      },
      "entity": {
        "key": "entity",
        "display": "Entity",
        "description": "An entity used in this activity.",
        "type": "Provenance_Entity",
        "array": true
      },
      "signature": {
        "key": "signature",
        "display": "Signature",
        "description": "A digital signature on the target Reference(s). The signer should match a Provenance.agent. The purpose of the signature is indicated.",
        "type": "Signature",
        "array": true
      }
    }
  },
  "Provenance_Agent": {
    "display": "Provenance Agent",
    "description": "Actor involved",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The participation the agent had with respect to the activity.",
        "type": "CodeableConcept"
      },
      "role": {
        "key": "role",
        "display": "Role",
        "description": "The function of the agent with respect to the activity. The security role enabling the agent with respect to the activity.",
        "type": "CodeableConcept",
        "array": true
      },
      "who": {
        "key": "who",
        "display": "Who",
        "description": "The individual, device or organization that participated in the event.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "RelatedPerson",
          "Patient",
          "Device",
          "Organization"
        ]
      },
      "onBehalfOf": {
        "key": "onBehalfOf",
        "display": "On Behalf Of",
        "description": "The individual, device, or organization for whom the change was made.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "RelatedPerson",
          "Patient",
          "Device",
          "Organization"
        ]
      }
    },
    "backboneElement": true
  },
  "Provenance_Entity": {
    "display": "Provenance Entity",
    "description": "An entity used in this activity",
    "properties": {
      "role": {
        "key": "role",
        "display": "Role",
        "description": "How the entity was used during the activity.",
        "type": "enum",
        "enumValues": [
          "derivation",
          "revision",
          "quotation",
          "source",
          "removal"
        ]
      },
      "what": {
        "key": "what",
        "display": "What",
        "description": "Identity of the  Entity used. May be a logical or physical uri and maybe absolute or relative.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ]
      },
      "agent": {
        "key": "agent",
        "display": "Agent",
        "description": "The entity is attributed to an agent to express the agent's responsibility for that entity, possibly along with other agents. This description can be understood as shorthand for saying that the agent was responsible for the activity which generated the entity.",
        "type": "UNKNOWN"
      }
    },
    "backboneElement": true
  },
  "Questionnaire": {
    "display": "Questionnaire",
    "description": "A structured set of questions intended to guide the collection of answers from end-users. Questionnaires provide detailed control over order, presentation, phraseology and grouping to allow coherent, consistent data collection.",
    "properties": {
      "url": {
        "key": "url",
        "display": "Url",
        "description": "An absolute URI that is used to identify this questionnaire when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this questionnaire is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the questionnaire is stored on different servers.",
        "type": "uri"
      },
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "A formal identifier that is used to identify this questionnaire when it is represented in other formats, or referenced in a specification, model, design or an instance.",
        "type": "Identifier",
        "array": true
      },
      "version": {
        "key": "version",
        "display": "Version",
        "description": "The identifier that is used to identify this version of the questionnaire when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the questionnaire author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
        "type": "string"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A natural language name identifying the questionnaire. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
        "type": "string"
      },
      "title": {
        "key": "title",
        "display": "Title",
        "description": "A short, descriptive, user-friendly title for the questionnaire.",
        "type": "string"
      },
      "derivedFrom": {
        "key": "derivedFrom",
        "display": "Derived From",
        "description": "The URL of a Questionnaire that this Questionnaire is based on.",
        "type": "canonical",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of this questionnaire. Enables tracking the life-cycle of the content.",
        "type": "enum",
        "enumValues": [
          "draft",
          "active",
          "retired",
          "unknown"
        ]
      },
      "experimental": {
        "key": "experimental",
        "display": "Experimental",
        "description": "A Boolean value to indicate that this questionnaire is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
        "type": "boolean"
      },
      "subjectType": {
        "key": "subjectType",
        "display": "Subject Type",
        "description": "The types of subjects that can be the subject of responses created for the questionnaire.",
        "type": "enum",
        "enumValues": [
          "Resource that can be subject of QuestionnaireResponse"
        ],
        "array": true
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "The date  (and optionally time) when the questionnaire was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the questionnaire changes.",
        "type": "dateTime"
      },
      "publisher": {
        "key": "publisher",
        "display": "Publisher",
        "description": "The name of the organization or individual that published the questionnaire.",
        "type": "string"
      },
      "contact": {
        "key": "contact",
        "display": "Contact",
        "description": "Contact details to assist a user in finding and communicating with the publisher.",
        "type": "ContactDetail",
        "array": true
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A free text natural language description of the questionnaire from a consumer's perspective.",
        "type": "markdown"
      },
      "useContext": {
        "key": "useContext",
        "display": "Use Context",
        "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate questionnaire instances.",
        "type": "UsageContext",
        "array": true
      },
      "jurisdiction": {
        "key": "jurisdiction",
        "display": "Jurisdiction",
        "description": "A legal or geographic region in which the questionnaire is intended to be used.",
        "type": "CodeableConcept",
        "array": true
      },
      "purpose": {
        "key": "purpose",
        "display": "Purpose",
        "description": "Explanation of why this questionnaire is needed and why it has been designed as it has.",
        "type": "markdown"
      },
      "copyright": {
        "key": "copyright",
        "display": "Copyright",
        "description": "A copyright statement relating to the questionnaire and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the questionnaire.",
        "type": "markdown"
      },
      "approvalDate": {
        "key": "approvalDate",
        "display": "Approval Date",
        "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
        "type": "date"
      },
      "lastReviewDate": {
        "key": "lastReviewDate",
        "display": "Last Review Date",
        "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
        "type": "date"
      },
      "effectivePeriod": {
        "key": "effectivePeriod",
        "display": "Effective Period",
        "description": "The period during which the questionnaire content was or is planned to be in active use.",
        "type": "Period"
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "An identifier for this question or group of questions in a particular terminology such as LOINC.",
        "type": "Coding",
        "array": true
      },
      "item": {
        "key": "item",
        "display": "Item",
        "description": "A particular question, question grouping or display text that is part of the questionnaire.",
        "type": "Questionnaire_Item",
        "array": true
      }
    }
  },
  "Questionnaire_Item": {
    "display": "Questionnaire Item",
    "description": "Questions and sections within the Questionnaire",
    "properties": {
      "linkId": {
        "key": "linkId",
        "display": "Link Id",
        "description": "An identifier that is unique within the Questionnaire allowing linkage to the equivalent item in a QuestionnaireResponse resource.",
        "type": "string"
      },
      "definition": {
        "key": "definition",
        "display": "Definition",
        "description": "This element is a URI that refers to an [ElementDefinition](elementdefinition.html) that provides information about this item, including information that might otherwise be included in the instance of the Questionnaire resource. A detailed description of the construction of the URI is shown in Comments, below. If this element is present then the following element values MAY be derived from the Element Definition if the corresponding elements of this Questionnaire resource instance have no value:\n\n* code (ElementDefinition.code) \n* type (ElementDefinition.type) \n* required (ElementDefinition.min) \n* repeats (ElementDefinition.max) \n* maxLength (ElementDefinition.maxLength) \n* answerValueSet (ElementDefinition.binding)\n* options (ElementDefinition.binding).",
        "type": "uri"
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "A terminology code that corresponds to this group or question (e.g. a code from LOINC, which defines many questions and answers).",
        "type": "Coding",
        "array": true
      },
      "prefix": {
        "key": "prefix",
        "display": "Prefix",
        "description": "A short label for a particular group, question or set of display text within the questionnaire used for reference by the individual completing the questionnaire.",
        "type": "string"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The type of questionnaire item this is - whether text for display, a grouping of other items or a particular type of data to be captured (string, integer, coded choice, etc.).",
        "type": "enum",
        "enumValues": [
          "group",
          "display",
          "boolean",
          "decimal",
          "integer",
          "date",
          "dateTime +"
        ]
      },
      "enableWhen": {
        "key": "enableWhen",
        "display": "Enable When",
        "description": "A constraint indicating that this item should only be enabled (displayed/allow answers to be captured) when the specified condition is true.",
        "type": "Questionnaire_Item_EnableWhen",
        "array": true
      },
      "enableBehavior": {
        "key": "enableBehavior",
        "display": "Enable Behavior",
        "description": "Controls how multiple enableWhen values are interpreted -  whether all or any must be true.",
        "type": "enum",
        "enumValues": [
          "all",
          "any"
        ]
      },
      "required": {
        "key": "required",
        "display": "Required",
        "description": "An indication, if true, that the item must be present in a \"completed\" QuestionnaireResponse.  If false, the item may be skipped when answering the questionnaire.",
        "type": "boolean"
      },
      "repeats": {
        "key": "repeats",
        "display": "Repeats",
        "description": "An indication, if true, that the item may occur multiple times in the response, collecting multiple answers for questions or multiple sets of answers for groups.",
        "type": "boolean"
      },
      "readOnly": {
        "key": "readOnly",
        "display": "Read Only",
        "description": "An indication, when true, that the value cannot be changed by a human respondent to the Questionnaire.",
        "type": "boolean"
      },
      "maxLength": {
        "key": "maxLength",
        "display": "Max Length",
        "description": "The maximum number of characters that are permitted in the answer to be considered a \"valid\" QuestionnaireResponse.",
        "type": "integer"
      },
      "answerValueSet": {
        "key": "answerValueSet",
        "display": "Answer Value Set",
        "description": "A reference to a value set containing a list of codes representing permitted answers for a \"choice\" or \"open-choice\" question.",
        "type": "canonical"
      },
      "answerOption": {
        "key": "answerOption",
        "display": "Answer Option",
        "description": "One of the permitted answers for a \"choice\" or \"open-choice\" question.",
        "type": "Questionnaire_Item_AnswerOption",
        "array": true
      },
      "initial": {
        "key": "initial",
        "display": "Initial",
        "description": "One or more values that should be pre-populated in the answer when initially rendering the questionnaire for user input.",
        "type": "Questionnaire_Item_Initial",
        "array": true
      },
      "item": {
        "key": "item",
        "display": "Item",
        "description": "Text, questions and other groups to be nested beneath a question or group.",
        "type": "UNKNOWN"
      }
    },
    "backboneElement": true
  },
  "Questionnaire_Item_EnableWhen": {
    "display": "Questionnaire Item_ Enable When",
    "description": "Only allow data when",
    "properties": {
      "question": {
        "key": "question",
        "display": "Question",
        "description": "The linkId for the question whose answer (or lack of answer) governs whether this item is enabled.",
        "type": "string"
      },
      "operator": {
        "key": "operator",
        "display": "Operator",
        "description": "Specifies the criteria by which the question is enabled.",
        "type": "enum",
        "enumValues": [
          "exists",
          "=",
          "!=",
          ">",
          "<",
          ">=",
          "<="
        ]
      },
      "answer[x]": {
        "key": "answer[x]",
        "display": "Answer[x]",
        "description": "A value that the referenced question is tested using the specified operator in order for the item to be enabled.",
        "type": "boolean"
      }
    },
    "backboneElement": true
  },
  "Questionnaire_Item_AnswerOption": {
    "display": "Questionnaire Item_ Answer Option",
    "description": "Permitted answer",
    "properties": {
      "value[x]": {
        "key": "value[x]",
        "display": "Value[x]",
        "description": "A potential answer that's allowed as the answer to this question.",
        "type": "integer"
      },
      "initialSelected": {
        "key": "initialSelected",
        "display": "Initial Selected",
        "description": "Indicates whether the answer value is selected when the list of possible answers is initially shown.",
        "type": "boolean"
      }
    },
    "backboneElement": true
  },
  "Questionnaire_Item_Initial": {
    "display": "Questionnaire Item_ Initial",
    "description": "Initial value(s) when item is first rendered",
    "properties": {
      "value[x]": {
        "key": "value[x]",
        "display": "Value[x]",
        "description": "The actual value to for an initial answer.",
        "type": "boolean"
      }
    },
    "backboneElement": true
  },
  "QuestionnaireResponse": {
    "display": "QuestionnaireResponse",
    "description": "A structured set of questions and their answers. The questions are ordered and grouped into coherent subsets, corresponding to the structure of the grouping of the questionnaire being responded to.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "A business identifier assigned to a particular completed (or partially completed) questionnaire.",
        "type": "Identifier"
      },
      "basedOn": {
        "key": "basedOn",
        "display": "Based On",
        "description": "The order, proposal or plan that is fulfilled in whole or in part by this QuestionnaireResponse.  For example, a ServiceRequest seeking an intake assessment or a decision support recommendation to assess for post-partum depression.",
        "type": "Reference",
        "targetProfile": [
          "CarePlan",
          "ServiceRequest"
        ],
        "array": true
      },
      "partOf": {
        "key": "partOf",
        "display": "Part Of",
        "description": "A procedure or observation that this questionnaire was performed as part of the execution of.  For example, the surgery a checklist was executed as part of.",
        "type": "Reference",
        "targetProfile": [
          "Observation",
          "Procedure"
        ],
        "array": true
      },
      "questionnaire": {
        "key": "questionnaire",
        "display": "Questionnaire",
        "description": "The Questionnaire that defines and organizes the questions for which answers are being provided.",
        "type": "canonical"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The position of the questionnaire response within its overall lifecycle.",
        "type": "enum",
        "enumValues": [
          "in-progress",
          "completed",
          "amended",
          "entered-in-error",
          "stopped"
        ]
      },
      "subject": {
        "key": "subject",
        "display": "Subject",
        "description": "The subject of the questionnaire response.  This could be a patient, organization, practitioner, device, etc.  This is who/what the answers apply to, but is not necessarily the source of information.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ]
      },
      "encounter": {
        "key": "encounter",
        "display": "Encounter",
        "description": "The Encounter during which this questionnaire response was created or to which the creation of this record is tightly associated.",
        "type": "Reference",
        "targetProfile": [
          "Encounter"
        ]
      },
      "authored": {
        "key": "authored",
        "display": "Authored",
        "description": "The date and/or time that this set of answers were last changed.",
        "type": "dateTime"
      },
      "author": {
        "key": "author",
        "display": "Author",
        "description": "Person who received the answers to the questions in the QuestionnaireResponse and recorded them in the system.",
        "type": "Reference",
        "targetProfile": [
          "Device",
          "Practitioner",
          "PractitionerRole",
          "Patient",
          "RelatedPerson",
          "Organization"
        ]
      },
      "source": {
        "key": "source",
        "display": "Source",
        "description": "The person who answered the questions about the subject.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Practitioner",
          "PractitionerRole",
          "RelatedPerson"
        ]
      },
      "item": {
        "key": "item",
        "display": "Item",
        "description": "A group or question item from the original questionnaire for which answers are provided.",
        "type": "QuestionnaireResponse_Item",
        "array": true
      }
    }
  },
  "QuestionnaireResponse_Item": {
    "display": "Questionnaire Response Item",
    "description": "Groups and questions",
    "properties": {
      "linkId": {
        "key": "linkId",
        "display": "Link Id",
        "description": "The item from the Questionnaire that corresponds to this item in the QuestionnaireResponse resource.",
        "type": "string"
      },
      "definition": {
        "key": "definition",
        "display": "Definition",
        "description": "A reference to an [ElementDefinition](elementdefinition.html) that provides the details for the item.",
        "type": "uri"
      },
      "answer": {
        "key": "answer",
        "display": "Answer",
        "description": "The respondent's answer(s) to the question.",
        "type": "QuestionnaireResponse_Item_Answer",
        "array": true
      },
      "item": {
        "key": "item",
        "display": "Item",
        "description": "Questions or sub-groups nested beneath a question or group.",
        "type": "UNKNOWN"
      }
    },
    "backboneElement": true
  },
  "QuestionnaireResponse_Item_Answer": {
    "display": "Questionnaire Response Item_ Answer",
    "description": "The response(s) to the question",
    "properties": {
      "value[x]": {
        "key": "value[x]",
        "display": "Value[x]",
        "description": "The answer (or one of the answers) provided by the respondent to the question.",
        "type": "boolean"
      },
      "item": {
        "key": "item",
        "display": "Item",
        "description": "Nested groups and/or questions found within this particular answer.",
        "type": "UNKNOWN"
      }
    },
    "backboneElement": true
  },
  "RelatedPerson": {
    "display": "RelatedPerson",
    "description": "Information about a person that is involved in the care for a patient, but who is not the target of healthcare, nor has a formal responsibility in the care process.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Identifier for a person within a particular scope.",
        "type": "Identifier",
        "array": true
      },
      "active": {
        "key": "active",
        "display": "Active",
        "description": "Whether this related person record is in active use.",
        "type": "boolean"
      },
      "patient": {
        "key": "patient",
        "display": "Patient",
        "description": "The patient this person is related to.",
        "type": "Reference",
        "targetProfile": [
          "Patient"
        ]
      },
      "relationship": {
        "key": "relationship",
        "display": "Relationship",
        "description": "The nature of the relationship between a patient and the related person.",
        "type": "CodeableConcept",
        "array": true
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A name associated with the person.",
        "type": "HumanName",
        "array": true
      },
      "telecom": {
        "key": "telecom",
        "display": "Telecom",
        "description": "A contact detail for the person, e.g. a telephone number or an email address.",
        "type": "ContactPoint",
        "array": true
      },
      "gender": {
        "key": "gender",
        "display": "Gender",
        "description": "Administrative Gender - the gender that the person is considered to have for administration and record keeping purposes.",
        "type": "enum",
        "enumValues": [
          "male",
          "female",
          "other",
          "unknown"
        ]
      },
      "birthDate": {
        "key": "birthDate",
        "display": "Birth Date",
        "description": "The date on which the related person was born.",
        "type": "date"
      },
      "address": {
        "key": "address",
        "display": "Address",
        "description": "Address where the related person can be contacted or visited.",
        "type": "Address",
        "array": true
      },
      "photo": {
        "key": "photo",
        "display": "Photo",
        "description": "Image of the person.",
        "type": "Attachment",
        "array": true
      },
      "period": {
        "key": "period",
        "display": "Period",
        "description": "The period of time during which this relationship is or was active. If there are no dates defined, then the interval is unknown.",
        "type": "Period"
      },
      "communication": {
        "key": "communication",
        "display": "Communication",
        "description": "A language which may be used to communicate with about the patient's health.",
        "type": "RelatedPerson_Communication",
        "array": true
      }
    }
  },
  "RelatedPerson_Communication": {
    "display": "Related Person Communication",
    "description": "A language which may be used to communicate with about the patient's health",
    "properties": {
      "language": {
        "key": "language",
        "display": "Language",
        "description": "The ISO-639-1 alpha 2 code in lower case for the language, optionally followed by a hyphen and the ISO-3166-1 alpha 2 code for the region in upper case; e.g. \"en\" for English, or \"en-US\" for American English versus \"en-EN\" for England English.",
        "type": "CodeableConcept"
      },
      "preferred": {
        "key": "preferred",
        "display": "Preferred",
        "description": "Indicates whether or not the patient prefers this language (over other languages he masters up a certain level).",
        "type": "boolean"
      }
    },
    "backboneElement": true
  },
  "RequestGroup": {
    "display": "RequestGroup",
    "description": "A group of related requests that can be used to capture intended activities that have inter-dependencies such as \"give this medication after that one\".",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Allows a service to provide a unique, business identifier for the request.",
        "type": "Identifier",
        "array": true
      },
      "instantiatesCanonical": {
        "key": "instantiatesCanonical",
        "display": "Instantiates Canonical",
        "description": "A canonical URL referencing a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this request.",
        "type": "canonical",
        "array": true
      },
      "instantiatesUri": {
        "key": "instantiatesUri",
        "display": "Instantiates Uri",
        "description": "A URL referencing an externally defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this request.",
        "type": "uri",
        "array": true
      },
      "basedOn": {
        "key": "basedOn",
        "display": "Based On",
        "description": "A plan, proposal or order that is fulfilled in whole or in part by this request.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ],
        "array": true
      },
      "replaces": {
        "key": "replaces",
        "display": "Replaces",
        "description": "Completed or terminated request(s) whose function is taken by this new request.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ],
        "array": true
      },
      "groupIdentifier": {
        "key": "groupIdentifier",
        "display": "Group Identifier",
        "description": "A shared identifier common to all requests that were authorized more or less simultaneously by a single author, representing the identifier of the requisition, prescription or similar form.",
        "type": "Identifier"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The current state of the request. For request groups, the status reflects the status of all the requests in the group.",
        "type": "enum",
        "enumValues": [
          "draft",
          "active",
          "on-hold",
          "revoked",
          "completed",
          "entered-in-error",
          "unknown"
        ]
      },
      "intent": {
        "key": "intent",
        "display": "Intent",
        "description": "Indicates the level of authority/intentionality associated with the request and where the request fits into the workflow chain.",
        "type": "enum",
        "enumValues": [
          "proposal",
          "plan",
          "directive",
          "order",
          "original-order",
          "reflex-order",
          "filler-order",
          "instance-order",
          "option"
        ]
      },
      "priority": {
        "key": "priority",
        "display": "Priority",
        "description": "Indicates how quickly the request should be addressed with respect to other requests.",
        "type": "enum",
        "enumValues": [
          "routine",
          "urgent",
          "asap",
          "stat"
        ]
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "A code that identifies what the overall request group is.",
        "type": "CodeableConcept"
      },
      "subject": {
        "key": "subject",
        "display": "Subject",
        "description": "The subject for which the request group was created.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Group"
        ]
      },
      "encounter": {
        "key": "encounter",
        "display": "Encounter",
        "description": "Describes the context of the request group, if any.",
        "type": "Reference",
        "targetProfile": [
          "Encounter"
        ]
      },
      "authoredOn": {
        "key": "authoredOn",
        "display": "Authored On",
        "description": "Indicates when the request group was created.",
        "type": "dateTime"
      },
      "author": {
        "key": "author",
        "display": "Author",
        "description": "Provides a reference to the author of the request group.",
        "type": "Reference",
        "targetProfile": [
          "Device",
          "Practitioner",
          "PractitionerRole"
        ]
      },
      "reasonCode": {
        "key": "reasonCode",
        "display": "Reason Code",
        "description": "Describes the reason for the request group in coded or textual form.",
        "type": "CodeableConcept",
        "array": true
      },
      "reasonReference": {
        "key": "reasonReference",
        "display": "Reason Reference",
        "description": "Indicates another resource whose existence justifies this request group.",
        "type": "Reference",
        "targetProfile": [
          "Condition",
          "Observation",
          "DiagnosticReport",
          "DocumentReference"
        ],
        "array": true
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "Provides a mechanism to communicate additional information about the response.",
        "type": "Annotation",
        "array": true
      },
      "action": {
        "key": "action",
        "display": "Action",
        "description": "The actions, if any, produced by the evaluation of the artifact.",
        "type": "RequestGroup_Action",
        "array": true
      }
    }
  },
  "RequestGroup_Action": {
    "display": "Request Group Action",
    "description": "Proposed actions, if any",
    "properties": {
      "prefix": {
        "key": "prefix",
        "display": "Prefix",
        "description": "A user-visible prefix for the action.",
        "type": "string"
      },
      "title": {
        "key": "title",
        "display": "Title",
        "description": "The title of the action displayed to a user.",
        "type": "string"
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A short description of the action used to provide a summary to display to the user.",
        "type": "string"
      },
      "textEquivalent": {
        "key": "textEquivalent",
        "display": "Text Equivalent",
        "description": "A text equivalent of the action to be performed. This provides a human-interpretable description of the action when the definition is consumed by a system that might not be capable of interpreting it dynamically.",
        "type": "string"
      },
      "priority": {
        "key": "priority",
        "display": "Priority",
        "description": "Indicates how quickly the action should be addressed with respect to other actions.",
        "type": "enum",
        "enumValues": [
          "routine",
          "urgent",
          "asap",
          "stat"
        ]
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "A code that provides meaning for the action or action group. For example, a section may have a LOINC code for a section of a documentation template.",
        "type": "CodeableConcept",
        "array": true
      },
      "documentation": {
        "key": "documentation",
        "display": "Documentation",
        "description": "Didactic or other informational resources associated with the action that can be provided to the CDS recipient. Information resources can include inline text commentary and links to web resources.",
        "type": "RelatedArtifact",
        "array": true
      },
      "condition": {
        "key": "condition",
        "display": "Condition",
        "description": "An expression that describes applicability criteria, or start/stop conditions for the action.",
        "type": "RequestGroup_Action_Condition",
        "array": true
      },
      "relatedAction": {
        "key": "relatedAction",
        "display": "Related Action",
        "description": "A relationship to another action such as \"before\" or \"30-60 minutes after start of\".",
        "type": "RequestGroup_Action_RelatedAction",
        "array": true
      },
      "timing[x]": {
        "key": "timing[x]",
        "display": "Timing[x]",
        "description": "An optional value describing when the action should be performed.",
        "type": "dateTime"
      },
      "participant": {
        "key": "participant",
        "display": "Participant",
        "description": "The participant that should perform or be responsible for this action.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Practitioner",
          "PractitionerRole",
          "RelatedPerson",
          "Device"
        ],
        "array": true
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The type of action to perform (create, update, remove).",
        "type": "CodeableConcept"
      },
      "groupingBehavior": {
        "key": "groupingBehavior",
        "display": "Grouping Behavior",
        "description": "Defines the grouping behavior for the action and its children.",
        "type": "enum",
        "enumValues": [
          "visual-group",
          "logical-group",
          "sentence-group"
        ]
      },
      "selectionBehavior": {
        "key": "selectionBehavior",
        "display": "Selection Behavior",
        "description": "Defines the selection behavior for the action and its children.",
        "type": "enum",
        "enumValues": [
          "any",
          "all",
          "all-or-none",
          "exactly-one",
          "at-most-one",
          "one-or-more"
        ]
      },
      "requiredBehavior": {
        "key": "requiredBehavior",
        "display": "Required Behavior",
        "description": "Defines expectations around whether an action is required.",
        "type": "enum",
        "enumValues": [
          "must",
          "could",
          "must-unless-documented"
        ]
      },
      "precheckBehavior": {
        "key": "precheckBehavior",
        "display": "Precheck Behavior",
        "description": "Defines whether the action should usually be preselected.",
        "type": "enum",
        "enumValues": [
          "yes",
          "no"
        ]
      },
      "cardinalityBehavior": {
        "key": "cardinalityBehavior",
        "display": "Cardinality Behavior",
        "description": "Defines whether the action can be selected multiple times.",
        "type": "enum",
        "enumValues": [
          "single",
          "multiple"
        ]
      },
      "resource": {
        "key": "resource",
        "display": "Resource",
        "description": "The resource that is the target of the action (e.g. CommunicationRequest).",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ]
      },
      "action": {
        "key": "action",
        "display": "Action",
        "description": "Sub actions.",
        "type": "UNKNOWN"
      }
    },
    "backboneElement": true
  },
  "RequestGroup_Action_Condition": {
    "display": "Request Group Action_ Condition",
    "description": "Whether or not the action is applicable",
    "properties": {
      "kind": {
        "key": "kind",
        "display": "Kind",
        "description": "The kind of condition.",
        "type": "enum",
        "enumValues": [
          "applicability",
          "start",
          "stop"
        ]
      },
      "expression": {
        "key": "expression",
        "display": "Expression",
        "description": "An expression that returns true or false, indicating whether or not the condition is satisfied.",
        "type": "Expression"
      }
    },
    "backboneElement": true
  },
  "RequestGroup_Action_RelatedAction": {
    "display": "Request Group Action_ Related Action",
    "description": "Relationship to another action",
    "properties": {
      "actionId": {
        "key": "actionId",
        "display": "Action Id",
        "description": "The element id of the action this is related to.",
        "type": "id"
      },
      "relationship": {
        "key": "relationship",
        "display": "Relationship",
        "description": "The relationship of this action to the related action.",
        "type": "enum",
        "enumValues": [
          "before-start",
          "before",
          "before-end",
          "concurrent-with-start",
          "concurrent",
          "concurrent-with-end",
          "after-start",
          "after",
          "after-end"
        ]
      },
      "offset[x]": {
        "key": "offset[x]",
        "display": "Offset[x]",
        "description": "A duration or range of durations to apply to the relationship. For example, 30-60 minutes before.",
        "type": "Duration"
      }
    },
    "backboneElement": true
  },
  "ResearchDefinition": {
    "display": "ResearchDefinition",
    "description": "The ResearchDefinition resource describes the conditional state (population and any exposures being compared within the population) and outcome (if specified) that the knowledge (evidence, assertion, recommendation) is about.",
    "properties": {
      "url": {
        "key": "url",
        "display": "Url",
        "description": "An absolute URI that is used to identify this research definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this research definition is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the research definition is stored on different servers.",
        "type": "uri"
      },
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "A formal identifier that is used to identify this research definition when it is represented in other formats, or referenced in a specification, model, design or an instance.",
        "type": "Identifier",
        "array": true
      },
      "version": {
        "key": "version",
        "display": "Version",
        "description": "The identifier that is used to identify this version of the research definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the research definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence. To provide a version consistent with the Decision Support Service specification, use the format Major.Minor.Revision (e.g. 1.0.0). For more information on versioning knowledge assets, refer to the Decision Support Service specification. Note that a version is required for non-experimental active artifacts.",
        "type": "string"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A natural language name identifying the research definition. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
        "type": "string"
      },
      "title": {
        "key": "title",
        "display": "Title",
        "description": "A short, descriptive, user-friendly title for the research definition.",
        "type": "string"
      },
      "shortTitle": {
        "key": "shortTitle",
        "display": "Short Title",
        "description": "The short title provides an alternate title for use in informal descriptive contexts where the full, formal title is not necessary.",
        "type": "string"
      },
      "subtitle": {
        "key": "subtitle",
        "display": "Subtitle",
        "description": "An explanatory or alternate title for the ResearchDefinition giving additional information about its content.",
        "type": "string"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of this research definition. Enables tracking the life-cycle of the content.",
        "type": "enum",
        "enumValues": [
          "draft",
          "active",
          "retired",
          "unknown"
        ]
      },
      "experimental": {
        "key": "experimental",
        "display": "Experimental",
        "description": "A Boolean value to indicate that this research definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
        "type": "boolean"
      },
      "subject[x]": {
        "key": "subject[x]",
        "display": "Subject[x]",
        "description": "The intended subjects for the ResearchDefinition. If this element is not provided, a Patient subject is assumed, but the subject of the ResearchDefinition can be anything.",
        "type": "CodeableConcept"
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "The date  (and optionally time) when the research definition was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the research definition changes.",
        "type": "dateTime"
      },
      "publisher": {
        "key": "publisher",
        "display": "Publisher",
        "description": "The name of the organization or individual that published the research definition.",
        "type": "string"
      },
      "contact": {
        "key": "contact",
        "display": "Contact",
        "description": "Contact details to assist a user in finding and communicating with the publisher.",
        "type": "ContactDetail",
        "array": true
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A free text natural language description of the research definition from a consumer's perspective.",
        "type": "markdown"
      },
      "comment": {
        "key": "comment",
        "display": "Comment",
        "description": "A human-readable string to clarify or explain concepts about the resource.",
        "type": "string",
        "array": true
      },
      "useContext": {
        "key": "useContext",
        "display": "Use Context",
        "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate research definition instances.",
        "type": "UsageContext",
        "array": true
      },
      "jurisdiction": {
        "key": "jurisdiction",
        "display": "Jurisdiction",
        "description": "A legal or geographic region in which the research definition is intended to be used.",
        "type": "CodeableConcept",
        "array": true
      },
      "purpose": {
        "key": "purpose",
        "display": "Purpose",
        "description": "Explanation of why this research definition is needed and why it has been designed as it has.",
        "type": "markdown"
      },
      "usage": {
        "key": "usage",
        "display": "Usage",
        "description": "A detailed description, from a clinical perspective, of how the ResearchDefinition is used.",
        "type": "string"
      },
      "copyright": {
        "key": "copyright",
        "display": "Copyright",
        "description": "A copyright statement relating to the research definition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the research definition.",
        "type": "markdown"
      },
      "approvalDate": {
        "key": "approvalDate",
        "display": "Approval Date",
        "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
        "type": "date"
      },
      "lastReviewDate": {
        "key": "lastReviewDate",
        "display": "Last Review Date",
        "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
        "type": "date"
      },
      "effectivePeriod": {
        "key": "effectivePeriod",
        "display": "Effective Period",
        "description": "The period during which the research definition content was or is planned to be in active use.",
        "type": "Period"
      },
      "topic": {
        "key": "topic",
        "display": "Topic",
        "description": "Descriptive topics related to the content of the ResearchDefinition. Topics provide a high-level categorization grouping types of ResearchDefinitions that can be useful for filtering and searching.",
        "type": "CodeableConcept",
        "array": true
      },
      "author": {
        "key": "author",
        "display": "Author",
        "description": "An individiual or organization primarily involved in the creation and maintenance of the content.",
        "type": "ContactDetail",
        "array": true
      },
      "editor": {
        "key": "editor",
        "display": "Editor",
        "description": "An individual or organization primarily responsible for internal coherence of the content.",
        "type": "ContactDetail",
        "array": true
      },
      "reviewer": {
        "key": "reviewer",
        "display": "Reviewer",
        "description": "An individual or organization primarily responsible for review of some aspect of the content.",
        "type": "ContactDetail",
        "array": true
      },
      "endorser": {
        "key": "endorser",
        "display": "Endorser",
        "description": "An individual or organization responsible for officially endorsing the content for use in some setting.",
        "type": "ContactDetail",
        "array": true
      },
      "relatedArtifact": {
        "key": "relatedArtifact",
        "display": "Related Artifact",
        "description": "Related artifacts such as additional documentation, justification, or bibliographic references.",
        "type": "RelatedArtifact",
        "array": true
      },
      "library": {
        "key": "library",
        "display": "Library",
        "description": "A reference to a Library resource containing the formal logic used by the ResearchDefinition.",
        "type": "canonical",
        "array": true
      },
      "population": {
        "key": "population",
        "display": "Population",
        "description": "A reference to a ResearchElementDefinition resource that defines the population for the research.",
        "type": "Reference",
        "targetProfile": [
          "ResearchElementDefinition"
        ]
      },
      "exposure": {
        "key": "exposure",
        "display": "Exposure",
        "description": "A reference to a ResearchElementDefinition resource that defines the exposure for the research.",
        "type": "Reference",
        "targetProfile": [
          "ResearchElementDefinition"
        ]
      },
      "exposureAlternative": {
        "key": "exposureAlternative",
        "display": "Exposure Alternative",
        "description": "A reference to a ResearchElementDefinition resource that defines the exposureAlternative for the research.",
        "type": "Reference",
        "targetProfile": [
          "ResearchElementDefinition"
        ]
      },
      "outcome": {
        "key": "outcome",
        "display": "Outcome",
        "description": "A reference to a ResearchElementDefinition resomece that defines the outcome for the research.",
        "type": "Reference",
        "targetProfile": [
          "ResearchElementDefinition"
        ]
      }
    }
  },
  "ResearchElementDefinition": {
    "display": "ResearchElementDefinition",
    "description": "The ResearchElementDefinition resource describes a \"PICO\" element that knowledge (evidence, assertion, recommendation) is about.",
    "properties": {
      "url": {
        "key": "url",
        "display": "Url",
        "description": "An absolute URI that is used to identify this research element definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this research element definition is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the research element definition is stored on different servers.",
        "type": "uri"
      },
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "A formal identifier that is used to identify this research element definition when it is represented in other formats, or referenced in a specification, model, design or an instance.",
        "type": "Identifier",
        "array": true
      },
      "version": {
        "key": "version",
        "display": "Version",
        "description": "The identifier that is used to identify this version of the research element definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the research element definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence. To provide a version consistent with the Decision Support Service specification, use the format Major.Minor.Revision (e.g. 1.0.0). For more information on versioning knowledge assets, refer to the Decision Support Service specification. Note that a version is required for non-experimental active artifacts.",
        "type": "string"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A natural language name identifying the research element definition. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
        "type": "string"
      },
      "title": {
        "key": "title",
        "display": "Title",
        "description": "A short, descriptive, user-friendly title for the research element definition.",
        "type": "string"
      },
      "shortTitle": {
        "key": "shortTitle",
        "display": "Short Title",
        "description": "The short title provides an alternate title for use in informal descriptive contexts where the full, formal title is not necessary.",
        "type": "string"
      },
      "subtitle": {
        "key": "subtitle",
        "display": "Subtitle",
        "description": "An explanatory or alternate title for the ResearchElementDefinition giving additional information about its content.",
        "type": "string"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of this research element definition. Enables tracking the life-cycle of the content.",
        "type": "enum",
        "enumValues": [
          "draft",
          "active",
          "retired",
          "unknown"
        ]
      },
      "experimental": {
        "key": "experimental",
        "display": "Experimental",
        "description": "A Boolean value to indicate that this research element definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
        "type": "boolean"
      },
      "subject[x]": {
        "key": "subject[x]",
        "display": "Subject[x]",
        "description": "The intended subjects for the ResearchElementDefinition. If this element is not provided, a Patient subject is assumed, but the subject of the ResearchElementDefinition can be anything.",
        "type": "CodeableConcept"
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "The date  (and optionally time) when the research element definition was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the research element definition changes.",
        "type": "dateTime"
      },
      "publisher": {
        "key": "publisher",
        "display": "Publisher",
        "description": "The name of the organization or individual that published the research element definition.",
        "type": "string"
      },
      "contact": {
        "key": "contact",
        "display": "Contact",
        "description": "Contact details to assist a user in finding and communicating with the publisher.",
        "type": "ContactDetail",
        "array": true
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A free text natural language description of the research element definition from a consumer's perspective.",
        "type": "markdown"
      },
      "comment": {
        "key": "comment",
        "display": "Comment",
        "description": "A human-readable string to clarify or explain concepts about the resource.",
        "type": "string",
        "array": true
      },
      "useContext": {
        "key": "useContext",
        "display": "Use Context",
        "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate research element definition instances.",
        "type": "UsageContext",
        "array": true
      },
      "jurisdiction": {
        "key": "jurisdiction",
        "display": "Jurisdiction",
        "description": "A legal or geographic region in which the research element definition is intended to be used.",
        "type": "CodeableConcept",
        "array": true
      },
      "purpose": {
        "key": "purpose",
        "display": "Purpose",
        "description": "Explanation of why this research element definition is needed and why it has been designed as it has.",
        "type": "markdown"
      },
      "usage": {
        "key": "usage",
        "display": "Usage",
        "description": "A detailed description, from a clinical perspective, of how the ResearchElementDefinition is used.",
        "type": "string"
      },
      "copyright": {
        "key": "copyright",
        "display": "Copyright",
        "description": "A copyright statement relating to the research element definition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the research element definition.",
        "type": "markdown"
      },
      "approvalDate": {
        "key": "approvalDate",
        "display": "Approval Date",
        "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
        "type": "date"
      },
      "lastReviewDate": {
        "key": "lastReviewDate",
        "display": "Last Review Date",
        "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
        "type": "date"
      },
      "effectivePeriod": {
        "key": "effectivePeriod",
        "display": "Effective Period",
        "description": "The period during which the research element definition content was or is planned to be in active use.",
        "type": "Period"
      },
      "topic": {
        "key": "topic",
        "display": "Topic",
        "description": "Descriptive topics related to the content of the ResearchElementDefinition. Topics provide a high-level categorization grouping types of ResearchElementDefinitions that can be useful for filtering and searching.",
        "type": "CodeableConcept",
        "array": true
      },
      "author": {
        "key": "author",
        "display": "Author",
        "description": "An individiual or organization primarily involved in the creation and maintenance of the content.",
        "type": "ContactDetail",
        "array": true
      },
      "editor": {
        "key": "editor",
        "display": "Editor",
        "description": "An individual or organization primarily responsible for internal coherence of the content.",
        "type": "ContactDetail",
        "array": true
      },
      "reviewer": {
        "key": "reviewer",
        "display": "Reviewer",
        "description": "An individual or organization primarily responsible for review of some aspect of the content.",
        "type": "ContactDetail",
        "array": true
      },
      "endorser": {
        "key": "endorser",
        "display": "Endorser",
        "description": "An individual or organization responsible for officially endorsing the content for use in some setting.",
        "type": "ContactDetail",
        "array": true
      },
      "relatedArtifact": {
        "key": "relatedArtifact",
        "display": "Related Artifact",
        "description": "Related artifacts such as additional documentation, justification, or bibliographic references.",
        "type": "RelatedArtifact",
        "array": true
      },
      "library": {
        "key": "library",
        "display": "Library",
        "description": "A reference to a Library resource containing the formal logic used by the ResearchElementDefinition.",
        "type": "canonical",
        "array": true
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The type of research element, a population, an exposure, or an outcome.",
        "type": "enum",
        "enumValues": [
          "population",
          "exposure",
          "outcome"
        ]
      },
      "variableType": {
        "key": "variableType",
        "display": "Variable Type",
        "description": "The type of the outcome (e.g. Dichotomous, Continuous, or Descriptive).",
        "type": "enum",
        "enumValues": [
          "dichotomous",
          "continuous",
          "descriptive"
        ]
      },
      "characteristic": {
        "key": "characteristic",
        "display": "Characteristic",
        "description": "A characteristic that defines the members of the research element. Multiple characteristics are applied with \"and\" semantics.",
        "type": "ResearchElementDefinition_Characteristic",
        "array": true
      }
    }
  },
  "ResearchElementDefinition_Characteristic": {
    "display": "Research Element Definition Characteristic",
    "description": "What defines the members of the research element",
    "properties": {
      "definition[x]": {
        "key": "definition[x]",
        "display": "Definition[x]",
        "description": "Define members of the research element using Codes (such as condition, medication, or observation), Expressions ( using an expression language such as FHIRPath or CQL) or DataRequirements (such as Diabetes diagnosis onset in the last year).",
        "type": "CodeableConcept"
      },
      "usageContext": {
        "key": "usageContext",
        "display": "Usage Context",
        "description": "Use UsageContext to define the members of the population, such as Age Ranges, Genders, Settings.",
        "type": "UsageContext",
        "array": true
      },
      "exclude": {
        "key": "exclude",
        "display": "Exclude",
        "description": "When true, members with this characteristic are excluded from the element.",
        "type": "boolean"
      },
      "unitOfMeasure": {
        "key": "unitOfMeasure",
        "display": "Unit Of Measure",
        "description": "Specifies the UCUM unit for the outcome.",
        "type": "CodeableConcept"
      },
      "studyEffectiveDescription": {
        "key": "studyEffectiveDescription",
        "display": "Study Effective Description",
        "description": "A narrative description of the time period the study covers.",
        "type": "string"
      },
      "studyEffective[x]": {
        "key": "studyEffective[x]",
        "display": "Study Effective[x]",
        "description": "Indicates what effective period the study covers.",
        "type": "dateTime"
      },
      "studyEffectiveTimeFromStart": {
        "key": "studyEffectiveTimeFromStart",
        "display": "Study Effective Time From Start",
        "description": "Indicates duration from the study initiation.",
        "type": "Duration"
      },
      "studyEffectiveGroupMeasure": {
        "key": "studyEffectiveGroupMeasure",
        "display": "Study Effective Group Measure",
        "description": "Indicates how elements are aggregated within the study effective period.",
        "type": "enum",
        "enumValues": [
          "mean",
          "median",
          "mean-of-mean",
          "mean-of-median",
          "median-of-mean",
          "median-of-median"
        ]
      },
      "participantEffectiveDescription": {
        "key": "participantEffectiveDescription",
        "display": "Participant Effective Description",
        "description": "A narrative description of the time period the study covers.",
        "type": "string"
      },
      "participantEffective[x]": {
        "key": "participantEffective[x]",
        "display": "Participant Effective[x]",
        "description": "Indicates what effective period the study covers.",
        "type": "dateTime"
      },
      "participantEffectiveTimeFromStart": {
        "key": "participantEffectiveTimeFromStart",
        "display": "Participant Effective Time From Start",
        "description": "Indicates duration from the participant's study entry.",
        "type": "Duration"
      },
      "participantEffectiveGroupMeasure": {
        "key": "participantEffectiveGroupMeasure",
        "display": "Participant Effective Group Measure",
        "description": "Indicates how elements are aggregated within the study effective period.",
        "type": "enum",
        "enumValues": [
          "mean",
          "median",
          "mean-of-mean",
          "mean-of-median",
          "median-of-mean",
          "median-of-median"
        ]
      }
    },
    "backboneElement": true
  },
  "ResearchStudy": {
    "display": "ResearchStudy",
    "description": "A process where a researcher or organization plans and then executes a series of steps intended to increase the field of healthcare-related knowledge.  This includes studies of safety, efficacy, comparative effectiveness and other information about medications, devices, therapies and other interventional and investigative techniques.  A ResearchStudy involves the gathering of information about human or animal subjects.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Identifiers assigned to this research study by the sponsor or other systems.",
        "type": "Identifier",
        "array": true
      },
      "title": {
        "key": "title",
        "display": "Title",
        "description": "A short, descriptive user-friendly label for the study.",
        "type": "string"
      },
      "protocol": {
        "key": "protocol",
        "display": "Protocol",
        "description": "The set of steps expected to be performed as part of the execution of the study.",
        "type": "Reference",
        "targetProfile": [
          "PlanDefinition"
        ],
        "array": true
      },
      "partOf": {
        "key": "partOf",
        "display": "Part Of",
        "description": "A larger research study of which this particular study is a component or step.",
        "type": "Reference",
        "targetProfile": [
          "ResearchStudy"
        ],
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The current state of the study.",
        "type": "enum",
        "enumValues": [
          "active",
          "administratively-completed",
          "approved",
          "closed-to-accrual",
          "closed-to-accrual-and-intervention",
          "completed",
          "disapproved",
          "in-review",
          "temporarily-closed-to-accrual",
          "temporarily-closed-to-accrual-and-intervention",
          "withdrawn"
        ]
      },
      "primaryPurposeType": {
        "key": "primaryPurposeType",
        "display": "Primary Purpose Type",
        "description": "The type of study based upon the intent of the study's activities. A classification of the intent of the study.",
        "type": "CodeableConcept"
      },
      "phase": {
        "key": "phase",
        "display": "Phase",
        "description": "The stage in the progression of a therapy from initial experimental use in humans in clinical trials to post-market evaluation.",
        "type": "CodeableConcept"
      },
      "category": {
        "key": "category",
        "display": "Category",
        "description": "Codes categorizing the type of study such as investigational vs. observational, type of blinding, type of randomization, safety vs. efficacy, etc.",
        "type": "CodeableConcept",
        "array": true
      },
      "focus": {
        "key": "focus",
        "display": "Focus",
        "description": "The medication(s), food(s), therapy(ies), device(s) or other concerns or interventions that the study is seeking to gain more information about.",
        "type": "CodeableConcept",
        "array": true
      },
      "condition": {
        "key": "condition",
        "display": "Condition",
        "description": "The condition that is the focus of the study.  For example, In a study to examine risk factors for Lupus, might have as an inclusion criterion \"healthy volunteer\", but the target condition code would be a Lupus SNOMED code.",
        "type": "CodeableConcept",
        "array": true
      },
      "contact": {
        "key": "contact",
        "display": "Contact",
        "description": "Contact details to assist a user in learning more about or engaging with the study.",
        "type": "ContactDetail",
        "array": true
      },
      "relatedArtifact": {
        "key": "relatedArtifact",
        "display": "Related Artifact",
        "description": "Citations, references and other related documents.",
        "type": "RelatedArtifact",
        "array": true
      },
      "keyword": {
        "key": "keyword",
        "display": "Keyword",
        "description": "Key terms to aid in searching for or filtering the study.",
        "type": "CodeableConcept",
        "array": true
      },
      "location": {
        "key": "location",
        "display": "Location",
        "description": "Indicates a country, state or other region where the study is taking place.",
        "type": "CodeableConcept",
        "array": true
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A full description of how the study is being conducted.",
        "type": "markdown"
      },
      "enrollment": {
        "key": "enrollment",
        "display": "Enrollment",
        "description": "Reference to a Group that defines the criteria for and quantity of subjects participating in the study.  E.g. \" 200 female Europeans between the ages of 20 and 45 with early onset diabetes\".",
        "type": "Reference",
        "targetProfile": [
          "Group"
        ],
        "array": true
      },
      "period": {
        "key": "period",
        "display": "Period",
        "description": "Identifies the start date and the expected (or actual, depending on status) end date for the study.",
        "type": "Period"
      },
      "sponsor": {
        "key": "sponsor",
        "display": "Sponsor",
        "description": "An organization that initiates the investigation and is legally responsible for the study.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "principalInvestigator": {
        "key": "principalInvestigator",
        "display": "Principal Investigator",
        "description": "A researcher in a study who oversees multiple aspects of the study, such as concept development, protocol writing, protocol submission for IRB approval, participant recruitment, informed consent, data collection, analysis, interpretation and presentation.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole"
        ]
      },
      "site": {
        "key": "site",
        "display": "Site",
        "description": "A facility in which study activities are conducted.",
        "type": "Reference",
        "targetProfile": [
          "Location"
        ],
        "array": true
      },
      "reasonStopped": {
        "key": "reasonStopped",
        "display": "Reason Stopped",
        "description": "A description and/or code explaining the premature termination of the study.",
        "type": "CodeableConcept"
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "Comments made about the study by the performer, subject or other participants.",
        "type": "Annotation",
        "array": true
      },
      "arm": {
        "key": "arm",
        "display": "Arm",
        "description": "Describes an expected sequence of events for one of the participants of a study.  E.g. Exposure to drug A, wash-out, exposure to drug B, wash-out, follow-up.",
        "type": "ResearchStudy_Arm",
        "array": true
      },
      "objective": {
        "key": "objective",
        "display": "Objective",
        "description": "A goal that the study is aiming to achieve in terms of a scientific question to be answered by the analysis of data collected during the study.",
        "type": "ResearchStudy_Objective",
        "array": true
      }
    }
  },
  "ResearchStudy_Arm": {
    "display": "Research Study Arm",
    "description": "Defined path through the study for a subject",
    "properties": {
      "name": {
        "key": "name",
        "display": "Name",
        "description": "Unique, human-readable label for this arm of the study.",
        "type": "string"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Categorization of study arm, e.g. experimental, active comparator, placebo comparater.",
        "type": "CodeableConcept"
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A succinct description of the path through the study that would be followed by a subject adhering to this arm.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "ResearchStudy_Objective": {
    "display": "Research Study Objective",
    "description": "A goal for the study",
    "properties": {
      "name": {
        "key": "name",
        "display": "Name",
        "description": "Unique, human-readable label for this objective of the study.",
        "type": "string"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The kind of study objective.",
        "type": "CodeableConcept"
      }
    },
    "backboneElement": true
  },
  "ResearchSubject": {
    "display": "ResearchSubject",
    "description": "A physical entity which is the primary unit of operational and/or administrative interest in a study.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Identifiers assigned to this research subject for a study.",
        "type": "Identifier",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The current state of the subject.",
        "type": "enum",
        "enumValues": [
          "candidate",
          "eligible",
          "follow-up",
          "ineligible",
          "not-registered",
          "off-study",
          "on-study",
          "on-study-intervention",
          "on-study-observation",
          "pending-on-study",
          "potential-candidate",
          "screening",
          "withdrawn"
        ]
      },
      "period": {
        "key": "period",
        "display": "Period",
        "description": "The dates the subject began and ended their participation in the study.",
        "type": "Period"
      },
      "study": {
        "key": "study",
        "display": "Study",
        "description": "Reference to the study the subject is participating in.",
        "type": "Reference",
        "targetProfile": [
          "ResearchStudy"
        ]
      },
      "individual": {
        "key": "individual",
        "display": "Individual",
        "description": "The record of the person or animal who is involved in the study.",
        "type": "Reference",
        "targetProfile": [
          "Patient"
        ]
      },
      "assignedArm": {
        "key": "assignedArm",
        "display": "Assigned Arm",
        "description": "The name of the arm in the study the subject is expected to follow as part of this study.",
        "type": "string"
      },
      "actualArm": {
        "key": "actualArm",
        "display": "Actual Arm",
        "description": "The name of the arm in the study the subject actually followed as part of this study.",
        "type": "string"
      },
      "consent": {
        "key": "consent",
        "display": "Consent",
        "description": "A record of the patient's informed agreement to participate in the study.",
        "type": "Reference",
        "targetProfile": [
          "Consent"
        ]
      }
    }
  },
  "RiskAssessment": {
    "display": "RiskAssessment",
    "description": "An assessment of the likely outcome(s) for a patient or other subject as well as the likelihood of each outcome.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Business identifier assigned to the risk assessment.",
        "type": "Identifier",
        "array": true
      },
      "basedOn": {
        "key": "basedOn",
        "display": "Based On",
        "description": "A reference to the request that is fulfilled by this risk assessment.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ]
      },
      "parent": {
        "key": "parent",
        "display": "Parent",
        "description": "A reference to a resource that this risk assessment is part of, such as a Procedure.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ]
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of the RiskAssessment, using the same statuses as an Observation.",
        "type": "enum",
        "enumValues": [
          "registered",
          "preliminary",
          "final",
          "amended +"
        ]
      },
      "method": {
        "key": "method",
        "display": "Method",
        "description": "The algorithm, process or mechanism used to evaluate the risk.",
        "type": "CodeableConcept"
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "The type of the risk assessment performed.",
        "type": "CodeableConcept"
      },
      "subject": {
        "key": "subject",
        "display": "Subject",
        "description": "The patient or group the risk assessment applies to.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Group"
        ]
      },
      "encounter": {
        "key": "encounter",
        "display": "Encounter",
        "description": "The encounter where the assessment was performed.",
        "type": "Reference",
        "targetProfile": [
          "Encounter"
        ]
      },
      "occurrence[x]": {
        "key": "occurrence[x]",
        "display": "Occurrence[x]",
        "description": "The date (and possibly time) the risk assessment was performed.",
        "type": "dateTime"
      },
      "condition": {
        "key": "condition",
        "display": "Condition",
        "description": "For assessments or prognosis specific to a particular condition, indicates the condition being assessed.",
        "type": "Reference",
        "targetProfile": [
          "Condition"
        ]
      },
      "performer": {
        "key": "performer",
        "display": "Performer",
        "description": "The provider or software application that performed the assessment.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Device"
        ]
      },
      "reasonCode": {
        "key": "reasonCode",
        "display": "Reason Code",
        "description": "The reason the risk assessment was performed.",
        "type": "CodeableConcept",
        "array": true
      },
      "reasonReference": {
        "key": "reasonReference",
        "display": "Reason Reference",
        "description": "Resources supporting the reason the risk assessment was performed.",
        "type": "Reference",
        "targetProfile": [
          "Condition",
          "Observation",
          "DiagnosticReport",
          "DocumentReference"
        ],
        "array": true
      },
      "basis": {
        "key": "basis",
        "display": "Basis",
        "description": "Indicates the source data considered as part of the assessment (for example, FamilyHistory, Observations, Procedures, Conditions, etc.).",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ],
        "array": true
      },
      "prediction": {
        "key": "prediction",
        "display": "Prediction",
        "description": "Describes the expected outcome for the subject.",
        "type": "RiskAssessment_Prediction",
        "array": true
      },
      "mitigation": {
        "key": "mitigation",
        "display": "Mitigation",
        "description": "A description of the steps that might be taken to reduce the identified risk(s).",
        "type": "string"
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "Additional comments about the risk assessment.",
        "type": "Annotation",
        "array": true
      }
    }
  },
  "RiskAssessment_Prediction": {
    "display": "Risk Assessment Prediction",
    "description": "Outcome predicted",
    "properties": {
      "outcome": {
        "key": "outcome",
        "display": "Outcome",
        "description": "One of the potential outcomes for the patient (e.g. remission, death,  a particular condition).",
        "type": "CodeableConcept"
      },
      "probability[x]": {
        "key": "probability[x]",
        "display": "Probability[x]",
        "description": "Indicates how likely the outcome is (in the specified timeframe).",
        "type": "decimal"
      },
      "qualitativeRisk": {
        "key": "qualitativeRisk",
        "display": "Qualitative Risk",
        "description": "Indicates how likely the outcome is (in the specified timeframe), expressed as a qualitative value (e.g. low, medium, or high).",
        "type": "CodeableConcept"
      },
      "relativeRisk": {
        "key": "relativeRisk",
        "display": "Relative Risk",
        "description": "Indicates the risk for this particular subject (with their specific characteristics) divided by the risk of the population in general.  (Numbers greater than 1 = higher risk than the population, numbers less than 1 = lower risk.).",
        "type": "decimal"
      },
      "when[x]": {
        "key": "when[x]",
        "display": "When[x]",
        "description": "Indicates the period of time or age range of the subject to which the specified probability applies.",
        "type": "Period"
      },
      "rationale": {
        "key": "rationale",
        "display": "Rationale",
        "description": "Additional information explaining the basis for the prediction.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "RiskEvidenceSynthesis": {
    "display": "RiskEvidenceSynthesis",
    "description": "The RiskEvidenceSynthesis resource describes the likelihood of an outcome in a population plus exposure state where the risk estimate is derived from a combination of research studies.",
    "properties": {
      "url": {
        "key": "url",
        "display": "Url",
        "description": "An absolute URI that is used to identify this risk evidence synthesis when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this risk evidence synthesis is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the risk evidence synthesis is stored on different servers.",
        "type": "uri"
      },
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "A formal identifier that is used to identify this risk evidence synthesis when it is represented in other formats, or referenced in a specification, model, design or an instance.",
        "type": "Identifier",
        "array": true
      },
      "version": {
        "key": "version",
        "display": "Version",
        "description": "The identifier that is used to identify this version of the risk evidence synthesis when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the risk evidence synthesis author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
        "type": "string"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A natural language name identifying the risk evidence synthesis. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
        "type": "string"
      },
      "title": {
        "key": "title",
        "display": "Title",
        "description": "A short, descriptive, user-friendly title for the risk evidence synthesis.",
        "type": "string"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of this risk evidence synthesis. Enables tracking the life-cycle of the content.",
        "type": "enum",
        "enumValues": [
          "draft",
          "active",
          "retired",
          "unknown"
        ]
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "The date  (and optionally time) when the risk evidence synthesis was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the risk evidence synthesis changes.",
        "type": "dateTime"
      },
      "publisher": {
        "key": "publisher",
        "display": "Publisher",
        "description": "The name of the organization or individual that published the risk evidence synthesis.",
        "type": "string"
      },
      "contact": {
        "key": "contact",
        "display": "Contact",
        "description": "Contact details to assist a user in finding and communicating with the publisher.",
        "type": "ContactDetail",
        "array": true
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A free text natural language description of the risk evidence synthesis from a consumer's perspective.",
        "type": "markdown"
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "A human-readable string to clarify or explain concepts about the resource.",
        "type": "Annotation",
        "array": true
      },
      "useContext": {
        "key": "useContext",
        "display": "Use Context",
        "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate risk evidence synthesis instances.",
        "type": "UsageContext",
        "array": true
      },
      "jurisdiction": {
        "key": "jurisdiction",
        "display": "Jurisdiction",
        "description": "A legal or geographic region in which the risk evidence synthesis is intended to be used.",
        "type": "CodeableConcept",
        "array": true
      },
      "copyright": {
        "key": "copyright",
        "display": "Copyright",
        "description": "A copyright statement relating to the risk evidence synthesis and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the risk evidence synthesis.",
        "type": "markdown"
      },
      "approvalDate": {
        "key": "approvalDate",
        "display": "Approval Date",
        "description": "The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.",
        "type": "date"
      },
      "lastReviewDate": {
        "key": "lastReviewDate",
        "display": "Last Review Date",
        "description": "The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.",
        "type": "date"
      },
      "effectivePeriod": {
        "key": "effectivePeriod",
        "display": "Effective Period",
        "description": "The period during which the risk evidence synthesis content was or is planned to be in active use.",
        "type": "Period"
      },
      "topic": {
        "key": "topic",
        "display": "Topic",
        "description": "Descriptive topics related to the content of the RiskEvidenceSynthesis. Topics provide a high-level categorization grouping types of EffectEvidenceSynthesiss that can be useful for filtering and searching.",
        "type": "CodeableConcept",
        "array": true
      },
      "author": {
        "key": "author",
        "display": "Author",
        "description": "An individiual or organization primarily involved in the creation and maintenance of the content.",
        "type": "ContactDetail",
        "array": true
      },
      "editor": {
        "key": "editor",
        "display": "Editor",
        "description": "An individual or organization primarily responsible for internal coherence of the content.",
        "type": "ContactDetail",
        "array": true
      },
      "reviewer": {
        "key": "reviewer",
        "display": "Reviewer",
        "description": "An individual or organization primarily responsible for review of some aspect of the content.",
        "type": "ContactDetail",
        "array": true
      },
      "endorser": {
        "key": "endorser",
        "display": "Endorser",
        "description": "An individual or organization responsible for officially endorsing the content for use in some setting.",
        "type": "ContactDetail",
        "array": true
      },
      "relatedArtifact": {
        "key": "relatedArtifact",
        "display": "Related Artifact",
        "description": "Related artifacts such as additional documentation, justification, or bibliographic references.",
        "type": "RelatedArtifact",
        "array": true
      },
      "synthesisType": {
        "key": "synthesisType",
        "display": "Synthesis Type",
        "description": "Type of synthesis eg meta-analysis.",
        "type": "CodeableConcept"
      },
      "studyType": {
        "key": "studyType",
        "display": "Study Type",
        "description": "Type of study eg randomized trial.",
        "type": "CodeableConcept"
      },
      "population": {
        "key": "population",
        "display": "Population",
        "description": "A reference to a EvidenceVariable resource that defines the population for the research.",
        "type": "Reference",
        "targetProfile": [
          "EvidenceVariable"
        ]
      },
      "exposure": {
        "key": "exposure",
        "display": "Exposure",
        "description": "A reference to a EvidenceVariable resource that defines the exposure for the research.",
        "type": "Reference",
        "targetProfile": [
          "EvidenceVariable"
        ]
      },
      "outcome": {
        "key": "outcome",
        "display": "Outcome",
        "description": "A reference to a EvidenceVariable resomece that defines the outcome for the research.",
        "type": "Reference",
        "targetProfile": [
          "EvidenceVariable"
        ]
      },
      "sampleSize": {
        "key": "sampleSize",
        "display": "Sample Size",
        "description": "A description of the size of the sample involved in the synthesis.",
        "type": "RiskEvidenceSynthesis_SampleSize"
      },
      "riskEstimate": {
        "key": "riskEstimate",
        "display": "Risk Estimate",
        "description": "The estimated risk of the outcome.",
        "type": "RiskEvidenceSynthesis_RiskEstimate"
      },
      "certainty": {
        "key": "certainty",
        "display": "Certainty",
        "description": "A description of the certainty of the risk estimate.",
        "type": "RiskEvidenceSynthesis_Certainty",
        "array": true
      }
    }
  },
  "RiskEvidenceSynthesis_SampleSize": {
    "display": "Risk Evidence Synthesis Sample Size",
    "description": "What sample size was involved?",
    "properties": {
      "description": {
        "key": "description",
        "display": "Description",
        "description": "Human-readable summary of sample size.",
        "type": "string"
      },
      "numberOfStudies": {
        "key": "numberOfStudies",
        "display": "Number Of Studies",
        "description": "Number of studies included in this evidence synthesis.",
        "type": "integer"
      },
      "numberOfParticipants": {
        "key": "numberOfParticipants",
        "display": "Number Of Participants",
        "description": "Number of participants included in this evidence synthesis.",
        "type": "integer"
      }
    },
    "backboneElement": true
  },
  "RiskEvidenceSynthesis_RiskEstimate": {
    "display": "Risk Evidence Synthesis Risk Estimate",
    "description": "What was the estimated risk",
    "properties": {
      "description": {
        "key": "description",
        "display": "Description",
        "description": "Human-readable summary of risk estimate.",
        "type": "string"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Examples include proportion and mean.",
        "type": "CodeableConcept"
      },
      "value": {
        "key": "value",
        "display": "Value",
        "description": "The point estimate of the risk estimate.",
        "type": "decimal"
      },
      "unitOfMeasure": {
        "key": "unitOfMeasure",
        "display": "Unit Of Measure",
        "description": "Specifies the UCUM unit for the outcome.",
        "type": "CodeableConcept"
      },
      "denominatorCount": {
        "key": "denominatorCount",
        "display": "Denominator Count",
        "description": "The sample size for the group that was measured for this risk estimate.",
        "type": "integer"
      },
      "numeratorCount": {
        "key": "numeratorCount",
        "display": "Numerator Count",
        "description": "The number of group members with the outcome of interest.",
        "type": "integer"
      },
      "precisionEstimate": {
        "key": "precisionEstimate",
        "display": "Precision Estimate",
        "description": "A description of the precision of the estimate for the effect.",
        "type": "RiskEvidenceSynthesis_RiskEstimate_PrecisionEstimate",
        "array": true
      }
    },
    "backboneElement": true
  },
  "RiskEvidenceSynthesis_RiskEstimate_PrecisionEstimate": {
    "display": "Risk Evidence Synthesis Risk Estimate_ Precision Estimate",
    "description": "How precise the estimate is",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Examples include confidence interval and interquartile range.",
        "type": "CodeableConcept"
      },
      "level": {
        "key": "level",
        "display": "Level",
        "description": "Use 95 for a 95% confidence interval.",
        "type": "decimal"
      },
      "from": {
        "key": "from",
        "display": "From",
        "description": "Lower bound of confidence interval.",
        "type": "decimal"
      },
      "to": {
        "key": "to",
        "display": "To",
        "description": "Upper bound of confidence interval.",
        "type": "decimal"
      }
    },
    "backboneElement": true
  },
  "RiskEvidenceSynthesis_Certainty": {
    "display": "Risk Evidence Synthesis Certainty",
    "description": "How certain is the risk",
    "properties": {
      "rating": {
        "key": "rating",
        "display": "Rating",
        "description": "A rating of the certainty of the effect estimate.",
        "type": "CodeableConcept",
        "array": true
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "A human-readable string to clarify or explain concepts about the resource.",
        "type": "Annotation",
        "array": true
      },
      "certaintySubcomponent": {
        "key": "certaintySubcomponent",
        "display": "Certainty Subcomponent",
        "description": "A description of a component of the overall certainty.",
        "type": "RiskEvidenceSynthesis_Certainty_CertaintySubcomponent",
        "array": true
      }
    },
    "backboneElement": true
  },
  "RiskEvidenceSynthesis_Certainty_CertaintySubcomponent": {
    "display": "Risk Evidence Synthesis Certainty_ Certainty Subcomponent",
    "description": "A component that contributes to the overall certainty",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Type of subcomponent of certainty rating.",
        "type": "CodeableConcept"
      },
      "rating": {
        "key": "rating",
        "display": "Rating",
        "description": "A rating of a subcomponent of rating certainty.",
        "type": "CodeableConcept",
        "array": true
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "A human-readable string to clarify or explain concepts about the resource.",
        "type": "Annotation",
        "array": true
      }
    },
    "backboneElement": true
  },
  "Schedule": {
    "display": "Schedule",
    "description": "A container for slots of time that may be available for booking appointments.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "External Ids for this item.",
        "type": "Identifier",
        "array": true
      },
      "active": {
        "key": "active",
        "display": "Active",
        "description": "Whether this schedule record is in active use or should not be used (such as was entered in error).",
        "type": "boolean"
      },
      "serviceCategory": {
        "key": "serviceCategory",
        "display": "Service Category",
        "description": "A broad categorization of the service that is to be performed during this appointment.",
        "type": "CodeableConcept",
        "array": true
      },
      "serviceType": {
        "key": "serviceType",
        "display": "Service Type",
        "description": "The specific service that is to be performed during this appointment.",
        "type": "CodeableConcept",
        "array": true
      },
      "specialty": {
        "key": "specialty",
        "display": "Specialty",
        "description": "The specialty of a practitioner that would be required to perform the service requested in this appointment.",
        "type": "CodeableConcept",
        "array": true
      },
      "actor": {
        "key": "actor",
        "display": "Actor",
        "description": "Slots that reference this schedule resource provide the availability details to these referenced resource(s).",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Practitioner",
          "PractitionerRole",
          "RelatedPerson",
          "Device",
          "HealthcareService",
          "Location"
        ],
        "array": true
      },
      "planningHorizon": {
        "key": "planningHorizon",
        "display": "Planning Horizon",
        "description": "The period of time that the slots that reference this Schedule resource cover (even if none exist). These  cover the amount of time that an organization's planning horizon; the interval for which they are currently accepting appointments. This does not define a \"template\" for planning outside these dates.",
        "type": "Period"
      },
      "comment": {
        "key": "comment",
        "display": "Comment",
        "description": "Comments on the availability to describe any extended information. Such as custom constraints on the slots that may be associated.",
        "type": "string"
      }
    }
  },
  "SearchParameter": {
    "display": "SearchParameter",
    "description": "A search parameter that defines a named search item that can be used to search/filter on a resource.",
    "properties": {
      "url": {
        "key": "url",
        "display": "Url",
        "description": "An absolute URI that is used to identify this search parameter when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this search parameter is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the search parameter is stored on different servers.",
        "type": "uri"
      },
      "version": {
        "key": "version",
        "display": "Version",
        "description": "The identifier that is used to identify this version of the search parameter when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the search parameter author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
        "type": "string"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A natural language name identifying the search parameter. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
        "type": "string"
      },
      "derivedFrom": {
        "key": "derivedFrom",
        "display": "Derived From",
        "description": "Where this search parameter is originally defined. If a derivedFrom is provided, then the details in the search parameter must be consistent with the definition from which it is defined. i.e. the parameter should have the same meaning, and (usually) the functionality should be a proper subset of the underlying search parameter.",
        "type": "canonical"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of this search parameter. Enables tracking the life-cycle of the content.",
        "type": "enum",
        "enumValues": [
          "draft",
          "active",
          "retired",
          "unknown"
        ]
      },
      "experimental": {
        "key": "experimental",
        "display": "Experimental",
        "description": "A Boolean value to indicate that this search parameter is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
        "type": "boolean"
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "The date  (and optionally time) when the search parameter was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the search parameter changes.",
        "type": "dateTime"
      },
      "publisher": {
        "key": "publisher",
        "display": "Publisher",
        "description": "The name of the organization or individual that published the search parameter.",
        "type": "string"
      },
      "contact": {
        "key": "contact",
        "display": "Contact",
        "description": "Contact details to assist a user in finding and communicating with the publisher.",
        "type": "ContactDetail",
        "array": true
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "And how it used.",
        "type": "markdown"
      },
      "useContext": {
        "key": "useContext",
        "display": "Use Context",
        "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate search parameter instances.",
        "type": "UsageContext",
        "array": true
      },
      "jurisdiction": {
        "key": "jurisdiction",
        "display": "Jurisdiction",
        "description": "A legal or geographic region in which the search parameter is intended to be used.",
        "type": "CodeableConcept",
        "array": true
      },
      "purpose": {
        "key": "purpose",
        "display": "Purpose",
        "description": "Explanation of why this search parameter is needed and why it has been designed as it has.",
        "type": "markdown"
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "The code used in the URL or the parameter name in a parameters resource for this search parameter.",
        "type": "enum",
        "enumValues": [
          "Code used in URL"
        ]
      },
      "base": {
        "key": "base",
        "display": "Base",
        "description": "The base resource type(s) that this search parameter can be used against.",
        "type": "enum",
        "enumValues": [
          "The resource type(s) this search parameter applies to"
        ],
        "array": true
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The type of value that a search parameter may contain, and how the content is interpreted.",
        "type": "enum",
        "enumValues": [
          "number",
          "date",
          "string",
          "token",
          "reference",
          "composite",
          "quantity",
          "uri",
          "special"
        ]
      },
      "expression": {
        "key": "expression",
        "display": "Expression",
        "description": "A FHIRPath expression that returns a set of elements for the search parameter.",
        "type": "string"
      },
      "xpath": {
        "key": "xpath",
        "display": "Xpath",
        "description": "An XPath expression that returns a set of elements for the search parameter.",
        "type": "string"
      },
      "xpathUsage": {
        "key": "xpathUsage",
        "display": "Xpath Usage",
        "description": "How the search parameter relates to the set of elements returned by evaluating the xpath query.",
        "type": "enum",
        "enumValues": [
          "normal",
          "phonetic",
          "nearby",
          "distance",
          "other"
        ]
      },
      "target": {
        "key": "target",
        "display": "Target",
        "description": "Types of resource (if a resource is referenced).",
        "type": "enum",
        "enumValues": [
          "Types of resource (if a resource reference)"
        ],
        "array": true
      },
      "multipleOr": {
        "key": "multipleOr",
        "display": "Multiple Or",
        "description": "Whether multiple values are allowed for each time the parameter exists. Values are separated by commas, and the parameter matches if any of the values match.",
        "type": "boolean"
      },
      "multipleAnd": {
        "key": "multipleAnd",
        "display": "Multiple And",
        "description": "Whether multiple parameters are allowed - e.g. more than one parameter with the same name. The search matches if all the parameters match.",
        "type": "boolean"
      },
      "comparator": {
        "key": "comparator",
        "display": "Comparator",
        "description": "Comparators supported for the search parameter.",
        "type": "enum",
        "enumValues": [
          "eq",
          "ne",
          "gt",
          "lt",
          "ge",
          "le",
          "sa",
          "eb",
          "ap"
        ],
        "array": true
      },
      "modifier": {
        "key": "modifier",
        "display": "Modifier",
        "description": "A modifier supported for the search parameter.",
        "type": "enum",
        "enumValues": [
          "missing",
          "exact",
          "contains",
          "not",
          "text",
          "in",
          "not-in",
          "below",
          "above",
          "type",
          "identifier",
          "ofType"
        ],
        "array": true
      },
      "chain": {
        "key": "chain",
        "display": "Chain",
        "description": "Contains the names of any search parameters which may be chained to the containing search parameter. Chained parameters may be added to search parameters of type reference and specify that resources will only be returned if they contain a reference to a resource which matches the chained parameter value. Values for this field should be drawn from SearchParameter.code for a parameter on the target resource type.",
        "type": "string",
        "array": true
      },
      "component": {
        "key": "component",
        "display": "Component",
        "description": "Used to define the parts of a composite search parameter.",
        "type": "SearchParameter_Component",
        "array": true
      }
    }
  },
  "SearchParameter_Component": {
    "display": "Search Parameter Component",
    "description": "For Composite resources to define the parts",
    "properties": {
      "definition": {
        "key": "definition",
        "display": "Definition",
        "description": "The definition of the search parameter that describes this part.",
        "type": "canonical"
      },
      "expression": {
        "key": "expression",
        "display": "Expression",
        "description": "A sub-expression that defines how to extract values for this component from the output of the main SearchParameter.expression.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "ServiceRequest": {
    "display": "ServiceRequest",
    "description": "A record of a request for service such as diagnostic investigations, treatments, or operations to be performed.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Identifiers assigned to this order instance by the orderer and/or the receiver and/or order fulfiller.",
        "type": "Identifier",
        "array": true
      },
      "instantiatesCanonical": {
        "key": "instantiatesCanonical",
        "display": "Instantiates Canonical",
        "description": "The URL pointing to a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this ServiceRequest.",
        "type": "canonical",
        "array": true
      },
      "instantiatesUri": {
        "key": "instantiatesUri",
        "display": "Instantiates Uri",
        "description": "The URL pointing to an externally maintained protocol, guideline, orderset or other definition that is adhered to in whole or in part by this ServiceRequest.",
        "type": "uri",
        "array": true
      },
      "basedOn": {
        "key": "basedOn",
        "display": "Based On",
        "description": "Plan/proposal/order fulfilled by this request.",
        "type": "Reference",
        "targetProfile": [
          "CarePlan",
          "ServiceRequest",
          "MedicationRequest"
        ],
        "array": true
      },
      "replaces": {
        "key": "replaces",
        "display": "Replaces",
        "description": "The request takes the place of the referenced completed or terminated request(s).",
        "type": "Reference",
        "targetProfile": [
          "ServiceRequest"
        ],
        "array": true
      },
      "requisition": {
        "key": "requisition",
        "display": "Requisition",
        "description": "A shared identifier common to all service requests that were authorized more or less simultaneously by a single author, representing the composite or group identifier.",
        "type": "Identifier"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of the order.",
        "type": "enum",
        "enumValues": [
          "draft",
          "active",
          "on-hold",
          "revoked",
          "completed",
          "entered-in-error",
          "unknown"
        ]
      },
      "intent": {
        "key": "intent",
        "display": "Intent",
        "description": "Whether the request is a proposal, plan, an original order or a reflex order.",
        "type": "enum",
        "enumValues": [
          "proposal",
          "plan",
          "directive",
          "order",
          "original-order",
          "reflex-order",
          "filler-order",
          "instance-order",
          "option"
        ]
      },
      "category": {
        "key": "category",
        "display": "Category",
        "description": "A code that classifies the service for searching, sorting and display purposes (e.g. \"Surgical Procedure\").",
        "type": "CodeableConcept",
        "array": true
      },
      "priority": {
        "key": "priority",
        "display": "Priority",
        "description": "Indicates how quickly the ServiceRequest should be addressed with respect to other requests.",
        "type": "enum",
        "enumValues": [
          "routine",
          "urgent",
          "asap",
          "stat"
        ]
      },
      "doNotPerform": {
        "key": "doNotPerform",
        "display": "Do Not Perform",
        "description": "Set this to true if the record is saying that the service/procedure should NOT be performed.",
        "type": "boolean"
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "A code that identifies a particular service (i.e., procedure, diagnostic investigation, or panel of investigations) that have been requested.",
        "type": "CodeableConcept"
      },
      "orderDetail": {
        "key": "orderDetail",
        "display": "Order Detail",
        "description": "Additional details and instructions about the how the services are to be delivered.   For example, and order for a urinary catheter may have an order detail for an external or indwelling catheter, or an order for a bandage may require additional instructions specifying how the bandage should be applied.",
        "type": "CodeableConcept",
        "array": true
      },
      "quantity[x]": {
        "key": "quantity[x]",
        "display": "Quantity[x]",
        "description": "An amount of service being requested which can be a quantity ( for example $1,500 home modification), a ratio ( for example, 20 half day visits per month), or a range (2.0 to 1.8 Gy per fraction).",
        "type": "Quantity"
      },
      "subject": {
        "key": "subject",
        "display": "Subject",
        "description": "On whom or what the service is to be performed. This is usually a human patient, but can also be requested on animals, groups of humans or animals, devices such as dialysis machines, or even locations (typically for environmental scans).",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Group",
          "Location",
          "Device"
        ]
      },
      "encounter": {
        "key": "encounter",
        "display": "Encounter",
        "description": "An encounter that provides additional information about the healthcare context in which this request is made.",
        "type": "Reference",
        "targetProfile": [
          "Encounter"
        ]
      },
      "occurrence[x]": {
        "key": "occurrence[x]",
        "display": "Occurrence[x]",
        "description": "The date/time at which the requested service should occur.",
        "type": "dateTime"
      },
      "asNeeded[x]": {
        "key": "asNeeded[x]",
        "display": "As Needed[x]",
        "description": "If a CodeableConcept is present, it indicates the pre-condition for performing the service.  For example \"pain\", \"on flare-up\", etc.",
        "type": "boolean"
      },
      "authoredOn": {
        "key": "authoredOn",
        "display": "Authored On",
        "description": "When the request transitioned to being actionable.",
        "type": "dateTime"
      },
      "requester": {
        "key": "requester",
        "display": "Requester",
        "description": "The individual who initiated the request and has responsibility for its activation.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization",
          "Patient",
          "RelatedPerson",
          "Device"
        ]
      },
      "performerType": {
        "key": "performerType",
        "display": "Performer Type",
        "description": "Desired type of performer for doing the requested service.",
        "type": "CodeableConcept"
      },
      "performer": {
        "key": "performer",
        "display": "Performer",
        "description": "The desired performer for doing the requested service.  For example, the surgeon, dermatopathologist, endoscopist, etc.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization",
          "CareTeam",
          "HealthcareService",
          "Patient",
          "Device",
          "RelatedPerson"
        ],
        "array": true
      },
      "locationCode": {
        "key": "locationCode",
        "display": "Location Code",
        "description": "The preferred location(s) where the procedure should actually happen in coded or free text form. E.g. at home or nursing day care center.",
        "type": "CodeableConcept",
        "array": true
      },
      "locationReference": {
        "key": "locationReference",
        "display": "Location Reference",
        "description": "A reference to the the preferred location(s) where the procedure should actually happen. E.g. at home or nursing day care center.",
        "type": "Reference",
        "targetProfile": [
          "Location"
        ],
        "array": true
      },
      "reasonCode": {
        "key": "reasonCode",
        "display": "Reason Code",
        "description": "An explanation or justification for why this service is being requested in coded or textual form.   This is often for billing purposes.  May relate to the resources referred to in `supportingInfo`.",
        "type": "CodeableConcept",
        "array": true
      },
      "reasonReference": {
        "key": "reasonReference",
        "display": "Reason Reference",
        "description": "Indicates another resource that provides a justification for why this service is being requested.   May relate to the resources referred to in `supportingInfo`.",
        "type": "Reference",
        "targetProfile": [
          "Condition",
          "Observation",
          "DiagnosticReport",
          "DocumentReference"
        ],
        "array": true
      },
      "insurance": {
        "key": "insurance",
        "display": "Insurance",
        "description": "Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be needed for delivering the requested service.",
        "type": "Reference",
        "targetProfile": [
          "Coverage",
          "ClaimResponse"
        ],
        "array": true
      },
      "supportingInfo": {
        "key": "supportingInfo",
        "display": "Supporting Info",
        "description": "Additional clinical information about the patient or specimen that may influence the services or their interpretations.     This information includes diagnosis, clinical findings and other observations.  In laboratory ordering these are typically referred to as \"ask at order entry questions (AOEs)\".  This includes observations explicitly requested by the producer (filler) to provide context or supporting information needed to complete the order. For example,  reporting the amount of inspired oxygen for blood gas measurements.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ],
        "array": true
      },
      "specimen": {
        "key": "specimen",
        "display": "Specimen",
        "description": "One or more specimens that the laboratory procedure will use.",
        "type": "Reference",
        "targetProfile": [
          "Specimen"
        ],
        "array": true
      },
      "bodySite": {
        "key": "bodySite",
        "display": "Body Site",
        "description": "Anatomic location where the procedure should be performed. This is the target site.",
        "type": "CodeableConcept",
        "array": true
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "Any other notes and comments made about the service request. For example, internal billing notes.",
        "type": "Annotation",
        "array": true
      },
      "patientInstruction": {
        "key": "patientInstruction",
        "display": "Patient Instruction",
        "description": "Instructions in terms that are understood by the patient or consumer.",
        "type": "string"
      },
      "relevantHistory": {
        "key": "relevantHistory",
        "display": "Relevant History",
        "description": "Key events in the history of the request.",
        "type": "Reference",
        "targetProfile": [
          "Provenance"
        ],
        "array": true
      }
    }
  },
  "Slot": {
    "display": "Slot",
    "description": "A slot of time on a schedule that may be available for booking appointments.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "External Ids for this item.",
        "type": "Identifier",
        "array": true
      },
      "serviceCategory": {
        "key": "serviceCategory",
        "display": "Service Category",
        "description": "A broad categorization of the service that is to be performed during this appointment.",
        "type": "CodeableConcept",
        "array": true
      },
      "serviceType": {
        "key": "serviceType",
        "display": "Service Type",
        "description": "The type of appointments that can be booked into this slot (ideally this would be an identifiable service - which is at a location, rather than the location itself). If provided then this overrides the value provided on the availability resource.",
        "type": "CodeableConcept",
        "array": true
      },
      "specialty": {
        "key": "specialty",
        "display": "Specialty",
        "description": "The specialty of a practitioner that would be required to perform the service requested in this appointment.",
        "type": "CodeableConcept",
        "array": true
      },
      "appointmentType": {
        "key": "appointmentType",
        "display": "Appointment Type",
        "description": "The style of appointment or patient that may be booked in the slot (not service type).",
        "type": "CodeableConcept"
      },
      "schedule": {
        "key": "schedule",
        "display": "Schedule",
        "description": "The schedule resource that this slot defines an interval of status information.",
        "type": "Reference",
        "targetProfile": [
          "Schedule"
        ]
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "busy | free | busy-unavailable | busy-tentative | entered-in-error.",
        "type": "enum",
        "enumValues": [
          "busy",
          "free",
          "busy-unavailable",
          "busy-tentative",
          "entered-in-error"
        ]
      },
      "start": {
        "key": "start",
        "display": "Start",
        "description": "Date/Time that the slot is to begin.",
        "type": "instant"
      },
      "end": {
        "key": "end",
        "display": "End",
        "description": "Date/Time that the slot is to conclude.",
        "type": "instant"
      },
      "overbooked": {
        "key": "overbooked",
        "display": "Overbooked",
        "description": "This slot has already been overbooked, appointments are unlikely to be accepted for this time.",
        "type": "boolean"
      },
      "comment": {
        "key": "comment",
        "display": "Comment",
        "description": "Comments on the slot to describe any extended information. Such as custom constraints on the slot.",
        "type": "string"
      }
    }
  },
  "Specimen": {
    "display": "Specimen",
    "description": "A sample to be used for analysis.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Id for specimen.",
        "type": "Identifier",
        "array": true
      },
      "accessionIdentifier": {
        "key": "accessionIdentifier",
        "display": "Accession Identifier",
        "description": "The identifier assigned by the lab when accessioning specimen(s). This is not necessarily the same as the specimen identifier, depending on local lab procedures.",
        "type": "Identifier"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The availability of the specimen.",
        "type": "enum",
        "enumValues": [
          "available",
          "unavailable",
          "unsatisfactory",
          "entered-in-error"
        ]
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The kind of material that forms the specimen.",
        "type": "CodeableConcept"
      },
      "subject": {
        "key": "subject",
        "display": "Subject",
        "description": "Where the specimen came from. This may be from patient(s), from a location (e.g., the source of an environmental sample), or a sampling of a substance or a device.",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Group",
          "Device",
          "Substance",
          "Location"
        ]
      },
      "receivedTime": {
        "key": "receivedTime",
        "display": "Received Time",
        "description": "Time when specimen was received for processing or testing.",
        "type": "dateTime"
      },
      "parent": {
        "key": "parent",
        "display": "Parent",
        "description": "Reference to the parent (source) specimen which is used when the specimen was either derived from or a component of another specimen.",
        "type": "Reference",
        "targetProfile": [
          "Specimen"
        ],
        "array": true
      },
      "request": {
        "key": "request",
        "display": "Request",
        "description": "Details concerning a service request that required a specimen to be collected.",
        "type": "Reference",
        "targetProfile": [
          "ServiceRequest"
        ],
        "array": true
      },
      "collection": {
        "key": "collection",
        "display": "Collection",
        "description": "Details concerning the specimen collection.",
        "type": "Specimen_Collection"
      },
      "processing": {
        "key": "processing",
        "display": "Processing",
        "description": "Details concerning processing and processing steps for the specimen.",
        "type": "Specimen_Processing",
        "array": true
      },
      "container": {
        "key": "container",
        "display": "Container",
        "description": "The container holding the specimen.  The recursive nature of containers; i.e. blood in tube in tray in rack is not addressed here.",
        "type": "Specimen_Container",
        "array": true
      },
      "condition": {
        "key": "condition",
        "display": "Condition",
        "description": "A mode or state of being that describes the nature of the specimen.",
        "type": "CodeableConcept",
        "array": true
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "To communicate any details or issues about the specimen or during the specimen collection. (for example: broken vial, sent with patient, frozen).",
        "type": "Annotation",
        "array": true
      }
    }
  },
  "Specimen_Collection": {
    "display": "Specimen Collection",
    "description": "Collection details",
    "properties": {
      "collector": {
        "key": "collector",
        "display": "Collector",
        "description": "Person who collected the specimen.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole"
        ]
      },
      "collected[x]": {
        "key": "collected[x]",
        "display": "Collected[x]",
        "description": "Time when specimen was collected from subject - the physiologically relevant time.",
        "type": "dateTime"
      },
      "duration": {
        "key": "duration",
        "display": "Duration",
        "description": "The span of time over which the collection of a specimen occurred.",
        "type": "Duration"
      },
      "quantity": {
        "key": "quantity",
        "display": "Quantity",
        "description": "The quantity of specimen collected; for instance the volume of a blood sample, or the physical measurement of an anatomic pathology sample.",
        "type": "Quantity"
      },
      "method": {
        "key": "method",
        "display": "Method",
        "description": "A coded value specifying the technique that is used to perform the procedure.",
        "type": "CodeableConcept"
      },
      "bodySite": {
        "key": "bodySite",
        "display": "Body Site",
        "description": "Anatomical location from which the specimen was collected (if subject is a patient). This is the target site.  This element is not used for environmental specimens.",
        "type": "CodeableConcept"
      },
      "fastingStatus[x]": {
        "key": "fastingStatus[x]",
        "display": "Fasting Status[x]",
        "description": "Abstinence or reduction from some or all food, drink, or both, for a period of time prior to sample collection.",
        "type": "CodeableConcept"
      }
    },
    "backboneElement": true
  },
  "Specimen_Processing": {
    "display": "Specimen Processing",
    "description": "Processing and processing step details",
    "properties": {
      "description": {
        "key": "description",
        "display": "Description",
        "description": "Textual description of procedure.",
        "type": "string"
      },
      "procedure": {
        "key": "procedure",
        "display": "Procedure",
        "description": "A coded value specifying the procedure used to process the specimen.",
        "type": "CodeableConcept"
      },
      "additive": {
        "key": "additive",
        "display": "Additive",
        "description": "Material used in the processing step.",
        "type": "Reference",
        "targetProfile": [
          "Substance"
        ],
        "array": true
      },
      "time[x]": {
        "key": "time[x]",
        "display": "Time[x]",
        "description": "A record of the time or period when the specimen processing occurred.  For example the time of sample fixation or the period of time the sample was in formalin.",
        "type": "dateTime"
      }
    },
    "backboneElement": true
  },
  "Specimen_Container": {
    "display": "Specimen Container",
    "description": "Direct container of specimen (tube/slide, etc.)",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Id for container. There may be multiple; a manufacturer's bar code, lab assigned identifier, etc. The container ID may differ from the specimen id in some circumstances.",
        "type": "Identifier",
        "array": true
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "Textual description of the container.",
        "type": "string"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The type of container associated with the specimen (e.g. slide, aliquot, etc.).",
        "type": "CodeableConcept"
      },
      "capacity": {
        "key": "capacity",
        "display": "Capacity",
        "description": "The capacity (volume or other measure) the container may contain.",
        "type": "Quantity"
      },
      "specimenQuantity": {
        "key": "specimenQuantity",
        "display": "Specimen Quantity",
        "description": "The quantity of specimen in the container; may be volume, dimensions, or other appropriate measurements, depending on the specimen type.",
        "type": "Quantity"
      },
      "additive[x]": {
        "key": "additive[x]",
        "display": "Additive[x]",
        "description": "Introduced substance to preserve, maintain or enhance the specimen. Examples: Formalin, Citrate, EDTA.",
        "type": "CodeableConcept"
      }
    },
    "backboneElement": true
  },
  "SpecimenDefinition": {
    "display": "SpecimenDefinition",
    "description": "A kind of specimen with associated set of requirements.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "A business identifier associated with the kind of specimen.",
        "type": "Identifier"
      },
      "typeCollected": {
        "key": "typeCollected",
        "display": "Type Collected",
        "description": "The kind of material to be collected.",
        "type": "CodeableConcept"
      },
      "patientPreparation": {
        "key": "patientPreparation",
        "display": "Patient Preparation",
        "description": "Preparation of the patient for specimen collection.",
        "type": "CodeableConcept",
        "array": true
      },
      "timeAspect": {
        "key": "timeAspect",
        "display": "Time Aspect",
        "description": "Time aspect of specimen collection (duration or offset).",
        "type": "string"
      },
      "collection": {
        "key": "collection",
        "display": "Collection",
        "description": "The action to be performed for collecting the specimen.",
        "type": "CodeableConcept",
        "array": true
      },
      "typeTested": {
        "key": "typeTested",
        "display": "Type Tested",
        "description": "Specimen conditioned in a container as expected by the testing laboratory.",
        "type": "SpecimenDefinition_TypeTested",
        "array": true
      }
    }
  },
  "SpecimenDefinition_TypeTested": {
    "display": "Specimen Definition Type Tested",
    "description": "Specimen in container intended for testing by lab",
    "properties": {
      "isDerived": {
        "key": "isDerived",
        "display": "Is Derived",
        "description": "Primary of secondary specimen.",
        "type": "boolean"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The kind of specimen conditioned for testing expected by lab.",
        "type": "CodeableConcept"
      },
      "preference": {
        "key": "preference",
        "display": "Preference",
        "description": "The preference for this type of conditioned specimen.",
        "type": "enum",
        "enumValues": [
          "preferred",
          "alternate"
        ]
      },
      "container": {
        "key": "container",
        "display": "Container",
        "description": "The specimen's container.",
        "type": "SpecimenDefinition_TypeTested_Container"
      },
      "requirement": {
        "key": "requirement",
        "display": "Requirement",
        "description": "Requirements for delivery and special handling of this kind of conditioned specimen.",
        "type": "string"
      },
      "retentionTime": {
        "key": "retentionTime",
        "display": "Retention Time",
        "description": "The usual time that a specimen of this kind is retained after the ordered tests are completed, for the purpose of additional testing.",
        "type": "Duration"
      },
      "rejectionCriterion": {
        "key": "rejectionCriterion",
        "display": "Rejection Criterion",
        "description": "Criterion for rejection of the specimen in its container by the laboratory.",
        "type": "CodeableConcept",
        "array": true
      },
      "handling": {
        "key": "handling",
        "display": "Handling",
        "description": "Set of instructions for preservation/transport of the specimen at a defined temperature interval, prior the testing process.",
        "type": "SpecimenDefinition_TypeTested_Handling",
        "array": true
      }
    },
    "backboneElement": true
  },
  "SpecimenDefinition_TypeTested_Container": {
    "display": "Specimen Definition Type Tested_ Container",
    "description": "The specimen's container",
    "properties": {
      "material": {
        "key": "material",
        "display": "Material",
        "description": "The type of material of the container.",
        "type": "CodeableConcept"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The type of container used to contain this kind of specimen.",
        "type": "CodeableConcept"
      },
      "cap": {
        "key": "cap",
        "display": "Cap",
        "description": "Color of container cap.",
        "type": "CodeableConcept"
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "The textual description of the kind of container.",
        "type": "string"
      },
      "capacity": {
        "key": "capacity",
        "display": "Capacity",
        "description": "The capacity (volume or other measure) of this kind of container.",
        "type": "Quantity"
      },
      "minimumVolume[x]": {
        "key": "minimumVolume[x]",
        "display": "Minimum Volume[x]",
        "description": "The minimum volume to be conditioned in the container.",
        "type": "Quantity"
      },
      "additive": {
        "key": "additive",
        "display": "Additive",
        "description": "Substance introduced in the kind of container to preserve, maintain or enhance the specimen. Examples: Formalin, Citrate, EDTA.",
        "type": "SpecimenDefinition_TypeTested_Container_Additive",
        "array": true
      },
      "preparation": {
        "key": "preparation",
        "display": "Preparation",
        "description": "Special processing that should be applied to the container for this kind of specimen.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "SpecimenDefinition_TypeTested_Container_Additive": {
    "display": "Specimen Definition Type Tested_ Container_ Additive",
    "description": "Additive associated with container",
    "properties": {
      "additive[x]": {
        "key": "additive[x]",
        "display": "Additive[x]",
        "description": "Substance introduced in the kind of container to preserve, maintain or enhance the specimen. Examples: Formalin, Citrate, EDTA.",
        "type": "CodeableConcept"
      }
    },
    "backboneElement": true
  },
  "SpecimenDefinition_TypeTested_Handling": {
    "display": "Specimen Definition Type Tested_ Handling",
    "description": "Specimen handling before testing",
    "properties": {
      "temperatureQualifier": {
        "key": "temperatureQualifier",
        "display": "Temperature Qualifier",
        "description": "It qualifies the interval of temperature, which characterizes an occurrence of handling. Conditions that are not related to temperature may be handled in the instruction element.",
        "type": "CodeableConcept"
      },
      "temperatureRange": {
        "key": "temperatureRange",
        "display": "Temperature Range",
        "description": "The temperature interval for this set of handling instructions.",
        "type": "Range"
      },
      "maxDuration": {
        "key": "maxDuration",
        "display": "Max Duration",
        "description": "The maximum time interval of preservation of the specimen with these conditions.",
        "type": "Duration"
      },
      "instruction": {
        "key": "instruction",
        "display": "Instruction",
        "description": "Additional textual instructions for the preservation or transport of the specimen. For instance, 'Protect from light exposure'.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "StructureDefinition": {
    "display": "StructureDefinition",
    "description": "A definition of a FHIR structure. This resource is used to describe the underlying resources, data types defined in FHIR, and also for describing extensions and constraints on resources and data types.",
    "properties": {
      "url": {
        "key": "url",
        "display": "Url",
        "description": "An absolute URI that is used to identify this structure definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this structure definition is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the structure definition is stored on different servers.",
        "type": "uri"
      },
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "A formal identifier that is used to identify this structure definition when it is represented in other formats, or referenced in a specification, model, design or an instance.",
        "type": "Identifier",
        "array": true
      },
      "version": {
        "key": "version",
        "display": "Version",
        "description": "The identifier that is used to identify this version of the structure definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the structure definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
        "type": "string"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A natural language name identifying the structure definition. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
        "type": "string"
      },
      "title": {
        "key": "title",
        "display": "Title",
        "description": "A short, descriptive, user-friendly title for the structure definition.",
        "type": "string"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of this structure definition. Enables tracking the life-cycle of the content.",
        "type": "enum",
        "enumValues": [
          "draft",
          "active",
          "retired",
          "unknown"
        ]
      },
      "experimental": {
        "key": "experimental",
        "display": "Experimental",
        "description": "A Boolean value to indicate that this structure definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
        "type": "boolean"
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "The date  (and optionally time) when the structure definition was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the structure definition changes.",
        "type": "dateTime"
      },
      "publisher": {
        "key": "publisher",
        "display": "Publisher",
        "description": "The name of the organization or individual that published the structure definition.",
        "type": "string"
      },
      "contact": {
        "key": "contact",
        "display": "Contact",
        "description": "Contact details to assist a user in finding and communicating with the publisher.",
        "type": "ContactDetail",
        "array": true
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A free text natural language description of the structure definition from a consumer's perspective.",
        "type": "markdown"
      },
      "useContext": {
        "key": "useContext",
        "display": "Use Context",
        "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate structure definition instances.",
        "type": "UsageContext",
        "array": true
      },
      "jurisdiction": {
        "key": "jurisdiction",
        "display": "Jurisdiction",
        "description": "A legal or geographic region in which the structure definition is intended to be used.",
        "type": "CodeableConcept",
        "array": true
      },
      "purpose": {
        "key": "purpose",
        "display": "Purpose",
        "description": "Explanation of why this structure definition is needed and why it has been designed as it has.",
        "type": "markdown"
      },
      "copyright": {
        "key": "copyright",
        "display": "Copyright",
        "description": "A copyright statement relating to the structure definition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the structure definition.",
        "type": "markdown"
      },
      "keyword": {
        "key": "keyword",
        "display": "Keyword",
        "description": "A set of key words or terms from external terminologies that may be used to assist with indexing and searching of templates nby describing the use of this structure definition, or the content it describes.",
        "type": "Coding",
        "array": true
      },
      "fhirVersion": {
        "key": "fhirVersion",
        "display": "Fhir Version",
        "description": "The version of the FHIR specification on which this StructureDefinition is based - this is the formal version of the specification, without the revision number, e.g. [publication].[major].[minor], which is 4.0.1. for this version.",
        "type": "enum",
        "enumValues": [
          "FHIR Version this StructureDefinition targets"
        ]
      },
      "mapping": {
        "key": "mapping",
        "display": "Mapping",
        "description": "An external specification that the content is mapped to.",
        "type": "StructureDefinition_Mapping",
        "array": true
      },
      "kind": {
        "key": "kind",
        "display": "Kind",
        "description": "Defines the kind of structure that this definition is describing.",
        "type": "enum",
        "enumValues": [
          "primitive-type",
          "complex-type",
          "resource",
          "logical"
        ]
      },
      "abstract": {
        "key": "abstract",
        "display": "Abstract",
        "description": "Whether structure this definition describes is abstract or not  - that is, whether the structure is not intended to be instantiated. For Resources and Data types, abstract types will never be exchanged  between systems.",
        "type": "boolean"
      },
      "context": {
        "key": "context",
        "display": "Context",
        "description": "Identifies the types of resource or data type elements to which the extension can be applied.",
        "type": "StructureDefinition_Context",
        "array": true
      },
      "contextInvariant": {
        "key": "contextInvariant",
        "display": "Context Invariant",
        "description": "A set of rules as FHIRPath Invariants about when the extension can be used (e.g. co-occurrence variants for the extension). All the rules must be true.",
        "type": "string",
        "array": true
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The type this structure describes. If the derivation kind is 'specialization' then this is the master definition for a type, and there is always one of these (a data type, an extension, a resource, including abstract ones). Otherwise the structure definition is a constraint on the stated type (and in this case, the type cannot be an abstract type).  References are URLs that are relative to http://hl7.org/fhir/StructureDefinition e.g. \"string\" is a reference to http://hl7.org/fhir/StructureDefinition/string. Absolute URLs are only allowed in logical models.",
        "type": "uri"
      },
      "baseDefinition": {
        "key": "baseDefinition",
        "display": "Base Definition",
        "description": "An absolute URI that is the base structure from which this type is derived, either by specialization or constraint.",
        "type": "canonical"
      },
      "derivation": {
        "key": "derivation",
        "display": "Derivation",
        "description": "How the type relates to the baseDefinition.",
        "type": "enum",
        "enumValues": [
          "specialization",
          "constraint - How relates to base definition"
        ]
      },
      "snapshot": {
        "key": "snapshot",
        "display": "Snapshot",
        "description": "A snapshot view is expressed in a standalone form that can be used and interpreted without considering the base StructureDefinition.",
        "type": "StructureDefinition_Snapshot"
      },
      "differential": {
        "key": "differential",
        "display": "Differential",
        "description": "A differential view is expressed relative to the base StructureDefinition - a statement of differences that it applies.",
        "type": "StructureDefinition_Differential"
      }
    }
  },
  "StructureDefinition_Mapping": {
    "display": "Structure Definition Mapping",
    "description": "External specification that the content is mapped to",
    "properties": {
      "identity": {
        "key": "identity",
        "display": "Identity",
        "description": "An Internal id that is used to identify this mapping set when specific mappings are made.",
        "type": "id"
      },
      "uri": {
        "key": "uri",
        "display": "Uri",
        "description": "An absolute URI that identifies the specification that this mapping is expressed to.",
        "type": "uri"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A name for the specification that is being mapped to.",
        "type": "string"
      },
      "comment": {
        "key": "comment",
        "display": "Comment",
        "description": "Comments about this mapping, including version notes, issues, scope limitations, and other important notes for usage.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "StructureDefinition_Context": {
    "display": "Structure Definition Context",
    "description": "If an extension, where it can be used in instances",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Defines how to interpret the expression that defines what the context of the extension is.",
        "type": "enum",
        "enumValues": [
          "fhirpath",
          "element",
          "extension"
        ]
      },
      "expression": {
        "key": "expression",
        "display": "Expression",
        "description": "An expression that defines where an extension can be used in resources.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "StructureDefinition_Snapshot": {
    "display": "Structure Definition Snapshot",
    "description": "Snapshot view of the structure",
    "properties": {},
    "backboneElement": true
  },
  "StructureDefinition_Differential": {
    "display": "Structure Definition Differential",
    "description": "Differential view of the structure",
    "properties": {},
    "backboneElement": true
  },
  "StructureMap": {
    "display": "StructureMap",
    "description": "A Map of relationships between 2 structures that can be used to transform data.",
    "properties": {
      "url": {
        "key": "url",
        "display": "Url",
        "description": "An absolute URI that is used to identify this structure map when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this structure map is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the structure map is stored on different servers.",
        "type": "uri"
      },
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "A formal identifier that is used to identify this structure map when it is represented in other formats, or referenced in a specification, model, design or an instance.",
        "type": "Identifier",
        "array": true
      },
      "version": {
        "key": "version",
        "display": "Version",
        "description": "The identifier that is used to identify this version of the structure map when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the structure map author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
        "type": "string"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A natural language name identifying the structure map. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
        "type": "string"
      },
      "title": {
        "key": "title",
        "display": "Title",
        "description": "A short, descriptive, user-friendly title for the structure map.",
        "type": "string"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of this structure map. Enables tracking the life-cycle of the content.",
        "type": "enum",
        "enumValues": [
          "draft",
          "active",
          "retired",
          "unknown"
        ]
      },
      "experimental": {
        "key": "experimental",
        "display": "Experimental",
        "description": "A Boolean value to indicate that this structure map is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
        "type": "boolean"
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "The date  (and optionally time) when the structure map was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the structure map changes.",
        "type": "dateTime"
      },
      "publisher": {
        "key": "publisher",
        "display": "Publisher",
        "description": "The name of the organization or individual that published the structure map.",
        "type": "string"
      },
      "contact": {
        "key": "contact",
        "display": "Contact",
        "description": "Contact details to assist a user in finding and communicating with the publisher.",
        "type": "ContactDetail",
        "array": true
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A free text natural language description of the structure map from a consumer's perspective.",
        "type": "markdown"
      },
      "useContext": {
        "key": "useContext",
        "display": "Use Context",
        "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate structure map instances.",
        "type": "UsageContext",
        "array": true
      },
      "jurisdiction": {
        "key": "jurisdiction",
        "display": "Jurisdiction",
        "description": "A legal or geographic region in which the structure map is intended to be used.",
        "type": "CodeableConcept",
        "array": true
      },
      "purpose": {
        "key": "purpose",
        "display": "Purpose",
        "description": "Explanation of why this structure map is needed and why it has been designed as it has.",
        "type": "markdown"
      },
      "copyright": {
        "key": "copyright",
        "display": "Copyright",
        "description": "A copyright statement relating to the structure map and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the structure map.",
        "type": "markdown"
      },
      "structure": {
        "key": "structure",
        "display": "Structure",
        "description": "A structure definition used by this map. The structure definition may describe instances that are converted, or the instances that are produced.",
        "type": "StructureMap_Structure",
        "array": true
      },
      "import": {
        "key": "import",
        "display": "Import",
        "description": "Other maps used by this map (canonical URLs).",
        "type": "canonical",
        "array": true
      },
      "group": {
        "key": "group",
        "display": "Group",
        "description": "Organizes the mapping into manageable chunks for human review/ease of maintenance.",
        "type": "StructureMap_Group",
        "array": true
      }
    }
  },
  "StructureMap_Structure": {
    "display": "Structure Map Structure",
    "description": "Structure Definition used by this map",
    "properties": {
      "url": {
        "key": "url",
        "display": "Url",
        "description": "The canonical reference to the structure.",
        "type": "canonical"
      },
      "mode": {
        "key": "mode",
        "display": "Mode",
        "description": "How the referenced structure is used in this mapping.",
        "type": "enum",
        "enumValues": [
          "source",
          "queried",
          "target",
          "produced"
        ]
      },
      "alias": {
        "key": "alias",
        "display": "Alias",
        "description": "The name used for this type in the map.",
        "type": "string"
      },
      "documentation": {
        "key": "documentation",
        "display": "Documentation",
        "description": "Documentation that describes how the structure is used in the mapping.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "StructureMap_Group": {
    "display": "Structure Map Group",
    "description": "Named sections for reader convenience",
    "properties": {
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A unique name for the group for the convenience of human readers.",
        "type": "id"
      },
      "extends": {
        "key": "extends",
        "display": "Extends",
        "description": "Another group that this group adds rules to.",
        "type": "id"
      },
      "typeMode": {
        "key": "typeMode",
        "display": "Type Mode",
        "description": "If this is the default rule set to apply for the source type or this combination of types.",
        "type": "enum",
        "enumValues": [
          "none",
          "types",
          "type-and-types"
        ]
      },
      "documentation": {
        "key": "documentation",
        "display": "Documentation",
        "description": "Additional supporting documentation that explains the purpose of the group and the types of mappings within it.",
        "type": "string"
      },
      "input": {
        "key": "input",
        "display": "Input",
        "description": "A name assigned to an instance of data. The instance must be provided when the mapping is invoked.",
        "type": "StructureMap_Group_Input",
        "array": true
      },
      "rule": {
        "key": "rule",
        "display": "Rule",
        "description": "Transform Rule from source to target.",
        "type": "StructureMap_Group_Rule",
        "array": true
      }
    },
    "backboneElement": true
  },
  "StructureMap_Group_Input": {
    "display": "Structure Map Group_ Input",
    "description": "Named instance provided when invoking the map",
    "properties": {
      "name": {
        "key": "name",
        "display": "Name",
        "description": "Name for this instance of data.",
        "type": "id"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Type for this instance of data.",
        "type": "string"
      },
      "mode": {
        "key": "mode",
        "display": "Mode",
        "description": "Mode for this instance of data.",
        "type": "enum",
        "enumValues": [
          "source",
          "target"
        ]
      },
      "documentation": {
        "key": "documentation",
        "display": "Documentation",
        "description": "Documentation for this instance of data.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "StructureMap_Group_Rule": {
    "display": "Structure Map Group_ Rule",
    "description": "Transform Rule from source to target",
    "properties": {
      "name": {
        "key": "name",
        "display": "Name",
        "description": "Name of the rule for internal references.",
        "type": "id"
      },
      "source": {
        "key": "source",
        "display": "Source",
        "description": "Source inputs to the mapping.",
        "type": "StructureMap_Group_Rule_Source",
        "array": true
      },
      "target": {
        "key": "target",
        "display": "Target",
        "description": "Content to create because of this mapping rule.",
        "type": "StructureMap_Group_Rule_Target",
        "array": true
      },
      "rule": {
        "key": "rule",
        "display": "Rule",
        "description": "Rules contained in this rule.",
        "type": "UNKNOWN"
      },
      "dependent": {
        "key": "dependent",
        "display": "Dependent",
        "description": "Which other rules to apply in the context of this rule.",
        "type": "StructureMap_Group_Rule_Dependent",
        "array": true
      },
      "documentation": {
        "key": "documentation",
        "display": "Documentation",
        "description": "Documentation for this instance of data.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "StructureMap_Group_Rule_Source": {
    "display": "Structure Map Group_ Rule_ Source",
    "description": "Source inputs to the mapping",
    "properties": {
      "context": {
        "key": "context",
        "display": "Context",
        "description": "Type or variable this rule applies to.",
        "type": "id"
      },
      "min": {
        "key": "min",
        "display": "Min",
        "description": "Specified minimum cardinality for the element. This is optional; if present, it acts an implicit check on the input content.",
        "type": "integer"
      },
      "max": {
        "key": "max",
        "display": "Max",
        "description": "Specified maximum cardinality for the element - a number or a \"*\". This is optional; if present, it acts an implicit check on the input content (* just serves as documentation; it's the default value).",
        "type": "string"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Specified type for the element. This works as a condition on the mapping - use for polymorphic elements.",
        "type": "string"
      },
      "defaultValue[x]": {
        "key": "defaultValue[x]",
        "display": "Default Value[x]",
        "description": "A value to use if there is no existing value in the source object.",
        "type": "base64Binary"
      },
      "listMode": {
        "key": "listMode",
        "display": "List Mode",
        "description": "How to handle the list mode for this element.",
        "type": "enum",
        "enumValues": [
          "first",
          "not_first",
          "last",
          "not_last",
          "only_one"
        ]
      },
      "variable": {
        "key": "variable",
        "display": "Variable",
        "description": "Named context for field, if a field is specified.",
        "type": "id"
      },
      "condition": {
        "key": "condition",
        "display": "Condition",
        "description": "FHIRPath expression  - must be true or the rule does not apply.",
        "type": "string"
      },
      "check": {
        "key": "check",
        "display": "Check",
        "description": "FHIRPath expression  - must be true or the mapping engine throws an error instead of completing.",
        "type": "string"
      },
      "logMessage": {
        "key": "logMessage",
        "display": "Log Message",
        "description": "A FHIRPath expression which specifies a message to put in the transform log when content matching the source rule is found.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "StructureMap_Group_Rule_Target": {
    "display": "Structure Map Group_ Rule_ Target",
    "description": "Content to create because of this mapping rule",
    "properties": {
      "context": {
        "key": "context",
        "display": "Context",
        "description": "Type or variable this rule applies to.",
        "type": "id"
      },
      "contextType": {
        "key": "contextType",
        "display": "Context Type",
        "description": "How to interpret the context.",
        "type": "enum",
        "enumValues": [
          "type",
          "variable"
        ]
      },
      "variable": {
        "key": "variable",
        "display": "Variable",
        "description": "Named context for field, if desired, and a field is specified.",
        "type": "id"
      },
      "listMode": {
        "key": "listMode",
        "display": "List Mode",
        "description": "If field is a list, how to manage the list.",
        "type": "enum",
        "enumValues": [
          "first",
          "share",
          "last",
          "collate"
        ],
        "array": true
      },
      "listRuleId": {
        "key": "listRuleId",
        "display": "List Rule Id",
        "description": "Internal rule reference for shared list items.",
        "type": "id"
      },
      "transform": {
        "key": "transform",
        "display": "Transform",
        "description": "How the data is copied / created.",
        "type": "enum",
        "enumValues": [
          "create",
          "copy +"
        ]
      },
      "parameter": {
        "key": "parameter",
        "display": "Parameter",
        "description": "Parameters to the transform.",
        "type": "StructureMap_Group_Rule_Target_Parameter",
        "array": true
      }
    },
    "backboneElement": true
  },
  "StructureMap_Group_Rule_Target_Parameter": {
    "display": "Structure Map Group_ Rule_ Target_ Parameter",
    "description": "Parameters to the transform",
    "properties": {
      "value[x]": {
        "key": "value[x]",
        "display": "Value[x]",
        "description": "Parameter value - variable or literal.",
        "type": "id"
      }
    },
    "backboneElement": true
  },
  "StructureMap_Group_Rule_Dependent": {
    "display": "Structure Map Group_ Rule_ Dependent",
    "description": "Which other rules to apply in the context of this rule",
    "properties": {
      "name": {
        "key": "name",
        "display": "Name",
        "description": "Name of a rule or group to apply.",
        "type": "id"
      },
      "variable": {
        "key": "variable",
        "display": "Variable",
        "description": "Variable to pass to the rule or group.",
        "type": "string",
        "array": true
      }
    },
    "backboneElement": true
  },
  "Subscription": {
    "display": "Subscription",
    "description": "The subscription resource is used to define a push-based subscription from a server to another system. Once a subscription is registered with the server, the server checks every resource that is created or updated, and if the resource matches the given criteria, it sends a message on the defined \"channel\" so that another system can take an appropriate action.",
    "properties": {
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of the subscription, which marks the server state for managing the subscription.",
        "type": "enum",
        "enumValues": [
          "requested",
          "active",
          "error",
          "off"
        ]
      },
      "contact": {
        "key": "contact",
        "display": "Contact",
        "description": "Contact details for a human to contact about the subscription. The primary use of this for system administrator troubleshooting.",
        "type": "ContactPoint",
        "array": true
      },
      "end": {
        "key": "end",
        "display": "End",
        "description": "The time for the server to turn the subscription off.",
        "type": "instant"
      },
      "reason": {
        "key": "reason",
        "display": "Reason",
        "description": "A description of why this subscription is defined.",
        "type": "string"
      },
      "criteria": {
        "key": "criteria",
        "display": "Criteria",
        "description": "The rules that the server should use to determine when to generate notifications for this subscription.",
        "type": "string"
      },
      "error": {
        "key": "error",
        "display": "Error",
        "description": "A record of the last error that occurred when the server processed a notification.",
        "type": "string"
      },
      "channel": {
        "key": "channel",
        "display": "Channel",
        "description": "Details where to send notifications when resources are received that meet the criteria.",
        "type": "Subscription_Channel"
      }
    }
  },
  "Subscription_Channel": {
    "display": "Subscription Channel",
    "description": "The channel on which to report matches to the criteria",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The type of channel to send notifications on.",
        "type": "enum",
        "enumValues": [
          "rest-hook",
          "websocket",
          "email",
          "sms",
          "message"
        ]
      },
      "endpoint": {
        "key": "endpoint",
        "display": "Endpoint",
        "description": "The url that describes the actual end-point to send messages to.",
        "type": "url"
      },
      "payload": {
        "key": "payload",
        "display": "Payload",
        "description": "The mime type to send the payload in - either application/fhir+xml, or application/fhir+json. If the payload is not present, then there is no payload in the notification, just a notification. The mime type \"text/plain\" may also be used for Email and SMS subscriptions.",
        "type": "enum",
        "enumValues": [
          "MIME type to send, or omit for no payload"
        ]
      },
      "header": {
        "key": "header",
        "display": "Header",
        "description": "Additional headers / information to send as part of the notification.",
        "type": "string",
        "array": true
      }
    },
    "backboneElement": true
  },
  "Substance": {
    "display": "Substance",
    "description": "A homogeneous material with a definite composition.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Unique identifier for the substance.",
        "type": "Identifier",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "A code to indicate if the substance is actively used.",
        "type": "enum",
        "enumValues": [
          "active",
          "inactive",
          "entered-in-error"
        ]
      },
      "category": {
        "key": "category",
        "display": "Category",
        "description": "A code that classifies the general type of substance.  This is used  for searching, sorting and display purposes.",
        "type": "CodeableConcept",
        "array": true
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "A code (or set of codes) that identify this substance.",
        "type": "CodeableConcept"
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A description of the substance - its appearance, handling requirements, and other usage notes.",
        "type": "string"
      },
      "instance": {
        "key": "instance",
        "display": "Instance",
        "description": "Substance may be used to describe a kind of substance, or a specific package/container of the substance: an instance.",
        "type": "Substance_Instance",
        "array": true
      },
      "ingredient": {
        "key": "ingredient",
        "display": "Ingredient",
        "description": "A substance can be composed of other substances.",
        "type": "Substance_Ingredient",
        "array": true
      }
    }
  },
  "Substance_Instance": {
    "display": "Substance Instance",
    "description": "If this describes a specific package/container of the substance",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Identifier associated with the package/container (usually a label affixed directly).",
        "type": "Identifier"
      },
      "expiry": {
        "key": "expiry",
        "display": "Expiry",
        "description": "When the substance is no longer valid to use. For some substances, a single arbitrary date is used for expiry.",
        "type": "dateTime"
      },
      "quantity": {
        "key": "quantity",
        "display": "Quantity",
        "description": "The amount of the substance.",
        "type": "Quantity"
      }
    },
    "backboneElement": true
  },
  "Substance_Ingredient": {
    "display": "Substance Ingredient",
    "description": "Composition information about the substance",
    "properties": {
      "quantity": {
        "key": "quantity",
        "display": "Quantity",
        "description": "The amount of the ingredient in the substance - a concentration ratio.",
        "type": "Ratio"
      },
      "substance[x]": {
        "key": "substance[x]",
        "display": "Substance[x]",
        "description": "Another substance that is a component of this substance.",
        "type": "CodeableConcept"
      }
    },
    "backboneElement": true
  },
  "SubstanceNucleicAcid": {
    "display": "SubstanceNucleicAcid",
    "description": "Nucleic acids are defined by three distinct elements: the base, sugar and linkage. Individual substance/moiety IDs will be created for each of these elements. The nucleotide sequence will be always entered in the 5’-3’ direction.",
    "properties": {
      "sequenceType": {
        "key": "sequenceType",
        "display": "Sequence Type",
        "description": "The type of the sequence shall be specified based on a controlled vocabulary.",
        "type": "CodeableConcept"
      },
      "numberOfSubunits": {
        "key": "numberOfSubunits",
        "display": "Number Of Subunits",
        "description": "The number of linear sequences of nucleotides linked through phosphodiester bonds shall be described. Subunits would be strands of nucleic acids that are tightly associated typically through Watson-Crick base pairing. NOTE: If not specified in the reference source, the assumption is that there is 1 subunit.",
        "type": "integer"
      },
      "areaOfHybridisation": {
        "key": "areaOfHybridisation",
        "display": "Area Of Hybridisation",
        "description": "The area of hybridisation shall be described if applicable for double stranded RNA or DNA. The number associated with the subunit followed by the number associated to the residue shall be specified in increasing order. The underscore “” shall be used as separator as follows: “Subunitnumber Residue”.",
        "type": "string"
      },
      "oligoNucleotideType": {
        "key": "oligoNucleotideType",
        "display": "Oligo Nucleotide Type",
        "description": "(TBC).",
        "type": "CodeableConcept"
      },
      "subunit": {
        "key": "subunit",
        "display": "Subunit",
        "description": "Subunits are listed in order of decreasing length; sequences of the same length will be ordered by molecular weight; subunits that have identical sequences will be repeated multiple times.",
        "type": "SubstanceNucleicAcid_Subunit",
        "array": true
      }
    }
  },
  "SubstanceNucleicAcid_Subunit": {
    "display": "Substance Nucleic Acid Subunit",
    "description": "Subunits are listed in order of decreasing length; sequences of the same length will be ordered by molecular weight; subunits that have identical sequences will be repeated multiple times",
    "properties": {
      "subunit": {
        "key": "subunit",
        "display": "Subunit",
        "description": "Index of linear sequences of nucleic acids in order of decreasing length. Sequences of the same length will be ordered by molecular weight. Subunits that have identical sequences will be repeated and have sequential subscripts.",
        "type": "integer"
      },
      "sequence": {
        "key": "sequence",
        "display": "Sequence",
        "description": "Actual nucleotide sequence notation from 5' to 3' end using standard single letter codes. In addition to the base sequence, sugar and type of phosphate or non-phosphate linkage should also be captured.",
        "type": "string"
      },
      "length": {
        "key": "length",
        "display": "Length",
        "description": "The length of the sequence shall be captured.",
        "type": "integer"
      },
      "sequenceAttachment": {
        "key": "sequenceAttachment",
        "display": "Sequence Attachment",
        "description": "(TBC).",
        "type": "Attachment"
      },
      "fivePrime": {
        "key": "fivePrime",
        "display": "Five Prime",
        "description": "The nucleotide present at the 5’ terminal shall be specified based on a controlled vocabulary. Since the sequence is represented from the 5' to the 3' end, the 5’ prime nucleotide is the letter at the first position in the sequence. A separate representation would be redundant.",
        "type": "CodeableConcept"
      },
      "threePrime": {
        "key": "threePrime",
        "display": "Three Prime",
        "description": "The nucleotide present at the 3’ terminal shall be specified based on a controlled vocabulary. Since the sequence is represented from the 5' to the 3' end, the 5’ prime nucleotide is the letter at the last position in the sequence. A separate representation would be redundant.",
        "type": "CodeableConcept"
      },
      "linkage": {
        "key": "linkage",
        "display": "Linkage",
        "description": "The linkages between sugar residues will also be captured.",
        "type": "SubstanceNucleicAcid_Subunit_Linkage",
        "array": true
      },
      "sugar": {
        "key": "sugar",
        "display": "Sugar",
        "description": "5.3.6.8.1 Sugar ID (Mandatory).",
        "type": "SubstanceNucleicAcid_Subunit_Sugar",
        "array": true
      }
    },
    "backboneElement": true
  },
  "SubstanceNucleicAcid_Subunit_Linkage": {
    "display": "Substance Nucleic Acid Subunit_ Linkage",
    "description": "The linkages between sugar residues will also be captured",
    "properties": {
      "connectivity": {
        "key": "connectivity",
        "display": "Connectivity",
        "description": "The entity that links the sugar residues together should also be captured for nearly all naturally occurring nucleic acid the linkage is a phosphate group. For many synthetic oligonucleotides phosphorothioate linkages are often seen. Linkage connectivity is assumed to be 3’-5’. If the linkage is either 3’-3’ or 5’-5’ this should be specified.",
        "type": "string"
      },
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Each linkage will be registered as a fragment and have an ID.",
        "type": "Identifier"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "Each linkage will be registered as a fragment and have at least one name. A single name shall be assigned to each linkage.",
        "type": "string"
      },
      "residueSite": {
        "key": "residueSite",
        "display": "Residue Site",
        "description": "Residues shall be captured as described in 5.3.6.8.3.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "SubstanceNucleicAcid_Subunit_Sugar": {
    "display": "Substance Nucleic Acid Subunit_ Sugar",
    "description": "5.3.6.8.1 Sugar ID (Mandatory)",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "The Substance ID of the sugar or sugar-like component that make up the nucleotide.",
        "type": "Identifier"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "The name of the sugar or sugar-like component that make up the nucleotide.",
        "type": "string"
      },
      "residueSite": {
        "key": "residueSite",
        "display": "Residue Site",
        "description": "The residues that contain a given sugar will be captured. The order of given residues will be captured in the 5‘-3‘direction consistent with the base sequences listed above.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "SubstancePolymer": {
    "display": "SubstancePolymer",
    "description": "Todo.",
    "properties": {
      "class": {
        "key": "class",
        "display": "Class",
        "description": "Todo.",
        "type": "CodeableConcept"
      },
      "geometry": {
        "key": "geometry",
        "display": "Geometry",
        "description": "Todo.",
        "type": "CodeableConcept"
      },
      "copolymerConnectivity": {
        "key": "copolymerConnectivity",
        "display": "Copolymer Connectivity",
        "description": "Todo.",
        "type": "CodeableConcept",
        "array": true
      },
      "modification": {
        "key": "modification",
        "display": "Modification",
        "description": "Todo.",
        "type": "string",
        "array": true
      },
      "monomerSet": {
        "key": "monomerSet",
        "display": "Monomer Set",
        "description": "Todo.",
        "type": "SubstancePolymer_MonomerSet",
        "array": true
      },
      "repeat": {
        "key": "repeat",
        "display": "Repeat",
        "description": "Todo.",
        "type": "SubstancePolymer_Repeat",
        "array": true
      }
    }
  },
  "SubstancePolymer_MonomerSet": {
    "display": "Substance Polymer Monomer Set",
    "description": "Todo",
    "properties": {
      "ratioType": {
        "key": "ratioType",
        "display": "Ratio Type",
        "description": "Todo.",
        "type": "CodeableConcept"
      },
      "startingMaterial": {
        "key": "startingMaterial",
        "display": "Starting Material",
        "description": "Todo.",
        "type": "SubstancePolymer_MonomerSet_StartingMaterial",
        "array": true
      }
    },
    "backboneElement": true
  },
  "SubstancePolymer_MonomerSet_StartingMaterial": {
    "display": "Substance Polymer Monomer Set_ Starting Material",
    "description": "Todo",
    "properties": {
      "material": {
        "key": "material",
        "display": "Material",
        "description": "Todo.",
        "type": "CodeableConcept"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Todo.",
        "type": "CodeableConcept"
      },
      "isDefining": {
        "key": "isDefining",
        "display": "Is Defining",
        "description": "Todo.",
        "type": "boolean"
      },
      "amount": {
        "key": "amount",
        "display": "Amount",
        "description": "Todo.",
        "type": "SubstanceAmount"
      }
    },
    "backboneElement": true
  },
  "SubstancePolymer_Repeat": {
    "display": "Substance Polymer Repeat",
    "description": "Todo",
    "properties": {
      "numberOfUnits": {
        "key": "numberOfUnits",
        "display": "Number Of Units",
        "description": "Todo.",
        "type": "integer"
      },
      "averageMolecularFormula": {
        "key": "averageMolecularFormula",
        "display": "Average Molecular Formula",
        "description": "Todo.",
        "type": "string"
      },
      "repeatUnitAmountType": {
        "key": "repeatUnitAmountType",
        "display": "Repeat Unit Amount Type",
        "description": "Todo.",
        "type": "CodeableConcept"
      },
      "repeatUnit": {
        "key": "repeatUnit",
        "display": "Repeat Unit",
        "description": "Todo.",
        "type": "SubstancePolymer_Repeat_RepeatUnit",
        "array": true
      }
    },
    "backboneElement": true
  },
  "SubstancePolymer_Repeat_RepeatUnit": {
    "display": "Substance Polymer Repeat_ Repeat Unit",
    "description": "Todo",
    "properties": {
      "orientationOfPolymerisation": {
        "key": "orientationOfPolymerisation",
        "display": "Orientation Of Polymerisation",
        "description": "Todo.",
        "type": "CodeableConcept"
      },
      "repeatUnit": {
        "key": "repeatUnit",
        "display": "Repeat Unit",
        "description": "Todo.",
        "type": "string"
      },
      "amount": {
        "key": "amount",
        "display": "Amount",
        "description": "Todo.",
        "type": "SubstanceAmount"
      },
      "degreeOfPolymerisation": {
        "key": "degreeOfPolymerisation",
        "display": "Degree Of Polymerisation",
        "description": "Todo.",
        "type": "SubstancePolymer_Repeat_RepeatUnit_DegreeOfPolymerisation",
        "array": true
      },
      "structuralRepresentation": {
        "key": "structuralRepresentation",
        "display": "Structural Representation",
        "description": "Todo.",
        "type": "SubstancePolymer_Repeat_RepeatUnit_StructuralRepresentation",
        "array": true
      }
    },
    "backboneElement": true
  },
  "SubstancePolymer_Repeat_RepeatUnit_DegreeOfPolymerisation": {
    "display": "Substance Polymer Repeat_ Repeat Unit_ Degree Of Polymerisation",
    "description": "Todo",
    "properties": {
      "degree": {
        "key": "degree",
        "display": "Degree",
        "description": "Todo.",
        "type": "CodeableConcept"
      },
      "amount": {
        "key": "amount",
        "display": "Amount",
        "description": "Todo.",
        "type": "SubstanceAmount"
      }
    },
    "backboneElement": true
  },
  "SubstancePolymer_Repeat_RepeatUnit_StructuralRepresentation": {
    "display": "Substance Polymer Repeat_ Repeat Unit_ Structural Representation",
    "description": "Todo",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Todo.",
        "type": "CodeableConcept"
      },
      "representation": {
        "key": "representation",
        "display": "Representation",
        "description": "Todo.",
        "type": "string"
      },
      "attachment": {
        "key": "attachment",
        "display": "Attachment",
        "description": "Todo.",
        "type": "Attachment"
      }
    },
    "backboneElement": true
  },
  "SubstanceProtein": {
    "display": "SubstanceProtein",
    "description": "A SubstanceProtein is defined as a single unit of a linear amino acid sequence, or a combination of subunits that are either covalently linked or have a defined invariant stoichiometric relationship. This includes all synthetic, recombinant and purified SubstanceProteins of defined sequence, whether the use is therapeutic or prophylactic. This set of elements will be used to describe albumins, coagulation factors, cytokines, growth factors, peptide/SubstanceProtein hormones, enzymes, toxins, toxoids, recombinant vaccines, and immunomodulators.",
    "properties": {
      "sequenceType": {
        "key": "sequenceType",
        "display": "Sequence Type",
        "description": "The SubstanceProtein descriptive elements will only be used when a complete or partial amino acid sequence is available or derivable from a nucleic acid sequence.",
        "type": "CodeableConcept"
      },
      "numberOfSubunits": {
        "key": "numberOfSubunits",
        "display": "Number Of Subunits",
        "description": "Number of linear sequences of amino acids linked through peptide bonds. The number of subunits constituting the SubstanceProtein shall be described. It is possible that the number of subunits can be variable.",
        "type": "integer"
      },
      "disulfideLinkage": {
        "key": "disulfideLinkage",
        "display": "Disulfide Linkage",
        "description": "The disulphide bond between two cysteine residues either on the same subunit or on two different subunits shall be described. The position of the disulfide bonds in the SubstanceProtein shall be listed in increasing order of subunit number and position within subunit followed by the abbreviation of the amino acids involved. The disulfide linkage positions shall actually contain the amino acid Cysteine at the respective positions.",
        "type": "string",
        "array": true
      },
      "subunit": {
        "key": "subunit",
        "display": "Subunit",
        "description": "This subclause refers to the description of each subunit constituting the SubstanceProtein. A subunit is a linear sequence of amino acids linked through peptide bonds. The Subunit information shall be provided when the finished SubstanceProtein is a complex of multiple sequences; subunits are not used to delineate domains within a single sequence. Subunits are listed in order of decreasing length; sequences of the same length will be ordered by decreasing molecular weight; subunits that have identical sequences will be repeated multiple times.",
        "type": "SubstanceProtein_Subunit",
        "array": true
      }
    }
  },
  "SubstanceProtein_Subunit": {
    "display": "Substance Protein Subunit",
    "description": "This subclause refers to the description of each subunit constituting the SubstanceProtein. A subunit is a linear sequence of amino acids linked through peptide bonds. The Subunit information shall be provided when the finished SubstanceProtein is a complex of multiple sequences; subunits are not used to delineate domains within a single sequence. Subunits are listed in order of decreasing length; sequences of the same length will be ordered by decreasing molecular weight; subunits that have identical sequences will be repeated multiple times",
    "properties": {
      "subunit": {
        "key": "subunit",
        "display": "Subunit",
        "description": "Index of primary sequences of amino acids linked through peptide bonds in order of decreasing length. Sequences of the same length will be ordered by molecular weight. Subunits that have identical sequences will be repeated and have sequential subscripts.",
        "type": "integer"
      },
      "sequence": {
        "key": "sequence",
        "display": "Sequence",
        "description": "The sequence information shall be provided enumerating the amino acids from N- to C-terminal end using standard single-letter amino acid codes. Uppercase shall be used for L-amino acids and lowercase for D-amino acids. Transcribed SubstanceProteins will always be described using the translated sequence; for synthetic peptide containing amino acids that are not represented with a single letter code an X should be used within the sequence. The modified amino acids will be distinguished by their position in the sequence.",
        "type": "string"
      },
      "length": {
        "key": "length",
        "display": "Length",
        "description": "Length of linear sequences of amino acids contained in the subunit.",
        "type": "integer"
      },
      "sequenceAttachment": {
        "key": "sequenceAttachment",
        "display": "Sequence Attachment",
        "description": "The sequence information shall be provided enumerating the amino acids from N- to C-terminal end using standard single-letter amino acid codes. Uppercase shall be used for L-amino acids and lowercase for D-amino acids. Transcribed SubstanceProteins will always be described using the translated sequence; for synthetic peptide containing amino acids that are not represented with a single letter code an X should be used within the sequence. The modified amino acids will be distinguished by their position in the sequence.",
        "type": "Attachment"
      },
      "nTerminalModificationId": {
        "key": "nTerminalModificationId",
        "display": "N Terminal Modification Id",
        "description": "Unique identifier for molecular fragment modification based on the ISO 11238 Substance ID.",
        "type": "Identifier"
      },
      "nTerminalModification": {
        "key": "nTerminalModification",
        "display": "N Terminal Modification",
        "description": "The name of the fragment modified at the N-terminal of the SubstanceProtein shall be specified.",
        "type": "string"
      },
      "cTerminalModificationId": {
        "key": "cTerminalModificationId",
        "display": "C Terminal Modification Id",
        "description": "Unique identifier for molecular fragment modification based on the ISO 11238 Substance ID.",
        "type": "Identifier"
      },
      "cTerminalModification": {
        "key": "cTerminalModification",
        "display": "C Terminal Modification",
        "description": "The modification at the C-terminal shall be specified.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "SubstanceReferenceInformation": {
    "display": "SubstanceReferenceInformation",
    "description": "Todo.",
    "properties": {
      "comment": {
        "key": "comment",
        "display": "Comment",
        "description": "Todo.",
        "type": "string"
      },
      "gene": {
        "key": "gene",
        "display": "Gene",
        "description": "Todo.",
        "type": "SubstanceReferenceInformation_Gene",
        "array": true
      },
      "geneElement": {
        "key": "geneElement",
        "display": "Gene Element",
        "description": "Todo.",
        "type": "SubstanceReferenceInformation_GeneElement",
        "array": true
      },
      "classification": {
        "key": "classification",
        "display": "Classification",
        "description": "Todo.",
        "type": "SubstanceReferenceInformation_Classification",
        "array": true
      },
      "target": {
        "key": "target",
        "display": "Target",
        "description": "Todo.",
        "type": "SubstanceReferenceInformation_Target",
        "array": true
      }
    }
  },
  "SubstanceReferenceInformation_Gene": {
    "display": "Substance Reference Information Gene",
    "description": "Todo",
    "properties": {
      "geneSequenceOrigin": {
        "key": "geneSequenceOrigin",
        "display": "Gene Sequence Origin",
        "description": "Todo.",
        "type": "CodeableConcept"
      },
      "gene": {
        "key": "gene",
        "display": "Gene",
        "description": "Todo.",
        "type": "CodeableConcept"
      },
      "source": {
        "key": "source",
        "display": "Source",
        "description": "Todo.",
        "type": "Reference",
        "targetProfile": [
          "DocumentReference"
        ],
        "array": true
      }
    },
    "backboneElement": true
  },
  "SubstanceReferenceInformation_GeneElement": {
    "display": "Substance Reference Information Gene Element",
    "description": "Todo",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Todo.",
        "type": "CodeableConcept"
      },
      "source": {
        "key": "source",
        "display": "Source",
        "description": "Todo.",
        "type": "Reference",
        "targetProfile": [
          "DocumentReference"
        ],
        "array": true
      }
    },
    "backboneElement": true
  },
  "SubstanceReferenceInformation_Classification": {
    "display": "Substance Reference Information Classification",
    "description": "Todo",
    "properties": {
      "domain": {
        "key": "domain",
        "display": "Domain",
        "description": "Todo.",
        "type": "CodeableConcept"
      },
      "classification": {
        "key": "classification",
        "display": "Classification",
        "description": "Todo.",
        "type": "CodeableConcept"
      },
      "subtype": {
        "key": "subtype",
        "display": "Subtype",
        "description": "Todo.",
        "type": "CodeableConcept",
        "array": true
      },
      "source": {
        "key": "source",
        "display": "Source",
        "description": "Todo.",
        "type": "Reference",
        "targetProfile": [
          "DocumentReference"
        ],
        "array": true
      }
    },
    "backboneElement": true
  },
  "SubstanceReferenceInformation_Target": {
    "display": "Substance Reference Information Target",
    "description": "Todo",
    "properties": {
      "target": {
        "key": "target",
        "display": "Target",
        "description": "Todo.",
        "type": "Identifier"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Todo.",
        "type": "CodeableConcept"
      },
      "interaction": {
        "key": "interaction",
        "display": "Interaction",
        "description": "Todo.",
        "type": "CodeableConcept"
      },
      "organism": {
        "key": "organism",
        "display": "Organism",
        "description": "Todo.",
        "type": "CodeableConcept"
      },
      "organismType": {
        "key": "organismType",
        "display": "Organism Type",
        "description": "Todo.",
        "type": "CodeableConcept"
      },
      "amount[x]": {
        "key": "amount[x]",
        "display": "Amount[x]",
        "description": "Todo.",
        "type": "Quantity"
      },
      "amountType": {
        "key": "amountType",
        "display": "Amount Type",
        "description": "Todo.",
        "type": "CodeableConcept"
      },
      "source": {
        "key": "source",
        "display": "Source",
        "description": "Todo.",
        "type": "Reference",
        "targetProfile": [
          "DocumentReference"
        ],
        "array": true
      }
    },
    "backboneElement": true
  },
  "SubstanceSourceMaterial": {
    "display": "SubstanceSourceMaterial",
    "description": "Source material shall capture information on the taxonomic and anatomical origins as well as the fraction of a material that can result in or can be modified to form a substance. This set of data elements shall be used to define polymer substances isolated from biological matrices. Taxonomic and anatomical origins shall be described using a controlled vocabulary as required. This information is captured for naturally derived polymers ( . starch) and structurally diverse substances. For Organisms belonging to the Kingdom Plantae the Substance level defines the fresh material of a single species or infraspecies, the Herbal Drug and the Herbal preparation. For Herbal preparations, the fraction information will be captured at the Substance information level and additional information for herbal extracts will be captured at the Specified Substance Group 1 information level. See for further explanation the Substance Class: Structurally Diverse and the herbal annex.",
    "properties": {
      "sourceMaterialClass": {
        "key": "sourceMaterialClass",
        "display": "Source Material Class",
        "description": "General high level classification of the source material specific to the origin of the material.",
        "type": "CodeableConcept"
      },
      "sourceMaterialType": {
        "key": "sourceMaterialType",
        "display": "Source Material Type",
        "description": "The type of the source material shall be specified based on a controlled vocabulary. For vaccines, this subclause refers to the class of infectious agent.",
        "type": "CodeableConcept"
      },
      "sourceMaterialState": {
        "key": "sourceMaterialState",
        "display": "Source Material State",
        "description": "The state of the source material when extracted.",
        "type": "CodeableConcept"
      },
      "organismId": {
        "key": "organismId",
        "display": "Organism Id",
        "description": "The unique identifier associated with the source material parent organism shall be specified.",
        "type": "Identifier"
      },
      "organismName": {
        "key": "organismName",
        "display": "Organism Name",
        "description": "The organism accepted Scientific name shall be provided based on the organism taxonomy.",
        "type": "string"
      },
      "parentSubstanceId": {
        "key": "parentSubstanceId",
        "display": "Parent Substance Id",
        "description": "The parent of the herbal drug Ginkgo biloba, Leaf is the substance ID of the substance (fresh) of Ginkgo biloba L. or Ginkgo biloba L. (Whole plant).",
        "type": "Identifier",
        "array": true
      },
      "parentSubstanceName": {
        "key": "parentSubstanceName",
        "display": "Parent Substance Name",
        "description": "The parent substance of the Herbal Drug, or Herbal preparation.",
        "type": "string",
        "array": true
      },
      "countryOfOrigin": {
        "key": "countryOfOrigin",
        "display": "Country Of Origin",
        "description": "The country where the plant material is harvested or the countries where the plasma is sourced from as laid down in accordance with the Plasma Master File. For “Plasma-derived substances” the attribute country of origin provides information about the countries used for the manufacturing of the Cryopoor plama or Crioprecipitate.",
        "type": "CodeableConcept",
        "array": true
      },
      "geographicalLocation": {
        "key": "geographicalLocation",
        "display": "Geographical Location",
        "description": "The place/region where the plant is harvested or the places/regions where the animal source material has its habitat.",
        "type": "string",
        "array": true
      },
      "developmentStage": {
        "key": "developmentStage",
        "display": "Development Stage",
        "description": "Stage of life for animals, plants, insects and microorganisms. This information shall be provided only when the substance is significantly different in these stages (e.g. foetal bovine serum).",
        "type": "CodeableConcept"
      },
      "fractionDescription": {
        "key": "fractionDescription",
        "display": "Fraction Description",
        "description": "Many complex materials are fractions of parts of plants, animals, or minerals. Fraction elements are often necessary to define both Substances and Specified Group 1 Substances. For substances derived from Plants, fraction information will be captured at the Substance information level ( . Oils, Juices and Exudates). Additional information for Extracts, such as extraction solvent composition, will be captured at the Specified Substance Group 1 information level. For plasma-derived products fraction information will be captured at the Substance and the Specified Substance Group 1 levels.",
        "type": "SubstanceSourceMaterial_FractionDescription",
        "array": true
      },
      "organism": {
        "key": "organism",
        "display": "Organism",
        "description": "This subclause describes the organism which the substance is derived from. For vaccines, the parent organism shall be specified based on these subclause elements. As an example, full taxonomy will be described for the Substance Name: ., Leaf.",
        "type": "SubstanceSourceMaterial_Organism"
      },
      "partDescription": {
        "key": "partDescription",
        "display": "Part Description",
        "description": "To do.",
        "type": "SubstanceSourceMaterial_PartDescription",
        "array": true
      }
    }
  },
  "SubstanceSourceMaterial_FractionDescription": {
    "display": "Substance Source Material Fraction Description",
    "description": "Many complex materials are fractions of parts of plants, animals, or minerals. Fraction elements are often necessary to define both Substances and Specified Group 1 Substances. For substances derived from Plants, fraction information will be captured at the Substance information level ( . Oils, Juices and Exudates). Additional information for Extracts, such as extraction solvent composition, will be captured at the Specified Substance Group 1 information level. For plasma-derived products fraction information will be captured at the Substance and the Specified Substance Group 1 levels",
    "properties": {
      "fraction": {
        "key": "fraction",
        "display": "Fraction",
        "description": "This element is capturing information about the fraction of a plant part, or human plasma for fractionation.",
        "type": "string"
      },
      "materialType": {
        "key": "materialType",
        "display": "Material Type",
        "description": "The specific type of the material constituting the component. For Herbal preparations the particulars of the extracts (liquid/dry) is described in Specified Substance Group 1.",
        "type": "CodeableConcept"
      }
    },
    "backboneElement": true
  },
  "SubstanceSourceMaterial_Organism": {
    "display": "Substance Source Material Organism",
    "description": "This subclause describes the organism which the substance is derived from. For vaccines, the parent organism shall be specified based on these subclause elements. As an example, full taxonomy will be described for the Substance Name: ., Leaf",
    "properties": {
      "family": {
        "key": "family",
        "display": "Family",
        "description": "The family of an organism shall be specified.",
        "type": "CodeableConcept"
      },
      "genus": {
        "key": "genus",
        "display": "Genus",
        "description": "The genus of an organism shall be specified; refers to the Latin epithet of the genus element of the plant/animal scientific name; it is present in names for genera, species and infraspecies.",
        "type": "CodeableConcept"
      },
      "species": {
        "key": "species",
        "display": "Species",
        "description": "The species of an organism shall be specified; refers to the Latin epithet of the species of the plant/animal; it is present in names for species and infraspecies.",
        "type": "CodeableConcept"
      },
      "intraspecificType": {
        "key": "intraspecificType",
        "display": "Intraspecific Type",
        "description": "The Intraspecific type of an organism shall be specified.",
        "type": "CodeableConcept"
      },
      "intraspecificDescription": {
        "key": "intraspecificDescription",
        "display": "Intraspecific Description",
        "description": "The intraspecific description of an organism shall be specified based on a controlled vocabulary. For Influenza Vaccine, the intraspecific description shall contain the syntax of the antigen in line with the WHO convention.",
        "type": "string"
      },
      "author": {
        "key": "author",
        "display": "Author",
        "description": "4.9.13.6.1 Author type (Conditional).",
        "type": "SubstanceSourceMaterial_Organism_Author",
        "array": true
      },
      "hybrid": {
        "key": "hybrid",
        "display": "Hybrid",
        "description": "4.9.13.8.1 Hybrid species maternal organism ID (Optional).",
        "type": "SubstanceSourceMaterial_Organism_Hybrid"
      },
      "organismGeneral": {
        "key": "organismGeneral",
        "display": "Organism General",
        "description": "4.9.13.7.1 Kingdom (Conditional).",
        "type": "SubstanceSourceMaterial_Organism_OrganismGeneral"
      }
    },
    "backboneElement": true
  },
  "SubstanceSourceMaterial_Organism_Author": {
    "display": "Substance Source Material Organism_ Author",
    "description": "4.9.13.6.1 Author type (Conditional)",
    "properties": {
      "authorType": {
        "key": "authorType",
        "display": "Author Type",
        "description": "The type of author of an organism species shall be specified. The parenthetical author of an organism species refers to the first author who published the plant/animal name (of any rank). The primary author of an organism species refers to the first author(s), who validly published the plant/animal name.",
        "type": "CodeableConcept"
      },
      "authorDescription": {
        "key": "authorDescription",
        "display": "Author Description",
        "description": "The author of an organism species shall be specified. The author year of an organism shall also be specified when applicable; refers to the year in which the first author(s) published the infraspecific plant/animal name (of any rank).",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "SubstanceSourceMaterial_Organism_Hybrid": {
    "display": "Substance Source Material Organism_ Hybrid",
    "description": "4.9.13.8.1 Hybrid species maternal organism ID (Optional)",
    "properties": {
      "maternalOrganismId": {
        "key": "maternalOrganismId",
        "display": "Maternal Organism Id",
        "description": "The identifier of the maternal species constituting the hybrid organism shall be specified based on a controlled vocabulary. For plants, the parents aren’t always known, and it is unlikely that it will be known which is maternal and which is paternal.",
        "type": "string"
      },
      "maternalOrganismName": {
        "key": "maternalOrganismName",
        "display": "Maternal Organism Name",
        "description": "The name of the maternal species constituting the hybrid organism shall be specified. For plants, the parents aren’t always known, and it is unlikely that it will be known which is maternal and which is paternal.",
        "type": "string"
      },
      "paternalOrganismId": {
        "key": "paternalOrganismId",
        "display": "Paternal Organism Id",
        "description": "The identifier of the paternal species constituting the hybrid organism shall be specified based on a controlled vocabulary.",
        "type": "string"
      },
      "paternalOrganismName": {
        "key": "paternalOrganismName",
        "display": "Paternal Organism Name",
        "description": "The name of the paternal species constituting the hybrid organism shall be specified.",
        "type": "string"
      },
      "hybridType": {
        "key": "hybridType",
        "display": "Hybrid Type",
        "description": "The hybrid type of an organism shall be specified.",
        "type": "CodeableConcept"
      }
    },
    "backboneElement": true
  },
  "SubstanceSourceMaterial_Organism_OrganismGeneral": {
    "display": "Substance Source Material Organism_ Organism General",
    "description": "4.9.13.7.1 Kingdom (Conditional)",
    "properties": {
      "kingdom": {
        "key": "kingdom",
        "display": "Kingdom",
        "description": "The kingdom of an organism shall be specified.",
        "type": "CodeableConcept"
      },
      "phylum": {
        "key": "phylum",
        "display": "Phylum",
        "description": "The phylum of an organism shall be specified.",
        "type": "CodeableConcept"
      },
      "class": {
        "key": "class",
        "display": "Class",
        "description": "The class of an organism shall be specified.",
        "type": "CodeableConcept"
      },
      "order": {
        "key": "order",
        "display": "Order",
        "description": "The order of an organism shall be specified,.",
        "type": "CodeableConcept"
      }
    },
    "backboneElement": true
  },
  "SubstanceSourceMaterial_PartDescription": {
    "display": "Substance Source Material Part Description",
    "description": "To do",
    "properties": {
      "part": {
        "key": "part",
        "display": "Part",
        "description": "Entity of anatomical origin of source material within an organism.",
        "type": "CodeableConcept"
      },
      "partLocation": {
        "key": "partLocation",
        "display": "Part Location",
        "description": "The detailed anatomic location when the part can be extracted from different anatomical locations of the organism. Multiple alternative locations may apply.",
        "type": "CodeableConcept"
      }
    },
    "backboneElement": true
  },
  "SubstanceSpecification": {
    "display": "SubstanceSpecification",
    "description": "The detailed description of a substance, typically at a level beyond what is used for prescribing.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Identifier by which this substance is known.",
        "type": "Identifier"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "High level categorization, e.g. polymer or nucleic acid.",
        "type": "CodeableConcept"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "Status of substance within the catalogue e.g. approved.",
        "type": "CodeableConcept"
      },
      "domain": {
        "key": "domain",
        "display": "Domain",
        "description": "If the substance applies to only human or veterinary use.",
        "type": "CodeableConcept"
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "Textual description of the substance.",
        "type": "string"
      },
      "source": {
        "key": "source",
        "display": "Source",
        "description": "Supporting literature.",
        "type": "Reference",
        "targetProfile": [
          "DocumentReference"
        ],
        "array": true
      },
      "comment": {
        "key": "comment",
        "display": "Comment",
        "description": "Textual comment about this record of a substance.",
        "type": "string"
      },
      "moiety": {
        "key": "moiety",
        "display": "Moiety",
        "description": "Moiety, for structural modifications.",
        "type": "SubstanceSpecification_Moiety",
        "array": true
      },
      "property": {
        "key": "property",
        "display": "Property",
        "description": "General specifications for this substance, including how it is related to other substances.",
        "type": "SubstanceSpecification_Property",
        "array": true
      },
      "referenceInformation": {
        "key": "referenceInformation",
        "display": "Reference Information",
        "description": "General information detailing this substance.",
        "type": "Reference",
        "targetProfile": [
          "SubstanceReferenceInformation"
        ]
      },
      "structure": {
        "key": "structure",
        "display": "Structure",
        "description": "Structural information.",
        "type": "SubstanceSpecification_Structure"
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "Codes associated with the substance.",
        "type": "SubstanceSpecification_Code",
        "array": true
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "Names applicable to this substance.",
        "type": "SubstanceSpecification_Name",
        "array": true
      },
      "molecularWeight": {
        "key": "molecularWeight",
        "display": "Molecular Weight",
        "description": "The molecular weight or weight range (for proteins, polymers or nucleic acids).",
        "type": "UNKNOWN"
      },
      "relationship": {
        "key": "relationship",
        "display": "Relationship",
        "description": "A link between this substance and another, with details of the relationship.",
        "type": "SubstanceSpecification_Relationship",
        "array": true
      },
      "nucleicAcid": {
        "key": "nucleicAcid",
        "display": "Nucleic Acid",
        "description": "Data items specific to nucleic acids.",
        "type": "Reference",
        "targetProfile": [
          "SubstanceNucleicAcid"
        ]
      },
      "polymer": {
        "key": "polymer",
        "display": "Polymer",
        "description": "Data items specific to polymers.",
        "type": "Reference",
        "targetProfile": [
          "SubstancePolymer"
        ]
      },
      "protein": {
        "key": "protein",
        "display": "Protein",
        "description": "Data items specific to proteins.",
        "type": "Reference",
        "targetProfile": [
          "SubstanceProtein"
        ]
      },
      "sourceMaterial": {
        "key": "sourceMaterial",
        "display": "Source Material",
        "description": "Material or taxonomic/anatomical source for the substance.",
        "type": "Reference",
        "targetProfile": [
          "SubstanceSourceMaterial"
        ]
      }
    }
  },
  "SubstanceSpecification_Moiety": {
    "display": "Substance Specification Moiety",
    "description": "Moiety, for structural modifications",
    "properties": {
      "role": {
        "key": "role",
        "display": "Role",
        "description": "Role that the moiety is playing.",
        "type": "CodeableConcept"
      },
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Identifier by which this moiety substance is known.",
        "type": "Identifier"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "Textual name for this moiety substance.",
        "type": "string"
      },
      "stereochemistry": {
        "key": "stereochemistry",
        "display": "Stereochemistry",
        "description": "Stereochemistry type.",
        "type": "CodeableConcept"
      },
      "opticalActivity": {
        "key": "opticalActivity",
        "display": "Optical Activity",
        "description": "Optical activity type.",
        "type": "CodeableConcept"
      },
      "molecularFormula": {
        "key": "molecularFormula",
        "display": "Molecular Formula",
        "description": "Molecular formula.",
        "type": "string"
      },
      "amount[x]": {
        "key": "amount[x]",
        "display": "Amount[x]",
        "description": "Quantitative value for this moiety.",
        "type": "Quantity"
      }
    },
    "backboneElement": true
  },
  "SubstanceSpecification_Property": {
    "display": "Substance Specification Property",
    "description": "General specifications for this substance, including how it is related to other substances",
    "properties": {
      "category": {
        "key": "category",
        "display": "Category",
        "description": "A category for this property, e.g. Physical, Chemical, Enzymatic.",
        "type": "CodeableConcept"
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "Property type e.g. viscosity, pH, isoelectric point.",
        "type": "CodeableConcept"
      },
      "parameters": {
        "key": "parameters",
        "display": "Parameters",
        "description": "Parameters that were used in the measurement of a property (e.g. for viscosity: measured at 20C with a pH of 7.1).",
        "type": "string"
      },
      "definingSubstance[x]": {
        "key": "definingSubstance[x]",
        "display": "Defining Substance[x]",
        "description": "A substance upon which a defining property depends (e.g. for solubility: in water, in alcohol).",
        "type": "Reference",
        "targetProfile": [
          "SubstanceSpecification",
          "Substance"
        ]
      },
      "amount[x]": {
        "key": "amount[x]",
        "display": "Amount[x]",
        "description": "Quantitative value for this property.",
        "type": "Quantity"
      }
    },
    "backboneElement": true
  },
  "SubstanceSpecification_Structure": {
    "display": "Substance Specification Structure",
    "description": "Structural information",
    "properties": {
      "stereochemistry": {
        "key": "stereochemistry",
        "display": "Stereochemistry",
        "description": "Stereochemistry type.",
        "type": "CodeableConcept"
      },
      "opticalActivity": {
        "key": "opticalActivity",
        "display": "Optical Activity",
        "description": "Optical activity type.",
        "type": "CodeableConcept"
      },
      "molecularFormula": {
        "key": "molecularFormula",
        "display": "Molecular Formula",
        "description": "Molecular formula.",
        "type": "string"
      },
      "molecularFormulaByMoiety": {
        "key": "molecularFormulaByMoiety",
        "display": "Molecular Formula By Moiety",
        "description": "Specified per moiety according to the Hill system, i.e. first C, then H, then alphabetical, each moiety separated by a dot.",
        "type": "string"
      },
      "isotope": {
        "key": "isotope",
        "display": "Isotope",
        "description": "Applicable for single substances that contain a radionuclide or a non-natural isotopic ratio.",
        "type": "SubstanceSpecification_Structure_Isotope",
        "array": true
      },
      "molecularWeight": {
        "key": "molecularWeight",
        "display": "Molecular Weight",
        "description": "The molecular weight or weight range (for proteins, polymers or nucleic acids).",
        "type": "UNKNOWN"
      },
      "source": {
        "key": "source",
        "display": "Source",
        "description": "Supporting literature.",
        "type": "Reference",
        "targetProfile": [
          "DocumentReference"
        ],
        "array": true
      },
      "representation": {
        "key": "representation",
        "display": "Representation",
        "description": "Molecular structural representation.",
        "type": "SubstanceSpecification_Structure_Representation",
        "array": true
      }
    },
    "backboneElement": true
  },
  "SubstanceSpecification_Structure_Isotope": {
    "display": "Substance Specification Structure_ Isotope",
    "description": "Applicable for single substances that contain a radionuclide or a non-natural isotopic ratio",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Substance identifier for each non-natural or radioisotope.",
        "type": "Identifier"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "Substance name for each non-natural or radioisotope.",
        "type": "CodeableConcept"
      },
      "substitution": {
        "key": "substitution",
        "display": "Substitution",
        "description": "The type of isotopic substitution present in a single substance.",
        "type": "CodeableConcept"
      },
      "halfLife": {
        "key": "halfLife",
        "display": "Half Life",
        "description": "Half life - for a non-natural nuclide.",
        "type": "Quantity"
      },
      "molecularWeight": {
        "key": "molecularWeight",
        "display": "Molecular Weight",
        "description": "The molecular weight or weight range (for proteins, polymers or nucleic acids).",
        "type": "SubstanceSpecification_Structure_Isotope_MolecularWeight"
      }
    },
    "backboneElement": true
  },
  "SubstanceSpecification_Structure_Isotope_MolecularWeight": {
    "display": "Substance Specification Structure_ Isotope_ Molecular Weight",
    "description": "The molecular weight or weight range (for proteins, polymers or nucleic acids)",
    "properties": {
      "method": {
        "key": "method",
        "display": "Method",
        "description": "The method by which the molecular weight was determined.",
        "type": "CodeableConcept"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Type of molecular weight such as exact, average (also known as. number average), weight average.",
        "type": "CodeableConcept"
      },
      "amount": {
        "key": "amount",
        "display": "Amount",
        "description": "Used to capture quantitative values for a variety of elements. If only limits are given, the arithmetic mean would be the average. If only a single definite value for a given element is given, it would be captured in this field.",
        "type": "Quantity"
      }
    },
    "backboneElement": true
  },
  "SubstanceSpecification_Structure_Representation": {
    "display": "Substance Specification Structure_ Representation",
    "description": "Molecular structural representation",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The type of structure (e.g. Full, Partial, Representative).",
        "type": "CodeableConcept"
      },
      "representation": {
        "key": "representation",
        "display": "Representation",
        "description": "The structural representation as text string in a format e.g. InChI, SMILES, MOLFILE, CDX.",
        "type": "string"
      },
      "attachment": {
        "key": "attachment",
        "display": "Attachment",
        "description": "An attached file with the structural representation.",
        "type": "Attachment"
      }
    },
    "backboneElement": true
  },
  "SubstanceSpecification_Code": {
    "display": "Substance Specification Code",
    "description": "Codes associated with the substance",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "The specific code.",
        "type": "CodeableConcept"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "Status of the code assignment.",
        "type": "CodeableConcept"
      },
      "statusDate": {
        "key": "statusDate",
        "display": "Status Date",
        "description": "The date at which the code status is changed as part of the terminology maintenance.",
        "type": "dateTime"
      },
      "comment": {
        "key": "comment",
        "display": "Comment",
        "description": "Any comment can be provided in this field, if necessary.",
        "type": "string"
      },
      "source": {
        "key": "source",
        "display": "Source",
        "description": "Supporting literature.",
        "type": "Reference",
        "targetProfile": [
          "DocumentReference"
        ],
        "array": true
      }
    },
    "backboneElement": true
  },
  "SubstanceSpecification_Name": {
    "display": "Substance Specification Name",
    "description": "Names applicable to this substance",
    "properties": {
      "name": {
        "key": "name",
        "display": "Name",
        "description": "The actual name.",
        "type": "string"
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Name type.",
        "type": "CodeableConcept"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of the name.",
        "type": "CodeableConcept"
      },
      "preferred": {
        "key": "preferred",
        "display": "Preferred",
        "description": "If this is the preferred name for this substance.",
        "type": "boolean"
      },
      "language": {
        "key": "language",
        "display": "Language",
        "description": "Language of the name.",
        "type": "CodeableConcept",
        "array": true
      },
      "domain": {
        "key": "domain",
        "display": "Domain",
        "description": "The use context of this name for example if there is a different name a drug active ingredient as opposed to a food colour additive.",
        "type": "CodeableConcept",
        "array": true
      },
      "jurisdiction": {
        "key": "jurisdiction",
        "display": "Jurisdiction",
        "description": "The jurisdiction where this name applies.",
        "type": "CodeableConcept",
        "array": true
      },
      "synonym": {
        "key": "synonym",
        "display": "Synonym",
        "description": "A synonym of this name.",
        "type": "UNKNOWN"
      },
      "translation": {
        "key": "translation",
        "display": "Translation",
        "description": "A translation for this name.",
        "type": "UNKNOWN"
      },
      "official": {
        "key": "official",
        "display": "Official",
        "description": "Details of the official nature of this name.",
        "type": "SubstanceSpecification_Name_Official",
        "array": true
      },
      "source": {
        "key": "source",
        "display": "Source",
        "description": "Supporting literature.",
        "type": "Reference",
        "targetProfile": [
          "DocumentReference"
        ],
        "array": true
      }
    },
    "backboneElement": true
  },
  "SubstanceSpecification_Name_Official": {
    "display": "Substance Specification Name_ Official",
    "description": "Details of the official nature of this name",
    "properties": {
      "authority": {
        "key": "authority",
        "display": "Authority",
        "description": "Which authority uses this official name.",
        "type": "CodeableConcept"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of the official name.",
        "type": "CodeableConcept"
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "Date of official name change.",
        "type": "dateTime"
      }
    },
    "backboneElement": true
  },
  "SubstanceSpecification_Relationship": {
    "display": "Substance Specification Relationship",
    "description": "A link between this substance and another, with details of the relationship",
    "properties": {
      "substance[x]": {
        "key": "substance[x]",
        "display": "Substance[x]",
        "description": "A pointer to another substance, as a resource or just a representational code.",
        "type": "Reference",
        "targetProfile": [
          "SubstanceSpecification"
        ]
      },
      "relationship": {
        "key": "relationship",
        "display": "Relationship",
        "description": "For example \"salt to parent\", \"active moiety\", \"starting material\".",
        "type": "CodeableConcept"
      },
      "isDefining": {
        "key": "isDefining",
        "display": "Is Defining",
        "description": "For example where an enzyme strongly bonds with a particular substance, this is a defining relationship for that enzyme, out of several possible substance relationships.",
        "type": "boolean"
      },
      "amount[x]": {
        "key": "amount[x]",
        "display": "Amount[x]",
        "description": "A numeric factor for the relationship, for instance to express that the salt of a substance has some percentage of the active substance in relation to some other.",
        "type": "Quantity"
      },
      "amountRatioLowLimit": {
        "key": "amountRatioLowLimit",
        "display": "Amount Ratio Low Limit",
        "description": "For use when the numeric.",
        "type": "Ratio"
      },
      "amountType": {
        "key": "amountType",
        "display": "Amount Type",
        "description": "An operator for the amount, for example \"average\", \"approximately\", \"less than\".",
        "type": "CodeableConcept"
      },
      "source": {
        "key": "source",
        "display": "Source",
        "description": "Supporting literature.",
        "type": "Reference",
        "targetProfile": [
          "DocumentReference"
        ],
        "array": true
      }
    },
    "backboneElement": true
  },
  "SupplyDelivery": {
    "display": "SupplyDelivery",
    "description": "Record of delivery of what is supplied.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Identifier for the supply delivery event that is used to identify it across multiple disparate systems.",
        "type": "Identifier",
        "array": true
      },
      "basedOn": {
        "key": "basedOn",
        "display": "Based On",
        "description": "A plan, proposal or order that is fulfilled in whole or in part by this event.",
        "type": "Reference",
        "targetProfile": [
          "SupplyRequest"
        ],
        "array": true
      },
      "partOf": {
        "key": "partOf",
        "display": "Part Of",
        "description": "A larger event of which this particular event is a component or step.",
        "type": "Reference",
        "targetProfile": [
          "SupplyDelivery",
          "Contract"
        ],
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "A code specifying the state of the dispense event.",
        "type": "enum",
        "enumValues": [
          "in-progress",
          "completed",
          "abandoned",
          "entered-in-error"
        ]
      },
      "patient": {
        "key": "patient",
        "display": "Patient",
        "description": "A link to a resource representing the person whom the delivered item is for.",
        "type": "Reference",
        "targetProfile": [
          "Patient"
        ]
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Indicates the type of dispensing event that is performed. Examples include: Trial Fill, Completion of Trial, Partial Fill, Emergency Fill, Samples, etc.",
        "type": "CodeableConcept"
      },
      "suppliedItem": {
        "key": "suppliedItem",
        "display": "Supplied Item",
        "description": "The item that is being delivered or has been supplied.",
        "type": "SupplyDelivery_SuppliedItem"
      },
      "occurrence[x]": {
        "key": "occurrence[x]",
        "display": "Occurrence[x]",
        "description": "The date or time(s) the activity occurred.",
        "type": "dateTime"
      },
      "supplier": {
        "key": "supplier",
        "display": "Supplier",
        "description": "The individual responsible for dispensing the medication, supplier or device.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization"
        ]
      },
      "destination": {
        "key": "destination",
        "display": "Destination",
        "description": "Identification of the facility/location where the Supply was shipped to, as part of the dispense event.",
        "type": "Reference",
        "targetProfile": [
          "Location"
        ]
      },
      "receiver": {
        "key": "receiver",
        "display": "Receiver",
        "description": "Identifies the person who picked up the Supply.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole"
        ],
        "array": true
      }
    }
  },
  "SupplyDelivery_SuppliedItem": {
    "display": "Supply Delivery Supplied Item",
    "description": "The item that is delivered or supplied",
    "properties": {
      "quantity": {
        "key": "quantity",
        "display": "Quantity",
        "description": "The amount of supply that has been dispensed. Includes unit of measure.",
        "type": "Quantity"
      },
      "item[x]": {
        "key": "item[x]",
        "display": "Item[x]",
        "description": "Identifies the medication, substance or device being dispensed. This is either a link to a resource representing the details of the item or a code that identifies the item from a known list.",
        "type": "CodeableConcept"
      }
    },
    "backboneElement": true
  },
  "SupplyRequest": {
    "display": "SupplyRequest",
    "description": "A record of a request for a medication, substance or device used in the healthcare setting.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Business identifiers assigned to this SupplyRequest by the author and/or other systems. These identifiers remain constant as the resource is updated and propagates from server to server.",
        "type": "Identifier",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "Status of the supply request.",
        "type": "enum",
        "enumValues": [
          "draft",
          "active",
          "suspended +"
        ]
      },
      "category": {
        "key": "category",
        "display": "Category",
        "description": "Category of supply, e.g.  central, non-stock, etc. This is used to support work flows associated with the supply process.",
        "type": "CodeableConcept"
      },
      "priority": {
        "key": "priority",
        "display": "Priority",
        "description": "Indicates how quickly this SupplyRequest should be addressed with respect to other requests.",
        "type": "enum",
        "enumValues": [
          "routine",
          "urgent",
          "asap",
          "stat"
        ]
      },
      "item[x]": {
        "key": "item[x]",
        "display": "Item[x]",
        "description": "The item that is requested to be supplied. This is either a link to a resource representing the details of the item or a code that identifies the item from a known list.",
        "type": "CodeableConcept"
      },
      "quantity": {
        "key": "quantity",
        "display": "Quantity",
        "description": "The amount that is being ordered of the indicated item.",
        "type": "Quantity"
      },
      "parameter": {
        "key": "parameter",
        "display": "Parameter",
        "description": "Specific parameters for the ordered item.  For example, the size of the indicated item.",
        "type": "SupplyRequest_Parameter",
        "array": true
      },
      "occurrence[x]": {
        "key": "occurrence[x]",
        "display": "Occurrence[x]",
        "description": "When the request should be fulfilled.",
        "type": "dateTime"
      },
      "authoredOn": {
        "key": "authoredOn",
        "display": "Authored On",
        "description": "When the request was made.",
        "type": "dateTime"
      },
      "requester": {
        "key": "requester",
        "display": "Requester",
        "description": "The device, practitioner, etc. who initiated the request.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization",
          "Patient",
          "RelatedPerson",
          "Device"
        ]
      },
      "supplier": {
        "key": "supplier",
        "display": "Supplier",
        "description": "Who is intended to fulfill the request.",
        "type": "Reference",
        "targetProfile": [
          "Organization",
          "HealthcareService"
        ],
        "array": true
      },
      "reasonCode": {
        "key": "reasonCode",
        "display": "Reason Code",
        "description": "The reason why the supply item was requested.",
        "type": "CodeableConcept",
        "array": true
      },
      "reasonReference": {
        "key": "reasonReference",
        "display": "Reason Reference",
        "description": "The reason why the supply item was requested.",
        "type": "Reference",
        "targetProfile": [
          "Condition",
          "Observation",
          "DiagnosticReport",
          "DocumentReference"
        ],
        "array": true
      },
      "deliverFrom": {
        "key": "deliverFrom",
        "display": "Deliver From",
        "description": "Where the supply is expected to come from.",
        "type": "Reference",
        "targetProfile": [
          "Organization",
          "Location"
        ]
      },
      "deliverTo": {
        "key": "deliverTo",
        "display": "Deliver To",
        "description": "Where the supply is destined to go.",
        "type": "Reference",
        "targetProfile": [
          "Organization",
          "Location",
          "Patient"
        ]
      }
    }
  },
  "SupplyRequest_Parameter": {
    "display": "Supply Request Parameter",
    "description": "Ordered item details",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "A code or string that identifies the device detail being asserted.",
        "type": "CodeableConcept"
      },
      "value[x]": {
        "key": "value[x]",
        "display": "Value[x]",
        "description": "The value of the device detail.",
        "type": "CodeableConcept"
      }
    },
    "backboneElement": true
  },
  "Task": {
    "display": "Task",
    "description": "A task to be performed.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "The business identifier for this task.",
        "type": "Identifier",
        "array": true
      },
      "instantiatesCanonical": {
        "key": "instantiatesCanonical",
        "display": "Instantiates Canonical",
        "description": "The URL pointing to a *FHIR*-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this Task.",
        "type": "canonical"
      },
      "instantiatesUri": {
        "key": "instantiatesUri",
        "display": "Instantiates Uri",
        "description": "The URL pointing to an *externally* maintained  protocol, guideline, orderset or other definition that is adhered to in whole or in part by this Task.",
        "type": "uri"
      },
      "basedOn": {
        "key": "basedOn",
        "display": "Based On",
        "description": "BasedOn refers to a higher-level authorization that triggered the creation of the task.  It references a \"request\" resource such as a ServiceRequest, MedicationRequest, ServiceRequest, CarePlan, etc. which is distinct from the \"request\" resource the task is seeking to fulfill.  This latter resource is referenced by FocusOn.  For example, based on a ServiceRequest (= BasedOn), a task is created to fulfill a procedureRequest ( = FocusOn ) to collect a specimen from a patient.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ],
        "array": true
      },
      "groupIdentifier": {
        "key": "groupIdentifier",
        "display": "Group Identifier",
        "description": "An identifier that links together multiple tasks and other requests that were created in the same context.",
        "type": "Identifier"
      },
      "partOf": {
        "key": "partOf",
        "display": "Part Of",
        "description": "Task that this particular task is part of.",
        "type": "Reference",
        "targetProfile": [
          "Task"
        ],
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The current status of the task.",
        "type": "enum",
        "enumValues": [
          "draft",
          "requested",
          "received",
          "accepted",
          "+"
        ]
      },
      "statusReason": {
        "key": "statusReason",
        "display": "Status Reason",
        "description": "An explanation as to why this task is held, failed, was refused, etc.",
        "type": "CodeableConcept"
      },
      "businessStatus": {
        "key": "businessStatus",
        "display": "Business Status",
        "description": "Contains business-specific nuances of the business state.",
        "type": "CodeableConcept"
      },
      "intent": {
        "key": "intent",
        "display": "Intent",
        "description": "Indicates the \"level\" of actionability associated with the Task, i.e. i+R[9]Cs this a proposed task, a planned task, an actionable task, etc.",
        "type": "enum",
        "enumValues": [
          "unknown",
          "proposal",
          "plan",
          "order",
          "original-order",
          "reflex-order",
          "filler-order",
          "instance-order",
          "option"
        ]
      },
      "priority": {
        "key": "priority",
        "display": "Priority",
        "description": "Indicates how quickly the Task should be addressed with respect to other requests.",
        "type": "enum",
        "enumValues": [
          "routine",
          "urgent",
          "asap",
          "stat"
        ]
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "A name or code (or both) briefly describing what the task involves.",
        "type": "CodeableConcept"
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A free-text description of what is to be performed.",
        "type": "string"
      },
      "focus": {
        "key": "focus",
        "display": "Focus",
        "description": "The request being actioned or the resource being manipulated by this task.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ]
      },
      "for": {
        "key": "for",
        "display": "For",
        "description": "The entity who benefits from the performance of the service specified in the task (e.g., the patient).",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ]
      },
      "encounter": {
        "key": "encounter",
        "display": "Encounter",
        "description": "The healthcare event  (e.g. a patient and healthcare provider interaction) during which this task was created.",
        "type": "Reference",
        "targetProfile": [
          "Encounter"
        ]
      },
      "executionPeriod": {
        "key": "executionPeriod",
        "display": "Execution Period",
        "description": "Identifies the time action was first taken against the task (start) and/or the time final action was taken against the task prior to marking it as completed (end).",
        "type": "Period"
      },
      "authoredOn": {
        "key": "authoredOn",
        "display": "Authored On",
        "description": "The date and time this task was created.",
        "type": "dateTime"
      },
      "lastModified": {
        "key": "lastModified",
        "display": "Last Modified",
        "description": "The date and time of last modification to this task.",
        "type": "dateTime"
      },
      "requester": {
        "key": "requester",
        "display": "Requester",
        "description": "The creator of the task.",
        "type": "Reference",
        "targetProfile": [
          "Device",
          "Organization",
          "Patient",
          "Practitioner",
          "PractitionerRole",
          "RelatedPerson"
        ]
      },
      "performerType": {
        "key": "performerType",
        "display": "Performer Type",
        "description": "The kind of participant that should perform the task.",
        "type": "CodeableConcept",
        "array": true
      },
      "owner": {
        "key": "owner",
        "display": "Owner",
        "description": "Individual organization or Device currently responsible for task execution.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization",
          "CareTeam",
          "HealthcareService",
          "Patient",
          "Device",
          "RelatedPerson"
        ]
      },
      "location": {
        "key": "location",
        "display": "Location",
        "description": "Principal physical location where the this task is performed.",
        "type": "Reference",
        "targetProfile": [
          "Location"
        ]
      },
      "reasonCode": {
        "key": "reasonCode",
        "display": "Reason Code",
        "description": "A description or code indicating why this task needs to be performed.",
        "type": "CodeableConcept"
      },
      "reasonReference": {
        "key": "reasonReference",
        "display": "Reason Reference",
        "description": "A resource reference indicating why this task needs to be performed.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ]
      },
      "insurance": {
        "key": "insurance",
        "display": "Insurance",
        "description": "Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be relevant to the Task.",
        "type": "Reference",
        "targetProfile": [
          "Coverage",
          "ClaimResponse"
        ],
        "array": true
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "Free-text information captured about the task as it progresses.",
        "type": "Annotation",
        "array": true
      },
      "relevantHistory": {
        "key": "relevantHistory",
        "display": "Relevant History",
        "description": "Links to Provenance records for past versions of this Task that identify key state transitions or updates that are likely to be relevant to a user looking at the current version of the task.",
        "type": "Reference",
        "targetProfile": [
          "Provenance"
        ],
        "array": true
      },
      "restriction": {
        "key": "restriction",
        "display": "Restriction",
        "description": "If the Task.focus is a request resource and the task is seeking fulfillment (i.e. is asking for the request to be actioned), this element identifies any limitations on what parts of the referenced request should be actioned.",
        "type": "Task_Restriction"
      },
      "input": {
        "key": "input",
        "display": "Input",
        "description": "Additional information that may be needed in the execution of the task.",
        "type": "Task_Input",
        "array": true
      },
      "output": {
        "key": "output",
        "display": "Output",
        "description": "Outputs produced by the Task.",
        "type": "Task_Output",
        "array": true
      }
    }
  },
  "Task_Restriction": {
    "display": "Task Restriction",
    "description": "Constraints on fulfillment tasks",
    "properties": {
      "repetitions": {
        "key": "repetitions",
        "display": "Repetitions",
        "description": "Indicates the number of times the requested action should occur.",
        "type": "positiveInt"
      },
      "period": {
        "key": "period",
        "display": "Period",
        "description": "Over what time-period is fulfillment sought.",
        "type": "Period"
      },
      "recipient": {
        "key": "recipient",
        "display": "Recipient",
        "description": "For requests that are targeted to more than on potential recipient/target, for whom is fulfillment sought?",
        "type": "Reference",
        "targetProfile": [
          "Patient",
          "Practitioner",
          "PractitionerRole",
          "RelatedPerson",
          "Group",
          "Organization"
        ],
        "array": true
      }
    },
    "backboneElement": true
  },
  "Task_Input": {
    "display": "Task Input",
    "description": "Information used to perform task",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "A code or description indicating how the input is intended to be used as part of the task execution.",
        "type": "CodeableConcept"
      },
      "value[x]": {
        "key": "value[x]",
        "display": "Value[x]",
        "description": "The value of the input parameter as a basic type.",
        "type": "base64Binary"
      }
    },
    "backboneElement": true
  },
  "Task_Output": {
    "display": "Task Output",
    "description": "Information produced as part of task",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The name of the Output parameter.",
        "type": "CodeableConcept"
      },
      "value[x]": {
        "key": "value[x]",
        "display": "Value[x]",
        "description": "The value of the Output parameter as a basic type.",
        "type": "base64Binary"
      }
    },
    "backboneElement": true
  },
  "TerminologyCapabilities": {
    "display": "TerminologyCapabilities",
    "description": "A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.",
    "properties": {
      "url": {
        "key": "url",
        "display": "Url",
        "description": "An absolute URI that is used to identify this terminology capabilities when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this terminology capabilities is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the terminology capabilities is stored on different servers.",
        "type": "uri"
      },
      "version": {
        "key": "version",
        "display": "Version",
        "description": "The identifier that is used to identify this version of the terminology capabilities when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the terminology capabilities author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
        "type": "string"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A natural language name identifying the terminology capabilities. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
        "type": "string"
      },
      "title": {
        "key": "title",
        "display": "Title",
        "description": "A short, descriptive, user-friendly title for the terminology capabilities.",
        "type": "string"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of this terminology capabilities. Enables tracking the life-cycle of the content.",
        "type": "enum",
        "enumValues": [
          "draft",
          "active",
          "retired",
          "unknown"
        ]
      },
      "experimental": {
        "key": "experimental",
        "display": "Experimental",
        "description": "A Boolean value to indicate that this terminology capabilities is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
        "type": "boolean"
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "The date  (and optionally time) when the terminology capabilities was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the terminology capabilities changes.",
        "type": "dateTime"
      },
      "publisher": {
        "key": "publisher",
        "display": "Publisher",
        "description": "The name of the organization or individual that published the terminology capabilities.",
        "type": "string"
      },
      "contact": {
        "key": "contact",
        "display": "Contact",
        "description": "Contact details to assist a user in finding and communicating with the publisher.",
        "type": "ContactDetail",
        "array": true
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A free text natural language description of the terminology capabilities from a consumer's perspective. Typically, this is used when the capability statement describes a desired rather than an actual solution, for example as a formal expression of requirements as part of an RFP.",
        "type": "markdown"
      },
      "useContext": {
        "key": "useContext",
        "display": "Use Context",
        "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate terminology capabilities instances.",
        "type": "UsageContext",
        "array": true
      },
      "jurisdiction": {
        "key": "jurisdiction",
        "display": "Jurisdiction",
        "description": "A legal or geographic region in which the terminology capabilities is intended to be used.",
        "type": "CodeableConcept",
        "array": true
      },
      "purpose": {
        "key": "purpose",
        "display": "Purpose",
        "description": "Explanation of why this terminology capabilities is needed and why it has been designed as it has.",
        "type": "markdown"
      },
      "copyright": {
        "key": "copyright",
        "display": "Copyright",
        "description": "A copyright statement relating to the terminology capabilities and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the terminology capabilities.",
        "type": "markdown"
      },
      "kind": {
        "key": "kind",
        "display": "Kind",
        "description": "The way that this statement is intended to be used, to describe an actual running instance of software, a particular product (kind, not instance of software) or a class of implementation (e.g. a desired purchase).",
        "type": "enum",
        "enumValues": [
          "instance",
          "capability",
          "requirements"
        ]
      },
      "software": {
        "key": "software",
        "display": "Software",
        "description": "Software that is covered by this terminology capability statement.  It is used when the statement describes the capabilities of a particular software version, independent of an installation.",
        "type": "TerminologyCapabilities_Software"
      },
      "implementation": {
        "key": "implementation",
        "display": "Implementation",
        "description": "Identifies a specific implementation instance that is described by the terminology capability statement - i.e. a particular installation, rather than the capabilities of a software program.",
        "type": "TerminologyCapabilities_Implementation"
      },
      "lockedDate": {
        "key": "lockedDate",
        "display": "Locked Date",
        "description": "Whether the server supports lockedDate.",
        "type": "boolean"
      },
      "codeSystem": {
        "key": "codeSystem",
        "display": "Code System",
        "description": "Identifies a code system that is supported by the server. If there is a no code system URL, then this declares the general assumptions a client can make about support for any CodeSystem resource.",
        "type": "TerminologyCapabilities_CodeSystem",
        "array": true
      },
      "expansion": {
        "key": "expansion",
        "display": "Expansion",
        "description": "Information about the [ValueSet/$expand](valueset-operation-expand.html) operation.",
        "type": "TerminologyCapabilities_Expansion"
      },
      "codeSearch": {
        "key": "codeSearch",
        "display": "Code Search",
        "description": "The degree to which the server supports the code search parameter on ValueSet, if it is supported.",
        "type": "enum",
        "enumValues": [
          "explicit",
          "all"
        ]
      },
      "validateCode": {
        "key": "validateCode",
        "display": "Validate Code",
        "description": "Information about the [ValueSet/$validate-code](valueset-operation-validate-code.html) operation.",
        "type": "TerminologyCapabilities_ValidateCode"
      },
      "translation": {
        "key": "translation",
        "display": "Translation",
        "description": "Information about the [ConceptMap/$translate](conceptmap-operation-translate.html) operation.",
        "type": "TerminologyCapabilities_Translation"
      },
      "closure": {
        "key": "closure",
        "display": "Closure",
        "description": "Whether the $closure operation is supported.",
        "type": "TerminologyCapabilities_Closure"
      }
    }
  },
  "TerminologyCapabilities_Software": {
    "display": "Terminology Capabilities Software",
    "description": "Software that is covered by this terminology capability statement",
    "properties": {
      "name": {
        "key": "name",
        "display": "Name",
        "description": "Name the software is known by.",
        "type": "string"
      },
      "version": {
        "key": "version",
        "display": "Version",
        "description": "The version identifier for the software covered by this statement.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "TerminologyCapabilities_Implementation": {
    "display": "Terminology Capabilities Implementation",
    "description": "If this describes a specific instance",
    "properties": {
      "description": {
        "key": "description",
        "display": "Description",
        "description": "Information about the specific installation that this terminology capability statement relates to.",
        "type": "string"
      },
      "url": {
        "key": "url",
        "display": "Url",
        "description": "An absolute base URL for the implementation.",
        "type": "url"
      }
    },
    "backboneElement": true
  },
  "TerminologyCapabilities_CodeSystem": {
    "display": "Terminology Capabilities Code System",
    "description": "A code system supported by the server",
    "properties": {
      "uri": {
        "key": "uri",
        "display": "Uri",
        "description": "URI for the Code System.",
        "type": "canonical"
      },
      "version": {
        "key": "version",
        "display": "Version",
        "description": "For the code system, a list of versions that are supported by the server.",
        "type": "TerminologyCapabilities_CodeSystem_Version",
        "array": true
      },
      "subsumption": {
        "key": "subsumption",
        "display": "Subsumption",
        "description": "True if subsumption is supported for this version of the code system.",
        "type": "boolean"
      }
    },
    "backboneElement": true
  },
  "TerminologyCapabilities_CodeSystem_Version": {
    "display": "Terminology Capabilities Code System_ Version",
    "description": "Version of Code System supported",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "For version-less code systems, there should be a single version with no identifier.",
        "type": "string"
      },
      "isDefault": {
        "key": "isDefault",
        "display": "Is Default",
        "description": "If this is the default version for this code system.",
        "type": "boolean"
      },
      "compositional": {
        "key": "compositional",
        "display": "Compositional",
        "description": "If the compositional grammar defined by the code system is supported.",
        "type": "boolean"
      },
      "language": {
        "key": "language",
        "display": "Language",
        "description": "Language Displays supported.",
        "type": "enum",
        "enumValues": [
          "Language Displays supported"
        ],
        "array": true
      },
      "filter": {
        "key": "filter",
        "display": "Filter",
        "description": "Filter Properties supported.",
        "type": "TerminologyCapabilities_CodeSystem_Version_Filter",
        "array": true
      },
      "property": {
        "key": "property",
        "display": "Property",
        "description": "Properties supported for $lookup.",
        "type": "enum",
        "enumValues": [
          "Properties supported for $lookup"
        ],
        "array": true
      }
    },
    "backboneElement": true
  },
  "TerminologyCapabilities_CodeSystem_Version_Filter": {
    "display": "Terminology Capabilities Code System_ Version_ Filter",
    "description": "Filter Properties supported",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "Code of the property supported.",
        "type": "enum",
        "enumValues": [
          "Code of the property supported"
        ]
      },
      "op": {
        "key": "op",
        "display": "Op",
        "description": "Operations supported for the property.",
        "type": "enum",
        "enumValues": [
          "Operations supported for the property"
        ],
        "array": true
      }
    },
    "backboneElement": true
  },
  "TerminologyCapabilities_Expansion": {
    "display": "Terminology Capabilities Expansion",
    "description": "Information about the [ValueSet/$expand](valueset-operation-expand.html) operation",
    "properties": {
      "hierarchical": {
        "key": "hierarchical",
        "display": "Hierarchical",
        "description": "Whether the server can return nested value sets.",
        "type": "boolean"
      },
      "paging": {
        "key": "paging",
        "display": "Paging",
        "description": "Whether the server supports paging on expansion.",
        "type": "boolean"
      },
      "incomplete": {
        "key": "incomplete",
        "display": "Incomplete",
        "description": "Allow request for incomplete expansions?",
        "type": "boolean"
      },
      "parameter": {
        "key": "parameter",
        "display": "Parameter",
        "description": "Supported expansion parameter.",
        "type": "TerminologyCapabilities_Expansion_Parameter",
        "array": true
      },
      "textFilter": {
        "key": "textFilter",
        "display": "Text Filter",
        "description": "Documentation about text searching works.",
        "type": "markdown"
      }
    },
    "backboneElement": true
  },
  "TerminologyCapabilities_Expansion_Parameter": {
    "display": "Terminology Capabilities Expansion_ Parameter",
    "description": "Supported expansion parameter",
    "properties": {
      "name": {
        "key": "name",
        "display": "Name",
        "description": "Expansion Parameter name.",
        "type": "enum",
        "enumValues": [
          "Expansion Parameter name"
        ]
      },
      "documentation": {
        "key": "documentation",
        "display": "Documentation",
        "description": "Description of support for parameter.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "TerminologyCapabilities_ValidateCode": {
    "display": "Terminology Capabilities Validate Code",
    "description": "Information about the [ValueSet/$validate-code](valueset-operation-validate-code.html) operation",
    "properties": {
      "translations": {
        "key": "translations",
        "display": "Translations",
        "description": "Whether translations are validated.",
        "type": "boolean"
      }
    },
    "backboneElement": true
  },
  "TerminologyCapabilities_Translation": {
    "display": "Terminology Capabilities Translation",
    "description": "Information about the [ConceptMap/$translate](conceptmap-operation-translate.html) operation",
    "properties": {
      "needsMap": {
        "key": "needsMap",
        "display": "Needs Map",
        "description": "Whether the client must identify the map.",
        "type": "boolean"
      }
    },
    "backboneElement": true
  },
  "TerminologyCapabilities_Closure": {
    "display": "Terminology Capabilities Closure",
    "description": "Information about the [ConceptMap/$closure](conceptmap-operation-closure.html) operation",
    "properties": {
      "translation": {
        "key": "translation",
        "display": "Translation",
        "description": "If cross-system closure is supported.",
        "type": "boolean"
      }
    },
    "backboneElement": true
  },
  "TestReport": {
    "display": "TestReport",
    "description": "A summary of information based on the results of executing a TestScript.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "Identifier for the TestScript assigned for external purposes outside the context of FHIR.",
        "type": "Identifier"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A free text natural language name identifying the executed TestScript.",
        "type": "string"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The current state of this test report.",
        "type": "enum",
        "enumValues": [
          "completed",
          "in-progress",
          "waiting",
          "stopped",
          "entered-in-error"
        ]
      },
      "testScript": {
        "key": "testScript",
        "display": "Test Script",
        "description": "Ideally this is an absolute URL that is used to identify the version-specific TestScript that was executed, matching the `TestScript.url`.",
        "type": "Reference",
        "targetProfile": [
          "TestScript"
        ]
      },
      "result": {
        "key": "result",
        "display": "Result",
        "description": "The overall result from the execution of the TestScript.",
        "type": "enum",
        "enumValues": [
          "pass",
          "fail",
          "pending"
        ]
      },
      "score": {
        "key": "score",
        "display": "Score",
        "description": "The final score (percentage of tests passed) resulting from the execution of the TestScript.",
        "type": "decimal"
      },
      "tester": {
        "key": "tester",
        "display": "Tester",
        "description": "Name of the tester producing this report (Organization or individual).",
        "type": "string"
      },
      "issued": {
        "key": "issued",
        "display": "Issued",
        "description": "When the TestScript was executed and this TestReport was generated.",
        "type": "dateTime"
      },
      "participant": {
        "key": "participant",
        "display": "Participant",
        "description": "A participant in the test execution, either the execution engine, a client, or a server.",
        "type": "TestReport_Participant",
        "array": true
      },
      "setup": {
        "key": "setup",
        "display": "Setup",
        "description": "The results of the series of required setup operations before the tests were executed.",
        "type": "TestReport_Setup"
      },
      "test": {
        "key": "test",
        "display": "Test",
        "description": "A test executed from the test script.",
        "type": "TestReport_Test",
        "array": true
      },
      "teardown": {
        "key": "teardown",
        "display": "Teardown",
        "description": "The results of the series of operations required to clean up after all the tests were executed (successfully or otherwise).",
        "type": "TestReport_Teardown"
      }
    }
  },
  "TestReport_Participant": {
    "display": "Test Report Participant",
    "description": "A participant in the test execution, either the execution engine, a client, or a server",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "The type of participant.",
        "type": "enum",
        "enumValues": [
          "test-engine",
          "client",
          "server"
        ]
      },
      "uri": {
        "key": "uri",
        "display": "Uri",
        "description": "The uri of the participant. An absolute URL is preferred.",
        "type": "uri"
      },
      "display": {
        "key": "display",
        "display": "Display",
        "description": "The display name of the participant.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "TestReport_Setup": {
    "display": "Test Report Setup",
    "description": "The results of the series of required setup operations before the tests were executed",
    "properties": {
      "action": {
        "key": "action",
        "display": "Action",
        "description": "Action would contain either an operation or an assertion.",
        "type": "TestReport_Setup_Action",
        "array": true
      }
    },
    "backboneElement": true
  },
  "TestReport_Setup_Action": {
    "display": "Test Report Setup_ Action",
    "description": "A setup operation or assert that was executed",
    "properties": {
      "operation": {
        "key": "operation",
        "display": "Operation",
        "description": "The operation performed.",
        "type": "TestReport_Setup_Action_Operation"
      },
      "assert": {
        "key": "assert",
        "display": "Assert",
        "description": "The results of the assertion performed on the previous operations.",
        "type": "TestReport_Setup_Action_Assert"
      }
    },
    "backboneElement": true
  },
  "TestReport_Setup_Action_Operation": {
    "display": "Test Report Setup_ Action_ Operation",
    "description": "The operation to perform",
    "properties": {
      "result": {
        "key": "result",
        "display": "Result",
        "description": "The result of this operation.",
        "type": "enum",
        "enumValues": [
          "pass",
          "skip",
          "fail",
          "warning",
          "error"
        ]
      },
      "message": {
        "key": "message",
        "display": "Message",
        "description": "An explanatory message associated with the result.",
        "type": "markdown"
      },
      "detail": {
        "key": "detail",
        "display": "Detail",
        "description": "A link to further details on the result.",
        "type": "uri"
      }
    },
    "backboneElement": true
  },
  "TestReport_Setup_Action_Assert": {
    "display": "Test Report Setup_ Action_ Assert",
    "description": "The assertion to perform",
    "properties": {
      "result": {
        "key": "result",
        "display": "Result",
        "description": "The result of this assertion.",
        "type": "enum",
        "enumValues": [
          "pass",
          "skip",
          "fail",
          "warning",
          "error"
        ]
      },
      "message": {
        "key": "message",
        "display": "Message",
        "description": "An explanatory message associated with the result.",
        "type": "markdown"
      },
      "detail": {
        "key": "detail",
        "display": "Detail",
        "description": "A link to further details on the result.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "TestReport_Test": {
    "display": "Test Report Test",
    "description": "A test executed from the test script",
    "properties": {
      "name": {
        "key": "name",
        "display": "Name",
        "description": "The name of this test used for tracking/logging purposes by test engines.",
        "type": "string"
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A short description of the test used by test engines for tracking and reporting purposes.",
        "type": "string"
      },
      "action": {
        "key": "action",
        "display": "Action",
        "description": "Action would contain either an operation or an assertion.",
        "type": "TestReport_Test_Action",
        "array": true
      }
    },
    "backboneElement": true
  },
  "TestReport_Test_Action": {
    "display": "Test Report Test_ Action",
    "description": "A test operation or assert that was performed",
    "properties": {
      "operation": {
        "key": "operation",
        "display": "Operation",
        "description": "An operation would involve a REST request to a server.",
        "type": "UNKNOWN"
      },
      "assert": {
        "key": "assert",
        "display": "Assert",
        "description": "The results of the assertion performed on the previous operations.",
        "type": "UNKNOWN"
      }
    },
    "backboneElement": true
  },
  "TestReport_Teardown": {
    "display": "Test Report Teardown",
    "description": "The results of running the series of required clean up steps",
    "properties": {
      "action": {
        "key": "action",
        "display": "Action",
        "description": "The teardown action will only contain an operation.",
        "type": "TestReport_Teardown_Action",
        "array": true
      }
    },
    "backboneElement": true
  },
  "TestReport_Teardown_Action": {
    "display": "Test Report Teardown_ Action",
    "description": "One or more teardown operations performed",
    "properties": {
      "operation": {
        "key": "operation",
        "display": "Operation",
        "description": "An operation would involve a REST request to a server.",
        "type": "UNKNOWN"
      }
    },
    "backboneElement": true
  },
  "TestScript": {
    "display": "TestScript",
    "description": "A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.",
    "properties": {
      "url": {
        "key": "url",
        "display": "Url",
        "description": "An absolute URI that is used to identify this test script when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this test script is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the test script is stored on different servers.",
        "type": "uri"
      },
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "A formal identifier that is used to identify this test script when it is represented in other formats, or referenced in a specification, model, design or an instance.",
        "type": "Identifier"
      },
      "version": {
        "key": "version",
        "display": "Version",
        "description": "The identifier that is used to identify this version of the test script when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the test script author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
        "type": "string"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A natural language name identifying the test script. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
        "type": "string"
      },
      "title": {
        "key": "title",
        "display": "Title",
        "description": "A short, descriptive, user-friendly title for the test script.",
        "type": "string"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of this test script. Enables tracking the life-cycle of the content.",
        "type": "enum",
        "enumValues": [
          "draft",
          "active",
          "retired",
          "unknown"
        ]
      },
      "experimental": {
        "key": "experimental",
        "display": "Experimental",
        "description": "A Boolean value to indicate that this test script is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
        "type": "boolean"
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "The date  (and optionally time) when the test script was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the test script changes.",
        "type": "dateTime"
      },
      "publisher": {
        "key": "publisher",
        "display": "Publisher",
        "description": "The name of the organization or individual that published the test script.",
        "type": "string"
      },
      "contact": {
        "key": "contact",
        "display": "Contact",
        "description": "Contact details to assist a user in finding and communicating with the publisher.",
        "type": "ContactDetail",
        "array": true
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A free text natural language description of the test script from a consumer's perspective.",
        "type": "markdown"
      },
      "useContext": {
        "key": "useContext",
        "display": "Use Context",
        "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate test script instances.",
        "type": "UsageContext",
        "array": true
      },
      "jurisdiction": {
        "key": "jurisdiction",
        "display": "Jurisdiction",
        "description": "A legal or geographic region in which the test script is intended to be used.",
        "type": "CodeableConcept",
        "array": true
      },
      "purpose": {
        "key": "purpose",
        "display": "Purpose",
        "description": "Explanation of why this test script is needed and why it has been designed as it has.",
        "type": "markdown"
      },
      "copyright": {
        "key": "copyright",
        "display": "Copyright",
        "description": "A copyright statement relating to the test script and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the test script.",
        "type": "markdown"
      },
      "origin": {
        "key": "origin",
        "display": "Origin",
        "description": "An abstract server used in operations within this test script in the origin element.",
        "type": "TestScript_Origin",
        "array": true
      },
      "destination": {
        "key": "destination",
        "display": "Destination",
        "description": "An abstract server used in operations within this test script in the destination element.",
        "type": "TestScript_Destination",
        "array": true
      },
      "metadata": {
        "key": "metadata",
        "display": "Metadata",
        "description": "The required capability must exist and are assumed to function correctly on the FHIR server being tested.",
        "type": "TestScript_Metadata"
      },
      "fixture": {
        "key": "fixture",
        "display": "Fixture",
        "description": "Fixture in the test script - by reference (uri). All fixtures are required for the test script to execute.",
        "type": "TestScript_Fixture",
        "array": true
      },
      "profile": {
        "key": "profile",
        "display": "Profile",
        "description": "Reference to the profile to be used for validation.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ],
        "array": true
      },
      "variable": {
        "key": "variable",
        "display": "Variable",
        "description": "Variable is set based either on element value in response body or on header field value in the response headers.",
        "type": "TestScript_Variable",
        "array": true
      },
      "setup": {
        "key": "setup",
        "display": "Setup",
        "description": "A series of required setup operations before tests are executed.",
        "type": "TestScript_Setup"
      },
      "test": {
        "key": "test",
        "display": "Test",
        "description": "A test in this script.",
        "type": "TestScript_Test",
        "array": true
      },
      "teardown": {
        "key": "teardown",
        "display": "Teardown",
        "description": "A series of operations required to clean up after all the tests are executed (successfully or otherwise).",
        "type": "TestScript_Teardown"
      }
    }
  },
  "TestScript_Origin": {
    "display": "Test Script Origin",
    "description": "An abstract server representing a client or sender in a message exchange",
    "properties": {
      "index": {
        "key": "index",
        "display": "Index",
        "description": "Abstract name given to an origin server in this test script.  The name is provided as a number starting at 1.",
        "type": "integer"
      },
      "profile": {
        "key": "profile",
        "display": "Profile",
        "description": "The type of origin profile the test system supports.",
        "type": "Coding"
      }
    },
    "backboneElement": true
  },
  "TestScript_Destination": {
    "display": "Test Script Destination",
    "description": "An abstract server representing a destination or receiver in a message exchange",
    "properties": {
      "index": {
        "key": "index",
        "display": "Index",
        "description": "Abstract name given to a destination server in this test script.  The name is provided as a number starting at 1.",
        "type": "integer"
      },
      "profile": {
        "key": "profile",
        "display": "Profile",
        "description": "The type of destination profile the test system supports.",
        "type": "Coding"
      }
    },
    "backboneElement": true
  },
  "TestScript_Metadata": {
    "display": "Test Script Metadata",
    "description": "Required capability that is assumed to function correctly on the FHIR server being tested",
    "properties": {
      "link": {
        "key": "link",
        "display": "Link",
        "description": "A link to the FHIR specification that this test is covering.",
        "type": "TestScript_Metadata_Link",
        "array": true
      },
      "capability": {
        "key": "capability",
        "display": "Capability",
        "description": "Capabilities that must exist and are assumed to function correctly on the FHIR server being tested.",
        "type": "TestScript_Metadata_Capability",
        "array": true
      }
    },
    "backboneElement": true
  },
  "TestScript_Metadata_Link": {
    "display": "Test Script Metadata_ Link",
    "description": "Links to the FHIR specification",
    "properties": {
      "url": {
        "key": "url",
        "display": "Url",
        "description": "URL to a particular requirement or feature within the FHIR specification.",
        "type": "uri"
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "Short description of the link.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "TestScript_Metadata_Capability": {
    "display": "Test Script Metadata_ Capability",
    "description": "Capabilities  that are assumed to function correctly on the FHIR server being tested",
    "properties": {
      "required": {
        "key": "required",
        "display": "Required",
        "description": "Whether or not the test execution will require the given capabilities of the server in order for this test script to execute.",
        "type": "boolean"
      },
      "validated": {
        "key": "validated",
        "display": "Validated",
        "description": "Whether or not the test execution will validate the given capabilities of the server in order for this test script to execute.",
        "type": "boolean"
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "Description of the capabilities that this test script is requiring the server to support.",
        "type": "string"
      },
      "origin": {
        "key": "origin",
        "display": "Origin",
        "description": "Which origin server these requirements apply to.",
        "type": "integer",
        "array": true
      },
      "destination": {
        "key": "destination",
        "display": "Destination",
        "description": "Which server these requirements apply to.",
        "type": "integer"
      },
      "link": {
        "key": "link",
        "display": "Link",
        "description": "Links to the FHIR specification that describes this interaction and the resources involved in more detail.",
        "type": "uri",
        "array": true
      },
      "capabilities": {
        "key": "capabilities",
        "display": "Capabilities",
        "description": "Minimum capabilities required of server for test script to execute successfully.   If server does not meet at a minimum the referenced capability statement, then all tests in this script are skipped.",
        "type": "canonical"
      }
    },
    "backboneElement": true
  },
  "TestScript_Fixture": {
    "display": "Test Script Fixture",
    "description": "Fixture in the test script - by reference (uri)",
    "properties": {
      "autocreate": {
        "key": "autocreate",
        "display": "Autocreate",
        "description": "Whether or not to implicitly create the fixture during setup. If true, the fixture is automatically created on each server being tested during setup, therefore no create operation is required for this fixture in the TestScript.setup section.",
        "type": "boolean"
      },
      "autodelete": {
        "key": "autodelete",
        "display": "Autodelete",
        "description": "Whether or not to implicitly delete the fixture during teardown. If true, the fixture is automatically deleted on each server being tested during teardown, therefore no delete operation is required for this fixture in the TestScript.teardown section.",
        "type": "boolean"
      },
      "resource": {
        "key": "resource",
        "display": "Resource",
        "description": "Reference to the resource (containing the contents of the resource needed for operations).",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ]
      }
    },
    "backboneElement": true
  },
  "TestScript_Variable": {
    "display": "Test Script Variable",
    "description": "Placeholder for evaluated elements",
    "properties": {
      "name": {
        "key": "name",
        "display": "Name",
        "description": "Descriptive name for this variable.",
        "type": "string"
      },
      "defaultValue": {
        "key": "defaultValue",
        "display": "Default Value",
        "description": "A default, hard-coded, or user-defined value for this variable.",
        "type": "string"
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A free text natural language description of the variable and its purpose.",
        "type": "string"
      },
      "expression": {
        "key": "expression",
        "display": "Expression",
        "description": "The FHIRPath expression to evaluate against the fixture body. When variables are defined, only one of either expression, headerField or path must be specified.",
        "type": "string"
      },
      "headerField": {
        "key": "headerField",
        "display": "Header Field",
        "description": "Will be used to grab the HTTP header field value from the headers that sourceId is pointing to.",
        "type": "string"
      },
      "hint": {
        "key": "hint",
        "display": "Hint",
        "description": "Displayable text string with hint help information to the user when entering a default value.",
        "type": "string"
      },
      "path": {
        "key": "path",
        "display": "Path",
        "description": "XPath or JSONPath to evaluate against the fixture body.  When variables are defined, only one of either expression, headerField or path must be specified.",
        "type": "string"
      },
      "sourceId": {
        "key": "sourceId",
        "display": "Source Id",
        "description": "Fixture to evaluate the XPath/JSONPath expression or the headerField  against within this variable.",
        "type": "id"
      }
    },
    "backboneElement": true
  },
  "TestScript_Setup": {
    "display": "Test Script Setup",
    "description": "A series of required setup operations before tests are executed",
    "properties": {
      "action": {
        "key": "action",
        "display": "Action",
        "description": "Action would contain either an operation or an assertion.",
        "type": "TestScript_Setup_Action",
        "array": true
      }
    },
    "backboneElement": true
  },
  "TestScript_Setup_Action": {
    "display": "Test Script Setup_ Action",
    "description": "A setup operation or assert to perform",
    "properties": {
      "operation": {
        "key": "operation",
        "display": "Operation",
        "description": "The operation to perform.",
        "type": "TestScript_Setup_Action_Operation"
      },
      "assert": {
        "key": "assert",
        "display": "Assert",
        "description": "Evaluates the results of previous operations to determine if the server under test behaves appropriately.",
        "type": "TestScript_Setup_Action_Assert"
      }
    },
    "backboneElement": true
  },
  "TestScript_Setup_Action_Operation": {
    "display": "Test Script Setup_ Action_ Operation",
    "description": "The setup operation to perform",
    "properties": {
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Server interaction or operation type.",
        "type": "Coding"
      },
      "resource": {
        "key": "resource",
        "display": "Resource",
        "description": "The type of the resource.  See http://build.fhir.org/resourcelist.html.",
        "type": "enum",
        "enumValues": [
          "Resource type"
        ]
      },
      "label": {
        "key": "label",
        "display": "Label",
        "description": "The label would be used for tracking/logging purposes by test engines.",
        "type": "string"
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "The description would be used by test engines for tracking and reporting purposes.",
        "type": "string"
      },
      "accept": {
        "key": "accept",
        "display": "Accept",
        "description": "The mime-type to use for RESTful operation in the 'Accept' header.",
        "type": "enum",
        "enumValues": [
          "Mime type to accept in the payload of the response, with charset etc."
        ]
      },
      "contentType": {
        "key": "contentType",
        "display": "Content Type",
        "description": "The mime-type to use for RESTful operation in the 'Content-Type' header.",
        "type": "enum",
        "enumValues": [
          "Mime type of the request payload contents, with charset etc."
        ]
      },
      "destination": {
        "key": "destination",
        "display": "Destination",
        "description": "The server where the request message is destined for.  Must be one of the server numbers listed in TestScript.destination section.",
        "type": "integer"
      },
      "encodeRequestUrl": {
        "key": "encodeRequestUrl",
        "display": "Encode Request Url",
        "description": "Whether or not to implicitly send the request url in encoded format. The default is true to match the standard RESTful client behavior. Set to false when communicating with a server that does not support encoded url paths.",
        "type": "boolean"
      },
      "method": {
        "key": "method",
        "display": "Method",
        "description": "The HTTP method the test engine MUST use for this operation regardless of any other operation details.",
        "type": "enum",
        "enumValues": [
          "delete",
          "get",
          "options",
          "patch",
          "post",
          "put",
          "head"
        ]
      },
      "origin": {
        "key": "origin",
        "display": "Origin",
        "description": "The server where the request message originates from.  Must be one of the server numbers listed in TestScript.origin section.",
        "type": "integer"
      },
      "params": {
        "key": "params",
        "display": "Params",
        "description": "Path plus parameters after [type].  Used to set parts of the request URL explicitly.",
        "type": "string"
      },
      "requestHeader": {
        "key": "requestHeader",
        "display": "Request Header",
        "description": "Header elements would be used to set HTTP headers.",
        "type": "TestScript_Setup_Action_Operation_RequestHeader",
        "array": true
      },
      "requestId": {
        "key": "requestId",
        "display": "Request Id",
        "description": "The fixture id (maybe new) to map to the request.",
        "type": "id"
      },
      "responseId": {
        "key": "responseId",
        "display": "Response Id",
        "description": "The fixture id (maybe new) to map to the response.",
        "type": "id"
      },
      "sourceId": {
        "key": "sourceId",
        "display": "Source Id",
        "description": "The id of the fixture used as the body of a PUT or POST request.",
        "type": "id"
      },
      "targetId": {
        "key": "targetId",
        "display": "Target Id",
        "description": "Id of fixture used for extracting the [id],  [type], and [vid] for GET requests.",
        "type": "id"
      },
      "url": {
        "key": "url",
        "display": "Url",
        "description": "Complete request URL.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "TestScript_Setup_Action_Operation_RequestHeader": {
    "display": "Test Script Setup_ Action_ Operation_ Request Header",
    "description": "Each operation can have one or more header elements",
    "properties": {
      "field": {
        "key": "field",
        "display": "Field",
        "description": "The HTTP header field e.g. \"Accept\".",
        "type": "string"
      },
      "value": {
        "key": "value",
        "display": "Value",
        "description": "The value of the header e.g. \"application/fhir+xml\".",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "TestScript_Setup_Action_Assert": {
    "display": "Test Script Setup_ Action_ Assert",
    "description": "The assertion to perform",
    "properties": {
      "label": {
        "key": "label",
        "display": "Label",
        "description": "The label would be used for tracking/logging purposes by test engines.",
        "type": "string"
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "The description would be used by test engines for tracking and reporting purposes.",
        "type": "string"
      },
      "direction": {
        "key": "direction",
        "display": "Direction",
        "description": "The direction to use for the assertion.",
        "type": "enum",
        "enumValues": [
          "response",
          "request"
        ]
      },
      "compareToSourceId": {
        "key": "compareToSourceId",
        "display": "Compare To Source Id",
        "description": "Id of the source fixture used as the contents to be evaluated by either the \"source/expression\" or \"sourceId/path\" definition.",
        "type": "string"
      },
      "compareToSourceExpression": {
        "key": "compareToSourceExpression",
        "display": "Compare To Source Expression",
        "description": "The FHIRPath expression to evaluate against the source fixture. When compareToSourceId is defined, either compareToSourceExpression or compareToSourcePath must be defined, but not both.",
        "type": "string"
      },
      "compareToSourcePath": {
        "key": "compareToSourcePath",
        "display": "Compare To Source Path",
        "description": "XPath or JSONPath expression to evaluate against the source fixture. When compareToSourceId is defined, either compareToSourceExpression or compareToSourcePath must be defined, but not both.",
        "type": "string"
      },
      "contentType": {
        "key": "contentType",
        "display": "Content Type",
        "description": "The mime-type contents to compare against the request or response message 'Content-Type' header.",
        "type": "enum",
        "enumValues": [
          "Mime type to compare against the 'Content-Type' header"
        ]
      },
      "expression": {
        "key": "expression",
        "display": "Expression",
        "description": "The FHIRPath expression to be evaluated against the request or response message contents - HTTP headers and payload.",
        "type": "string"
      },
      "headerField": {
        "key": "headerField",
        "display": "Header Field",
        "description": "The HTTP header field name e.g. 'Location'.",
        "type": "string"
      },
      "minimumId": {
        "key": "minimumId",
        "display": "Minimum Id",
        "description": "The ID of a fixture.  Asserts that the response contains at a minimum the fixture specified by minimumId.",
        "type": "string"
      },
      "navigationLinks": {
        "key": "navigationLinks",
        "display": "Navigation Links",
        "description": "Whether or not the test execution performs validation on the bundle navigation links.",
        "type": "boolean"
      },
      "operator": {
        "key": "operator",
        "display": "Operator",
        "description": "The operator type defines the conditional behavior of the assert. If not defined, the default is equals.",
        "type": "enum",
        "enumValues": [
          "equals",
          "notEquals",
          "in",
          "notIn",
          "greaterThan",
          "lessThan",
          "empty",
          "notEmpty",
          "contains",
          "notContains",
          "eval"
        ]
      },
      "path": {
        "key": "path",
        "display": "Path",
        "description": "The XPath or JSONPath expression to be evaluated against the fixture representing the response received from server.",
        "type": "string"
      },
      "requestMethod": {
        "key": "requestMethod",
        "display": "Request Method",
        "description": "The request method or HTTP operation code to compare against that used by the client system under test.",
        "type": "enum",
        "enumValues": [
          "delete",
          "get",
          "options",
          "patch",
          "post",
          "put",
          "head"
        ]
      },
      "requestURL": {
        "key": "requestURL",
        "display": "Request U R L",
        "description": "The value to use in a comparison against the request URL path string.",
        "type": "string"
      },
      "resource": {
        "key": "resource",
        "display": "Resource",
        "description": "The type of the resource.  See http://build.fhir.org/resourcelist.html.",
        "type": "enum",
        "enumValues": [
          "Resource type"
        ]
      },
      "response": {
        "key": "response",
        "display": "Response",
        "description": "okay | created | noContent | notModified | bad | forbidden | notFound | methodNotAllowed | conflict | gone | preconditionFailed | unprocessable.",
        "type": "enum",
        "enumValues": [
          "okay",
          "created",
          "noContent",
          "notModified",
          "bad",
          "forbidden",
          "notFound",
          "methodNotAllowed",
          "conflict",
          "gone",
          "preconditionFailed",
          "unprocessable"
        ]
      },
      "responseCode": {
        "key": "responseCode",
        "display": "Response Code",
        "description": "The value of the HTTP response code to be tested.",
        "type": "string"
      },
      "sourceId": {
        "key": "sourceId",
        "display": "Source Id",
        "description": "Fixture to evaluate the XPath/JSONPath expression or the headerField  against.",
        "type": "id"
      },
      "validateProfileId": {
        "key": "validateProfileId",
        "display": "Validate Profile Id",
        "description": "The ID of the Profile to validate against.",
        "type": "id"
      },
      "value": {
        "key": "value",
        "display": "Value",
        "description": "The value to compare to.",
        "type": "string"
      },
      "warningOnly": {
        "key": "warningOnly",
        "display": "Warning Only",
        "description": "Whether or not the test execution will produce a warning only on error for this assert.",
        "type": "boolean"
      }
    },
    "backboneElement": true
  },
  "TestScript_Test": {
    "display": "Test Script Test",
    "description": "A test in this script",
    "properties": {
      "name": {
        "key": "name",
        "display": "Name",
        "description": "The name of this test used for tracking/logging purposes by test engines.",
        "type": "string"
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A short description of the test used by test engines for tracking and reporting purposes.",
        "type": "string"
      },
      "action": {
        "key": "action",
        "display": "Action",
        "description": "Action would contain either an operation or an assertion.",
        "type": "TestScript_Test_Action",
        "array": true
      }
    },
    "backboneElement": true
  },
  "TestScript_Test_Action": {
    "display": "Test Script Test_ Action",
    "description": "A test operation or assert to perform",
    "properties": {
      "operation": {
        "key": "operation",
        "display": "Operation",
        "description": "An operation would involve a REST request to a server.",
        "type": "UNKNOWN"
      },
      "assert": {
        "key": "assert",
        "display": "Assert",
        "description": "Evaluates the results of previous operations to determine if the server under test behaves appropriately.",
        "type": "UNKNOWN"
      }
    },
    "backboneElement": true
  },
  "TestScript_Teardown": {
    "display": "Test Script Teardown",
    "description": "A series of required clean up steps",
    "properties": {
      "action": {
        "key": "action",
        "display": "Action",
        "description": "The teardown action will only contain an operation.",
        "type": "TestScript_Teardown_Action",
        "array": true
      }
    },
    "backboneElement": true
  },
  "TestScript_Teardown_Action": {
    "display": "Test Script Teardown_ Action",
    "description": "One or more teardown operations to perform",
    "properties": {
      "operation": {
        "key": "operation",
        "display": "Operation",
        "description": "An operation would involve a REST request to a server.",
        "type": "UNKNOWN"
      }
    },
    "backboneElement": true
  },
  "ValueSet": {
    "display": "ValueSet",
    "description": "A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).",
    "properties": {
      "url": {
        "key": "url",
        "display": "Url",
        "description": "An absolute URI that is used to identify this value set when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this value set is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the value set is stored on different servers.",
        "type": "uri"
      },
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "A formal identifier that is used to identify this value set when it is represented in other formats, or referenced in a specification, model, design or an instance.",
        "type": "Identifier",
        "array": true
      },
      "version": {
        "key": "version",
        "display": "Version",
        "description": "The identifier that is used to identify this version of the value set when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the value set author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
        "type": "string"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A natural language name identifying the value set. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
        "type": "string"
      },
      "title": {
        "key": "title",
        "display": "Title",
        "description": "A short, descriptive, user-friendly title for the value set.",
        "type": "string"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of this value set. Enables tracking the life-cycle of the content. The status of the value set applies to the value set definition (ValueSet.compose) and the associated ValueSet metadata. Expansions do not have a state.",
        "type": "enum",
        "enumValues": [
          "draft",
          "active",
          "retired",
          "unknown"
        ]
      },
      "experimental": {
        "key": "experimental",
        "display": "Experimental",
        "description": "A Boolean value to indicate that this value set is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
        "type": "boolean"
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "The date (and optionally time) when the value set was created or revised (e.g. the 'content logical definition').",
        "type": "dateTime"
      },
      "publisher": {
        "key": "publisher",
        "display": "Publisher",
        "description": "The name of the organization or individual that published the value set.",
        "type": "string"
      },
      "contact": {
        "key": "contact",
        "display": "Contact",
        "description": "Contact details to assist a user in finding and communicating with the publisher.",
        "type": "ContactDetail",
        "array": true
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A free text natural language description of the value set from a consumer's perspective. The textual description specifies the span of meanings for concepts to be included within the Value Set Expansion, and also may specify the intended use and limitations of the Value Set.",
        "type": "markdown"
      },
      "useContext": {
        "key": "useContext",
        "display": "Use Context",
        "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate value set instances.",
        "type": "UsageContext",
        "array": true
      },
      "jurisdiction": {
        "key": "jurisdiction",
        "display": "Jurisdiction",
        "description": "A legal or geographic region in which the value set is intended to be used.",
        "type": "CodeableConcept",
        "array": true
      },
      "immutable": {
        "key": "immutable",
        "display": "Immutable",
        "description": "If this is set to 'true', then no new versions of the content logical definition can be created.  Note: Other metadata might still change.",
        "type": "boolean"
      },
      "purpose": {
        "key": "purpose",
        "display": "Purpose",
        "description": "Explanation of why this value set is needed and why it has been designed as it has.",
        "type": "markdown"
      },
      "copyright": {
        "key": "copyright",
        "display": "Copyright",
        "description": "A copyright statement relating to the value set and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the value set.",
        "type": "markdown"
      },
      "compose": {
        "key": "compose",
        "display": "Compose",
        "description": "A set of criteria that define the contents of the value set by including or excluding codes selected from the specified code system(s) that the value set draws from. This is also known as the Content Logical Definition (CLD).",
        "type": "ValueSet_Compose"
      },
      "expansion": {
        "key": "expansion",
        "display": "Expansion",
        "description": "A value set can also be \"expanded\", where the value set is turned into a simple collection of enumerated codes. This element holds the expansion, if it has been performed.",
        "type": "ValueSet_Expansion"
      }
    }
  },
  "ValueSet_Compose": {
    "display": "Value Set Compose",
    "description": "Content logical definition of the value set (CLD)",
    "properties": {
      "lockedDate": {
        "key": "lockedDate",
        "display": "Locked Date",
        "description": "The Locked Date is  the effective date that is used to determine the version of all referenced Code Systems and Value Set Definitions included in the compose that are not already tied to a specific version.",
        "type": "date"
      },
      "inactive": {
        "key": "inactive",
        "display": "Inactive",
        "description": "Whether inactive codes - codes that are not approved for current use - are in the value set. If inactive = true, inactive codes are to be included in the expansion, if inactive = false, the inactive codes will not be included in the expansion. If absent, the behavior is determined by the implementation, or by the applicable $expand parameters (but generally, inactive codes would be expected to be included).",
        "type": "boolean"
      },
      "include": {
        "key": "include",
        "display": "Include",
        "description": "Include one or more codes from a code system or other value set(s).",
        "type": "ValueSet_Compose_Include",
        "array": true
      },
      "exclude": {
        "key": "exclude",
        "display": "Exclude",
        "description": "Exclude one or more codes from the value set based on code system filters and/or other value sets.",
        "type": "UNKNOWN"
      }
    },
    "backboneElement": true
  },
  "ValueSet_Compose_Include": {
    "display": "Value Set Compose_ Include",
    "description": "Include one or more codes from a code system or other value set(s)",
    "properties": {
      "system": {
        "key": "system",
        "display": "System",
        "description": "An absolute URI which is the code system from which the selected codes come from.",
        "type": "uri"
      },
      "version": {
        "key": "version",
        "display": "Version",
        "description": "The version of the code system that the codes are selected from, or the special version '*' for all versions.",
        "type": "string"
      },
      "concept": {
        "key": "concept",
        "display": "Concept",
        "description": "Specifies a concept to be included or excluded.",
        "type": "ValueSet_Compose_Include_Concept",
        "array": true
      },
      "filter": {
        "key": "filter",
        "display": "Filter",
        "description": "Select concepts by specify a matching criterion based on the properties (including relationships) defined by the system, or on filters defined by the system. If multiple filters are specified, they SHALL all be true.",
        "type": "ValueSet_Compose_Include_Filter",
        "array": true
      },
      "valueSet": {
        "key": "valueSet",
        "display": "Value Set",
        "description": "Selects the concepts found in this value set (based on its value set definition). This is an absolute URI that is a reference to ValueSet.url.  If multiple value sets are specified this includes the union of the contents of all of the referenced value sets.",
        "type": "canonical",
        "array": true
      }
    },
    "backboneElement": true
  },
  "ValueSet_Compose_Include_Concept": {
    "display": "Value Set Compose_ Include_ Concept",
    "description": "A concept defined in the system",
    "properties": {
      "code": {
        "key": "code",
        "display": "Code",
        "description": "Specifies a code for the concept to be included or excluded.",
        "type": "enum",
        "enumValues": [
          "Code or expression from system"
        ]
      },
      "display": {
        "key": "display",
        "display": "Display",
        "description": "The text to display to the user for this concept in the context of this valueset. If no display is provided, then applications using the value set use the display specified for the code by the system.",
        "type": "string"
      },
      "designation": {
        "key": "designation",
        "display": "Designation",
        "description": "Additional representations for this concept when used in this value set - other languages, aliases, specialized purposes, used for particular purposes, etc.",
        "type": "ValueSet_Compose_Include_Concept_Designation",
        "array": true
      }
    },
    "backboneElement": true
  },
  "ValueSet_Compose_Include_Concept_Designation": {
    "display": "Value Set Compose_ Include_ Concept_ Designation",
    "description": "Additional representations for this concept",
    "properties": {
      "language": {
        "key": "language",
        "display": "Language",
        "description": "The language this designation is defined for.",
        "type": "enum",
        "enumValues": [
          "Human language of the designation"
        ]
      },
      "use": {
        "key": "use",
        "display": "Use",
        "description": "A code that represents types of uses of designations.",
        "type": "Coding"
      },
      "value": {
        "key": "value",
        "display": "Value",
        "description": "The text value for this designation.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "ValueSet_Compose_Include_Filter": {
    "display": "Value Set Compose_ Include_ Filter",
    "description": "Select codes/concepts by their properties (including relationships)",
    "properties": {
      "property": {
        "key": "property",
        "display": "Property",
        "description": "A code that identifies a property or a filter defined in the code system.",
        "type": "enum",
        "enumValues": [
          "A property/filter defined by the code system"
        ]
      },
      "op": {
        "key": "op",
        "display": "Op",
        "description": "The kind of operation to perform as a part of the filter criteria.",
        "type": "enum",
        "enumValues": [
          "=",
          "is-a",
          "descendent-of",
          "is-not-a",
          "regex",
          "in",
          "not-in",
          "generalizes",
          "exists"
        ]
      },
      "value": {
        "key": "value",
        "display": "Value",
        "description": "The match value may be either a code defined by the system, or a string value, which is a regex match on the literal string of the property value  (if the filter represents a property defined in CodeSystem) or of the system filter value (if the filter represents a filter defined in CodeSystem) when the operation is 'regex', or one of the values (true and false), when the operation is 'exists'.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "ValueSet_Expansion": {
    "display": "Value Set Expansion",
    "description": "Used when the value set is \"expanded\"",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "An identifier that uniquely identifies this expansion of the valueset, based on a unique combination of the provided parameters, the system default parameters, and the underlying system code system versions etc. Systems may re-use the same identifier as long as those factors remain the same, and the expansion is the same, but are not required to do so. This is a business identifier.",
        "type": "uri"
      },
      "timestamp": {
        "key": "timestamp",
        "display": "Timestamp",
        "description": "The time at which the expansion was produced by the expanding system.",
        "type": "dateTime"
      },
      "total": {
        "key": "total",
        "display": "Total",
        "description": "The total number of concepts in the expansion. If the number of concept nodes in this resource is less than the stated number, then the server can return more using the offset parameter.",
        "type": "integer"
      },
      "offset": {
        "key": "offset",
        "display": "Offset",
        "description": "If paging is being used, the offset at which this resource starts.  I.e. this resource is a partial view into the expansion. If paging is not being used, this element SHALL NOT be present.",
        "type": "integer"
      },
      "parameter": {
        "key": "parameter",
        "display": "Parameter",
        "description": "A parameter that controlled the expansion process. These parameters may be used by users of expanded value sets to check whether the expansion is suitable for a particular purpose, or to pick the correct expansion.",
        "type": "ValueSet_Expansion_Parameter",
        "array": true
      },
      "contains": {
        "key": "contains",
        "display": "Contains",
        "description": "The codes that are contained in the value set expansion.",
        "type": "ValueSet_Expansion_Contains",
        "array": true
      }
    },
    "backboneElement": true
  },
  "ValueSet_Expansion_Parameter": {
    "display": "Value Set Expansion_ Parameter",
    "description": "Parameter that controlled the expansion process",
    "properties": {
      "name": {
        "key": "name",
        "display": "Name",
        "description": "Name of the input parameter to the $expand operation; may be a server-assigned name for additional default or other server-supplied parameters used to control the expansion process.",
        "type": "string"
      },
      "value[x]": {
        "key": "value[x]",
        "display": "Value[x]",
        "description": "The value of the parameter.",
        "type": "string"
      }
    },
    "backboneElement": true
  },
  "ValueSet_Expansion_Contains": {
    "display": "Value Set Expansion_ Contains",
    "description": "Codes in the value set",
    "properties": {
      "system": {
        "key": "system",
        "display": "System",
        "description": "An absolute URI which is the code system in which the code for this item in the expansion is defined.",
        "type": "uri"
      },
      "abstract": {
        "key": "abstract",
        "display": "Abstract",
        "description": "If true, this entry is included in the expansion for navigational purposes, and the user cannot select the code directly as a proper value.",
        "type": "boolean"
      },
      "inactive": {
        "key": "inactive",
        "display": "Inactive",
        "description": "If the concept is inactive in the code system that defines it. Inactive codes are those that are no longer to be used, but are maintained by the code system for understanding legacy data. It might not be known or specified whether an concept is inactive (and it may depend on the context of use).",
        "type": "boolean"
      },
      "version": {
        "key": "version",
        "display": "Version",
        "description": "The version of the code system from this code was taken. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.",
        "type": "string"
      },
      "code": {
        "key": "code",
        "display": "Code",
        "description": "The code for this item in the expansion hierarchy. If this code is missing the entry in the hierarchy is a place holder (abstract) and does not represent a valid code in the value set.",
        "type": "enum",
        "enumValues": [
          "Code - if blank, this is not a selectable code"
        ]
      },
      "display": {
        "key": "display",
        "display": "Display",
        "description": "The recommended display for this item in the expansion.",
        "type": "string"
      },
      "designation": {
        "key": "designation",
        "display": "Designation",
        "description": "Additional representations for this item - other languages, aliases, specialized purposes, used for particular purposes, etc. These are relevant when the conditions of the expansion do not fix to a single correct representation.",
        "type": "UNKNOWN"
      },
      "contains": {
        "key": "contains",
        "display": "Contains",
        "description": "Other codes and entries contained under this entry in the hierarchy.",
        "type": "UNKNOWN"
      }
    },
    "backboneElement": true
  },
  "VerificationResult": {
    "display": "VerificationResult",
    "description": "Describes validation requirements, source(s), status and dates for one or more elements.",
    "properties": {
      "target": {
        "key": "target",
        "display": "Target",
        "description": "A resource that was validated.",
        "type": "Reference",
        "targetProfile": [
          "Resource"
        ],
        "array": true
      },
      "targetLocation": {
        "key": "targetLocation",
        "display": "Target Location",
        "description": "The fhirpath location(s) within the resource that was validated.",
        "type": "string",
        "array": true
      },
      "need": {
        "key": "need",
        "display": "Need",
        "description": "The frequency with which the target must be validated (none; initial; periodic).",
        "type": "CodeableConcept"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The validation status of the target (attested; validated; in process; requires revalidation; validation failed; revalidation failed).",
        "type": "enum",
        "enumValues": [
          "attested",
          "validated",
          "in-process",
          "req-revalid",
          "val-fail",
          "reval-fail"
        ]
      },
      "statusDate": {
        "key": "statusDate",
        "display": "Status Date",
        "description": "When the validation status was updated.",
        "type": "dateTime"
      },
      "validationType": {
        "key": "validationType",
        "display": "Validation Type",
        "description": "What the target is validated against (nothing; primary source; multiple sources).",
        "type": "CodeableConcept"
      },
      "validationProcess": {
        "key": "validationProcess",
        "display": "Validation Process",
        "description": "The primary process by which the target is validated (edit check; value set; primary source; multiple sources; standalone; in context).",
        "type": "CodeableConcept",
        "array": true
      },
      "frequency": {
        "key": "frequency",
        "display": "Frequency",
        "description": "Frequency of revalidation.",
        "type": "Timing"
      },
      "lastPerformed": {
        "key": "lastPerformed",
        "display": "Last Performed",
        "description": "The date/time validation was last completed (including failed validations).",
        "type": "dateTime"
      },
      "nextScheduled": {
        "key": "nextScheduled",
        "display": "Next Scheduled",
        "description": "The date when target is next validated, if appropriate.",
        "type": "date"
      },
      "failureAction": {
        "key": "failureAction",
        "display": "Failure Action",
        "description": "The result if validation fails (fatal; warning; record only; none).",
        "type": "CodeableConcept"
      },
      "primarySource": {
        "key": "primarySource",
        "display": "Primary Source",
        "description": "Information about the primary source(s) involved in validation.",
        "type": "VerificationResult_PrimarySource",
        "array": true
      },
      "attestation": {
        "key": "attestation",
        "display": "Attestation",
        "description": "Information about the entity attesting to information.",
        "type": "VerificationResult_Attestation"
      },
      "validator": {
        "key": "validator",
        "display": "Validator",
        "description": "Information about the entity validating information.",
        "type": "VerificationResult_Validator",
        "array": true
      }
    }
  },
  "VerificationResult_PrimarySource": {
    "display": "Verification Result Primary Source",
    "description": "Information about the primary source(s) involved in validation",
    "properties": {
      "who": {
        "key": "who",
        "display": "Who",
        "description": "Reference to the primary source.",
        "type": "Reference",
        "targetProfile": [
          "Organization",
          "Practitioner",
          "PractitionerRole"
        ]
      },
      "type": {
        "key": "type",
        "display": "Type",
        "description": "Type of primary source (License Board; Primary Education; Continuing Education; Postal Service; Relationship owner; Registration Authority; legal source; issuing source; authoritative source).",
        "type": "CodeableConcept",
        "array": true
      },
      "communicationMethod": {
        "key": "communicationMethod",
        "display": "Communication Method",
        "description": "Method for communicating with the primary source (manual; API; Push).",
        "type": "CodeableConcept",
        "array": true
      },
      "validationStatus": {
        "key": "validationStatus",
        "display": "Validation Status",
        "description": "Status of the validation of the target against the primary source (successful; failed; unknown).",
        "type": "CodeableConcept"
      },
      "validationDate": {
        "key": "validationDate",
        "display": "Validation Date",
        "description": "When the target was validated against the primary source.",
        "type": "dateTime"
      },
      "canPushUpdates": {
        "key": "canPushUpdates",
        "display": "Can Push Updates",
        "description": "Ability of the primary source to push updates/alerts (yes; no; undetermined).",
        "type": "CodeableConcept"
      },
      "pushTypeAvailable": {
        "key": "pushTypeAvailable",
        "display": "Push Type Available",
        "description": "Type of alerts/updates the primary source can send (specific requested changes; any changes; as defined by source).",
        "type": "CodeableConcept",
        "array": true
      }
    },
    "backboneElement": true
  },
  "VerificationResult_Attestation": {
    "display": "Verification Result Attestation",
    "description": "Information about the entity attesting to information",
    "properties": {
      "who": {
        "key": "who",
        "display": "Who",
        "description": "The individual or organization attesting to information.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole",
          "Organization"
        ]
      },
      "onBehalfOf": {
        "key": "onBehalfOf",
        "display": "On Behalf Of",
        "description": "When the who is asserting on behalf of another (organization or individual).",
        "type": "Reference",
        "targetProfile": [
          "Organization",
          "Practitioner",
          "PractitionerRole"
        ]
      },
      "communicationMethod": {
        "key": "communicationMethod",
        "display": "Communication Method",
        "description": "The method by which attested information was submitted/retrieved (manual; API; Push).",
        "type": "CodeableConcept"
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "The date the information was attested to.",
        "type": "date"
      },
      "sourceIdentityCertificate": {
        "key": "sourceIdentityCertificate",
        "display": "Source Identity Certificate",
        "description": "A digital identity certificate associated with the attestation source.",
        "type": "string"
      },
      "proxyIdentityCertificate": {
        "key": "proxyIdentityCertificate",
        "display": "Proxy Identity Certificate",
        "description": "A digital identity certificate associated with the proxy entity submitting attested information on behalf of the attestation source.",
        "type": "string"
      },
      "proxySignature": {
        "key": "proxySignature",
        "display": "Proxy Signature",
        "description": "Signed assertion by the proxy entity indicating that they have the right to submit attested information on behalf of the attestation source.",
        "type": "Signature"
      },
      "sourceSignature": {
        "key": "sourceSignature",
        "display": "Source Signature",
        "description": "Signed assertion by the attestation source that they have attested to the information.",
        "type": "Signature"
      }
    },
    "backboneElement": true
  },
  "VerificationResult_Validator": {
    "display": "Verification Result Validator",
    "description": "Information about the entity validating information",
    "properties": {
      "organization": {
        "key": "organization",
        "display": "Organization",
        "description": "Reference to the organization validating information.",
        "type": "Reference",
        "targetProfile": [
          "Organization"
        ]
      },
      "identityCertificate": {
        "key": "identityCertificate",
        "display": "Identity Certificate",
        "description": "A digital identity certificate associated with the validator.",
        "type": "string"
      },
      "attestationSignature": {
        "key": "attestationSignature",
        "display": "Attestation Signature",
        "description": "Signed assertion by the validator that they have validated the information.",
        "type": "Signature"
      }
    },
    "backboneElement": true
  },
  "VisionPrescription": {
    "display": "VisionPrescription",
    "description": "An authorization for the provision of glasses and/or contact lenses to a patient.",
    "properties": {
      "identifier": {
        "key": "identifier",
        "display": "Identifier",
        "description": "A unique identifier assigned to this vision prescription.",
        "type": "Identifier",
        "array": true
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of the resource instance.",
        "type": "enum",
        "enumValues": [
          "active",
          "cancelled",
          "draft",
          "entered-in-error"
        ]
      },
      "created": {
        "key": "created",
        "display": "Created",
        "description": "The date this resource was created.",
        "type": "dateTime"
      },
      "patient": {
        "key": "patient",
        "display": "Patient",
        "description": "A resource reference to the person to whom the vision prescription applies.",
        "type": "Reference",
        "targetProfile": [
          "Patient"
        ]
      },
      "encounter": {
        "key": "encounter",
        "display": "Encounter",
        "description": "A reference to a resource that identifies the particular occurrence of contact between patient and health care provider during which the prescription was issued.",
        "type": "Reference",
        "targetProfile": [
          "Encounter"
        ]
      },
      "dateWritten": {
        "key": "dateWritten",
        "display": "Date Written",
        "description": "The date (and perhaps time) when the prescription was written.",
        "type": "dateTime"
      },
      "prescriber": {
        "key": "prescriber",
        "display": "Prescriber",
        "description": "The healthcare professional responsible for authorizing the prescription.",
        "type": "Reference",
        "targetProfile": [
          "Practitioner",
          "PractitionerRole"
        ]
      },
      "lensSpecification": {
        "key": "lensSpecification",
        "display": "Lens Specification",
        "description": "Contain the details of  the individual lens specifications and serves as the authorization for the fullfillment by certified professionals.",
        "type": "VisionPrescription_LensSpecification",
        "array": true
      }
    }
  },
  "VisionPrescription_LensSpecification": {
    "display": "Vision Prescription Lens Specification",
    "description": "Vision lens authorization",
    "properties": {
      "product": {
        "key": "product",
        "display": "Product",
        "description": "Identifies the type of vision correction product which is required for the patient.",
        "type": "CodeableConcept"
      },
      "eye": {
        "key": "eye",
        "display": "Eye",
        "description": "The eye for which the lens specification applies.",
        "type": "enum",
        "enumValues": [
          "right",
          "left"
        ]
      },
      "sphere": {
        "key": "sphere",
        "display": "Sphere",
        "description": "Lens power measured in dioptres (0.25 units).",
        "type": "decimal"
      },
      "cylinder": {
        "key": "cylinder",
        "display": "Cylinder",
        "description": "Power adjustment for astigmatism measured in dioptres (0.25 units).",
        "type": "decimal"
      },
      "axis": {
        "key": "axis",
        "display": "Axis",
        "description": "Adjustment for astigmatism measured in integer degrees.",
        "type": "integer"
      },
      "prism": {
        "key": "prism",
        "display": "Prism",
        "description": "Allows for adjustment on two axis.",
        "type": "VisionPrescription_LensSpecification_Prism",
        "array": true
      },
      "add": {
        "key": "add",
        "display": "Add",
        "description": "Power adjustment for multifocal lenses measured in dioptres (0.25 units).",
        "type": "decimal"
      },
      "power": {
        "key": "power",
        "display": "Power",
        "description": "Contact lens power measured in dioptres (0.25 units).",
        "type": "decimal"
      },
      "backCurve": {
        "key": "backCurve",
        "display": "Back Curve",
        "description": "Back curvature measured in millimetres.",
        "type": "decimal"
      },
      "diameter": {
        "key": "diameter",
        "display": "Diameter",
        "description": "Contact lens diameter measured in millimetres.",
        "type": "decimal"
      },
      "duration": {
        "key": "duration",
        "display": "Duration",
        "description": "The recommended maximum wear period for the lens.",
        "type": "Quantity"
      },
      "color": {
        "key": "color",
        "display": "Color",
        "description": "Special color or pattern.",
        "type": "string"
      },
      "brand": {
        "key": "brand",
        "display": "Brand",
        "description": "Brand recommendations or restrictions.",
        "type": "string"
      },
      "note": {
        "key": "note",
        "display": "Note",
        "description": "Notes for special requirements such as coatings and lens materials.",
        "type": "Annotation",
        "array": true
      }
    },
    "backboneElement": true
  },
  "VisionPrescription_LensSpecification_Prism": {
    "display": "Vision Prescription Lens Specification_ Prism",
    "description": "Eye alignment compensation",
    "properties": {
      "amount": {
        "key": "amount",
        "display": "Amount",
        "description": "Amount of prism to compensate for eye alignment in fractional units.",
        "type": "decimal"
      },
      "base": {
        "key": "base",
        "display": "Base",
        "description": "The relative base, or reference lens edge, for the prism.",
        "type": "enum",
        "enumValues": [
          "up",
          "down",
          "in",
          "out"
        ]
      }
    },
    "backboneElement": true
  },
  "MetadataResource": {
    "display": "MetadataResource",
    "description": "Common Ancestor declaration for conformance and knowledge artifact resources.",
    "properties": {
      "url": {
        "key": "url",
        "display": "Url",
        "description": "An absolute URI that is used to identify this metadata resource when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this metadata resource is (or will be) published. This URL can be the target of a canonical reference. It SHALL remain the same when the metadata resource is stored on different servers.",
        "type": "uri"
      },
      "version": {
        "key": "version",
        "display": "Version",
        "description": "The identifier that is used to identify this version of the metadata resource when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the metadata resource author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.",
        "type": "string"
      },
      "name": {
        "key": "name",
        "display": "Name",
        "description": "A natural language name identifying the metadata resource. This name should be usable as an identifier for the module by machine processing applications such as code generation.",
        "type": "string"
      },
      "title": {
        "key": "title",
        "display": "Title",
        "description": "A short, descriptive, user-friendly title for the metadata resource.",
        "type": "string"
      },
      "status": {
        "key": "status",
        "display": "Status",
        "description": "The status of this metadata resource. Enables tracking the life-cycle of the content.",
        "type": "enum",
        "enumValues": [
          "draft",
          "active",
          "retired",
          "unknown"
        ]
      },
      "experimental": {
        "key": "experimental",
        "display": "Experimental",
        "description": "A Boolean value to indicate that this metadata resource is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.",
        "type": "boolean"
      },
      "date": {
        "key": "date",
        "display": "Date",
        "description": "The date  (and optionally time) when the metadata resource was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the metadata resource changes.",
        "type": "dateTime"
      },
      "publisher": {
        "key": "publisher",
        "display": "Publisher",
        "description": "The name of the organization or individual that published the metadata resource.",
        "type": "string"
      },
      "contact": {
        "key": "contact",
        "display": "Contact",
        "description": "Contact details to assist a user in finding and communicating with the publisher.",
        "type": "ContactDetail",
        "array": true
      },
      "description": {
        "key": "description",
        "display": "Description",
        "description": "A free text natural language description of the metadata resource from a consumer's perspective.",
        "type": "markdown"
      },
      "useContext": {
        "key": "useContext",
        "display": "Use Context",
        "description": "The content was developed with a focus and intent of supporting the contexts that are listed. These contexts may be general categories (gender, age, ...) or may be references to specific programs (insurance plans, studies, ...) and may be used to assist with indexing and searching for appropriate metadata resource instances.",
        "type": "UsageContext",
        "array": true
      },
      "jurisdiction": {
        "key": "jurisdiction",
        "display": "Jurisdiction",
        "description": "A legal or geographic region in which the metadata resource is intended to be used.",
        "type": "CodeableConcept",
        "array": true
      }
    }
  }
};

export const resourceTypes = Object.keys(schema).filter(r => !schema[r].backboneElement).sort();
