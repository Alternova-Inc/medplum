/*
 * Generated by com.medplum.generator.Generator
 * Do not edit manually.
 */

package com.medplum.fhir.types;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.Test;

public class TerminologyCapabilitiesVersionTest {

    @Test
    public void testId() {
        assertEquals("x", TerminologyCapabilities.TerminologyCapabilitiesVersion.create().id("x").build().id());
    }

    @Test
    public void testModifierExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, TerminologyCapabilities.TerminologyCapabilitiesVersion.create().modifierExtension(value).build().modifierExtension());
    }

    @Test
    public void testCode() {
        assertEquals("x", TerminologyCapabilities.TerminologyCapabilitiesVersion.create().code("x").build().code());
    }

    @Test
    public void testIsDefault() {
        assertEquals(true, TerminologyCapabilities.TerminologyCapabilitiesVersion.create().isDefault(true).build().isDefault());
    }

    @Test
    public void testCompositional() {
        assertEquals(true, TerminologyCapabilities.TerminologyCapabilitiesVersion.create().compositional(true).build().compositional());
    }

    @Test
    public void testLanguage() {
        final java.util.List<String> value = java.util.Collections.emptyList();
        assertEquals(value, TerminologyCapabilities.TerminologyCapabilitiesVersion.create().language(value).build().language());
    }

    @Test
    public void testFilter() {
        final java.util.List<TerminologyCapabilities.TerminologyCapabilitiesFilter> value = java.util.Collections.emptyList();
        assertEquals(value, TerminologyCapabilities.TerminologyCapabilitiesVersion.create().filter(value).build().filter());
    }

    @Test
    public void testProperty() {
        final java.util.List<String> value = java.util.Collections.emptyList();
        assertEquals(value, TerminologyCapabilities.TerminologyCapabilitiesVersion.create().property(value).build().property());
    }
}
