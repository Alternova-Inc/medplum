/*
 * Generated by com.medplum.generator.Generator
 * Do not edit manually.
 */

package com.medplum.fhir.types;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.Test;

public class QuestionnaireEnableWhenTest {

    @Test
    public void testId() {
        assertEquals("x", Questionnaire.QuestionnaireEnableWhen.create().id("x").build().id());
    }

    @Test
    public void testModifierExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, Questionnaire.QuestionnaireEnableWhen.create().modifierExtension(value).build().modifierExtension());
    }

    @Test
    public void testQuestion() {
        assertEquals("x", Questionnaire.QuestionnaireEnableWhen.create().question("x").build().question());
    }

    @Test
    public void testOperator() {
        assertEquals("x", Questionnaire.QuestionnaireEnableWhen.create().operator("x").build().operator());
    }

    @Test
    public void testAnswerBoolean() {
        assertEquals(true, Questionnaire.QuestionnaireEnableWhen.create().answerBoolean(true).build().answerBoolean());
    }

    @Test
    public void testAnswerDecimal() {
        assertEquals(1, Questionnaire.QuestionnaireEnableWhen.create().answerDecimal(1).build().answerDecimal());
    }

    @Test
    public void testAnswerInteger() {
        assertEquals(1, Questionnaire.QuestionnaireEnableWhen.create().answerInteger(1).build().answerInteger());
    }

    @Test
    public void testAnswerDate() {
        assertEquals("x", Questionnaire.QuestionnaireEnableWhen.create().answerDate("x").build().answerDate());
    }

    @Test
    public void testAnswerDateTime() {
        assertEquals("x", Questionnaire.QuestionnaireEnableWhen.create().answerDateTime("x").build().answerDateTime());
    }

    @Test
    public void testAnswerTime() {
        assertEquals("x", Questionnaire.QuestionnaireEnableWhen.create().answerTime("x").build().answerTime());
    }

    @Test
    public void testAnswerString() {
        assertEquals("x", Questionnaire.QuestionnaireEnableWhen.create().answerString("x").build().answerString());
    }

    @Test
    public void testAnswerCoding() {
        final Coding value = Coding.create().build();
        assertEquals(value, Questionnaire.QuestionnaireEnableWhen.create().answerCoding(value).build().answerCoding());
    }

    @Test
    public void testAnswerQuantity() {
        final Quantity value = Quantity.create().build();
        assertEquals(value, Questionnaire.QuestionnaireEnableWhen.create().answerQuantity(value).build().answerQuantity());
    }

    @Test
    public void testAnswerReference() {
        final Reference value = Reference.create().build();
        assertEquals(value, Questionnaire.QuestionnaireEnableWhen.create().answerReference(value).build().answerReference());
    }
}
