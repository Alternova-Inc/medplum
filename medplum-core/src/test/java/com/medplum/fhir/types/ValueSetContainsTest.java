/*
 * Generated by com.medplum.generator.Generator
 * Do not edit manually.
 */

package com.medplum.fhir.types;

import static org.junit.jupiter.api.Assertions.*;

import jakarta.json.Json;

import org.junit.Test;

public class ValueSetContainsTest {

    @Test
    public void testConstructor() {
        assertNotNull(new ValueSet.ValueSetContains(Json.createObjectBuilder().build()));
    }

    @Test
    public void testBuilderFromJsonObject() {
        assertNotNull(ValueSet.ValueSetContains.create(Json.createObjectBuilder().build()).build());
    }

    @Test
    public void testId() {
        assertEquals("x", ValueSet.ValueSetContains.create().id("x").build().id());
    }

    @Test
    public void testModifierExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, ValueSet.ValueSetContains.create().modifierExtension(value).build().modifierExtension());
    }

    @Test
    public void testSystem() {
        assertEquals("x", ValueSet.ValueSetContains.create().system("x").build().system());
    }

    @Test
    public void testAbstractValue() {
        assertEquals(true, ValueSet.ValueSetContains.create().abstractValue(true).build().abstractValue());
    }

    @Test
    public void testInactive() {
        assertEquals(true, ValueSet.ValueSetContains.create().inactive(true).build().inactive());
    }

    @Test
    public void testVersion() {
        assertEquals("x", ValueSet.ValueSetContains.create().version("x").build().version());
    }

    @Test
    public void testCode() {
        assertEquals("x", ValueSet.ValueSetContains.create().code("x").build().code());
    }

    @Test
    public void testDisplay() {
        assertEquals("x", ValueSet.ValueSetContains.create().display("x").build().display());
    }

    @Test
    public void testDesignation() {
        final java.util.List<ValueSet.ValueSetDesignation> value = java.util.Collections.emptyList();
        assertEquals(value, ValueSet.ValueSetContains.create().designation(value).build().designation());
    }

    @Test
    public void testContains() {
        final java.util.List<ValueSet.ValueSetContains> value = java.util.Collections.emptyList();
        assertEquals(value, ValueSet.ValueSetContains.create().contains(value).build().contains());
    }
}
