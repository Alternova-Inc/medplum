/*
 * Generated by com.medplum.generator.Generator
 * Do not edit manually.
 */

package com.medplum.fhir.types;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.Test;

public class ContractOfferTest {

    @Test
    public void testId() {
        assertEquals("x", Contract.ContractOffer.create().id("x").build().id());
    }

    @Test
    public void testModifierExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, Contract.ContractOffer.create().modifierExtension(value).build().modifierExtension());
    }

    @Test
    public void testIdentifier() {
        final java.util.List<Identifier> value = java.util.Collections.emptyList();
        assertEquals(value, Contract.ContractOffer.create().identifier(value).build().identifier());
    }

    @Test
    public void testParty() {
        final java.util.List<Contract.ContractParty> value = java.util.Collections.emptyList();
        assertEquals(value, Contract.ContractOffer.create().party(value).build().party());
    }

    @Test
    public void testTopic() {
        final Reference value = Reference.create().build();
        assertEquals(value, Contract.ContractOffer.create().topic(value).build().topic());
    }

    @Test
    public void testType() {
        final CodeableConcept value = CodeableConcept.create().build();
        assertEquals(value, Contract.ContractOffer.create().type(value).build().type());
    }

    @Test
    public void testDecision() {
        final CodeableConcept value = CodeableConcept.create().build();
        assertEquals(value, Contract.ContractOffer.create().decision(value).build().decision());
    }

    @Test
    public void testDecisionMode() {
        final java.util.List<CodeableConcept> value = java.util.Collections.emptyList();
        assertEquals(value, Contract.ContractOffer.create().decisionMode(value).build().decisionMode());
    }

    @Test
    public void testAnswer() {
        final java.util.List<Contract.ContractAnswer> value = java.util.Collections.emptyList();
        assertEquals(value, Contract.ContractOffer.create().answer(value).build().answer());
    }

    @Test
    public void testText() {
        assertEquals("x", Contract.ContractOffer.create().text("x").build().text());
    }

    @Test
    public void testLinkId() {
        final java.util.List<String> value = java.util.Collections.emptyList();
        assertEquals(value, Contract.ContractOffer.create().linkId(value).build().linkId());
    }

    @Test
    public void testSecurityLabelNumber() {
        final java.util.List<Integer> value = java.util.Collections.emptyList();
        assertEquals(value, Contract.ContractOffer.create().securityLabelNumber(value).build().securityLabelNumber());
    }
}
