/*
 * Generated by com.medplum.generator.Generator
 * Do not edit manually.
 */

package com.medplum.fhir.types;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.Test;

public class GoalTargetTest {

    @Test
    public void testId() {
        assertEquals("x", Goal.GoalTarget.create().id("x").build().id());
    }

    @Test
    public void testModifierExtension() {
        final java.util.List<Extension> value = java.util.Collections.emptyList();
        assertEquals(value, Goal.GoalTarget.create().modifierExtension(value).build().modifierExtension());
    }

    @Test
    public void testMeasure() {
        final CodeableConcept value = CodeableConcept.create().build();
        assertEquals(value, Goal.GoalTarget.create().measure(value).build().measure());
    }

    @Test
    public void testDetailQuantity() {
        final Quantity value = Quantity.create().build();
        assertEquals(value, Goal.GoalTarget.create().detailQuantity(value).build().detailQuantity());
    }

    @Test
    public void testDetailRange() {
        final Range value = Range.create().build();
        assertEquals(value, Goal.GoalTarget.create().detailRange(value).build().detailRange());
    }

    @Test
    public void testDetailCodeableConcept() {
        final CodeableConcept value = CodeableConcept.create().build();
        assertEquals(value, Goal.GoalTarget.create().detailCodeableConcept(value).build().detailCodeableConcept());
    }

    @Test
    public void testDetailString() {
        assertEquals("x", Goal.GoalTarget.create().detailString("x").build().detailString());
    }

    @Test
    public void testDetailBoolean() {
        assertEquals(true, Goal.GoalTarget.create().detailBoolean(true).build().detailBoolean());
    }

    @Test
    public void testDetailInteger() {
        assertEquals(1, Goal.GoalTarget.create().detailInteger(1).build().detailInteger());
    }

    @Test
    public void testDetailRatio() {
        final Ratio value = Ratio.create().build();
        assertEquals(value, Goal.GoalTarget.create().detailRatio(value).build().detailRatio());
    }

    @Test
    public void testDueDate() {
        assertEquals("x", Goal.GoalTarget.create().dueDate("x").build().dueDate());
    }

    @Test
    public void testDueDuration() {
        final Duration value = Duration.create().build();
        assertEquals(value, Goal.GoalTarget.create().dueDuration(value).build().dueDuration());
    }
}
