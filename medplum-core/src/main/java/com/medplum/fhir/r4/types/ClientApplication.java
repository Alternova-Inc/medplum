/*
 * Generated by com.medplum.generator.Generator
 * Do not edit manually.
 */

package com.medplum.fhir.r4.types;

import jakarta.json.JsonObject;

/**
 * OAuth client application.
 */
public class ClientApplication extends FhirResource {
    public static final String RESOURCE_TYPE = "ClientApplication";
    public static final String PROPERTY_RESOURCE_TYPE = "resourceType";
    public static final String PROPERTY_ID = "id";
    public static final String PROPERTY_SECRET = "secret";
    public static final String PROPERTY_REDIRECT_URI = "redirectUri";

    public static Builder create() {
        return new Builder();
    }

    public static Builder create(final JsonObject data) {
        return new Builder(data);
    }

    public ClientApplication(final JsonObject data) {
        super(data);
    }

    /**
     * Client secret string used to verify the identity of a client.
     */
    public String secret() {
        return getString(PROPERTY_SECRET);
    }

    /**
     * Redirect URI used when redirecting a client back to the client
     * application.
     */
    public String redirectUri() {
        return getString(PROPERTY_REDIRECT_URI);
    }

    public static class Builder extends FhirResource.Builder {

        private Builder() {
            super(RESOURCE_TYPE);
        }

        private Builder(final JsonObject data) {
            super(RESOURCE_TYPE, data);
        }

        public Builder resourceType(final String resourceType) {
            b.add(PROPERTY_RESOURCE_TYPE, resourceType);
            return this;
        }

        public Builder id(final String id) {
            b.add(PROPERTY_ID, id);
            return this;
        }

        public Builder secret(final String secret) {
            b.add(PROPERTY_SECRET, secret);
            return this;
        }

        public Builder redirectUri(final String redirectUri) {
            b.add(PROPERTY_REDIRECT_URI, redirectUri);
            return this;
        }

        public ClientApplication build() {
            return new ClientApplication(b.build());
        }
    }
}
